<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Cubic SDK Documentation on Cubic SDK -- Cobalt</title>
    <link>https://cobaltspeech.github.io/sdk-cubic/</link>
    <description>Recent content in Cubic SDK Documentation on Cubic SDK -- Cobalt</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="https://cobaltspeech.github.io/sdk-cubic/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Quick Start</title>
      <link>https://cobaltspeech.github.io/sdk-cubic/getting-started/quickstart/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cobaltspeech.github.io/sdk-cubic/getting-started/quickstart/</guid>
      <description>To evaluate Cobalt&amp;rsquo;s speech recognition, you can access the Cubic web demo or can download a command-line interface built using our Go SDK to specify an audio file or list of files and get transcripts back from a running instance of cubicsvr. The source code for cubic-cli is available to use as an example client.
The command-line tool can call a local instance of Cubic (see Installing the cubicsvr Image) or the demo server.</description>
    </item>
    
    <item>
      <title>Installing the cubicsvr Image</title>
      <link>https://cobaltspeech.github.io/sdk-cubic/getting-started/cubic_docker/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cobaltspeech.github.io/sdk-cubic/getting-started/cubic_docker/</guid>
      <description>&lt;p&gt;The SDK is used to call an instance of cubicsvr using gRPC.  Cobalt distributes a docker image that contains the cubicsvr binary and model files.
It is not necessary to go through through these steps to call the demo server for evaluation purposes, only to run cubicsvr on premises.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Installing the SDK</title>
      <link>https://cobaltspeech.github.io/sdk-cubic/getting-started/installation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cobaltspeech.github.io/sdk-cubic/getting-started/installation/</guid>
      <description>&lt;p&gt;Instructions for installing the SDK are language specific.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Setup Connection</title>
      <link>https://cobaltspeech.github.io/sdk-cubic/getting-started/connecting/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cobaltspeech.github.io/sdk-cubic/getting-started/connecting/</guid>
      <description>&lt;p&gt;Once you have your Cubic server up and running, let&amp;rsquo;s see how we can use the SDK
to connect to it.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Synchronous Recognition</title>
      <link>https://cobaltspeech.github.io/sdk-cubic/getting-started/recognize/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cobaltspeech.github.io/sdk-cubic/getting-started/recognize/</guid>
      <description>&lt;p&gt;The following example shows how to transcribe a short audio clip using Cubic&amp;rsquo;s
Synchoronous Recognize Request. It is assumed that the audio file contains raw
samples, PCM16SLE like Cubic expects.  We will query the server for available
models and use the first model to transcribe this speech.&lt;/p&gt;

&lt;p&gt;Synchronous recognize requests are suitable only for audio clips shorter than 30
seconds. In general, it is strongly recommended that you use streaming
recognition.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Streaming Recognition</title>
      <link>https://cobaltspeech.github.io/sdk-cubic/getting-started/streaming/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cobaltspeech.github.io/sdk-cubic/getting-started/streaming/</guid>
      <description>&lt;p&gt;The following example shows how to transcribe an audio file using Cubicâ€™s
Streaming Recognize Request. The example uses a WAV file as input to the
streaming recognition. We will query the server for available models and
use the first model to transcribe the speech.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Cubic Protobuf API Docs</title>
      <link>https://cobaltspeech.github.io/sdk-cubic/protobuf/autogen-doc-cubic-proto/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cobaltspeech.github.io/sdk-cubic/protobuf/autogen-doc-cubic-proto/</guid>
      <description>cubic.proto Service: Cubic Service that implements the Cobalt Cubic Speech Recognition API
   Method Name Request Type Response Type Description     Version .google.protobuf.Empty VersionResponse Queries the Version of the Server   ListModels ListModelsRequest ListModelsResponse Retrieves a list of available speech recognition models   Recognize RecognizeRequest RecognitionResponse Performs synchronous speech recognition: receive results after all audio has been sent and processed. It is expected that this request be typically used for short audio content: less than a minute long.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://cobaltspeech.github.io/sdk-cubic/_header/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cobaltspeech.github.io/sdk-cubic/_header/</guid>
      <description>Cubic SDK &amp;ndash; Cobalt</description>
    </item>
    
  </channel>
</rss>