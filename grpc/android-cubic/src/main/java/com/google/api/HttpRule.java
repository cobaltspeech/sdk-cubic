// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/api/http.proto

package com.google.api;

/**
 * <pre>
 * # gRPC Transcoding
 * gRPC Transcoding is a feature for mapping between a gRPC method and one or
 * more HTTP REST endpoints. It allows developers to build a single API service
 * that supports both gRPC APIs and REST APIs. Many systems, including [Google
 * APIs](https://github.com/googleapis/googleapis),
 * [Cloud Endpoints](https://cloud.google.com/endpoints), [gRPC
 * Gateway](https://github.com/grpc-ecosystem/grpc-gateway),
 * and [Envoy](https://github.com/envoyproxy/envoy) proxy support this feature
 * and use it for large scale production services.
 * `HttpRule` defines the schema of the gRPC/REST mapping. The mapping specifies
 * how different portions of the gRPC request message are mapped to the URL
 * path, URL query parameters, and HTTP request body. It also controls how the
 * gRPC response message is mapped to the HTTP response body. `HttpRule` is
 * typically specified as an `google.api.http` annotation on the gRPC method.
 * Each mapping specifies a URL path template and an HTTP method. The path
 * template may refer to one or more fields in the gRPC request message, as long
 * as each field is a non-repeated field with a primitive (non-message) type.
 * The path template controls how fields of the request message are mapped to
 * the URL path.
 * Example:
 *     service Messaging {
 *       rpc GetMessage(GetMessageRequest) returns (Message) {
 *         option (google.api.http) = {
 *             get: "/v1/{name=messages/&#42;}"
 *         };
 *       }
 *     }
 *     message GetMessageRequest {
 *       string name = 1; // Mapped to URL path.
 *     }
 *     message Message {
 *       string text = 1; // The resource content.
 *     }
 * This enables an HTTP REST to gRPC mapping as below:
 * HTTP | gRPC
 * -----|-----
 * `GET /v1/messages/123456`  | `GetMessage(name: "messages/123456")`
 * Any fields in the request message which are not bound by the path template
 * automatically become HTTP query parameters if there is no HTTP request body.
 * For example:
 *     service Messaging {
 *       rpc GetMessage(GetMessageRequest) returns (Message) {
 *         option (google.api.http) = {
 *             get:"/v1/messages/{message_id}"
 *         };
 *       }
 *     }
 *     message GetMessageRequest {
 *       message SubMessage {
 *         string subfield = 1;
 *       }
 *       string message_id = 1; // Mapped to URL path.
 *       int64 revision = 2;    // Mapped to URL query parameter `revision`.
 *       SubMessage sub = 3;    // Mapped to URL query parameter `sub.subfield`.
 *     }
 * This enables a HTTP JSON to RPC mapping as below:
 * HTTP | gRPC
 * -----|-----
 * `GET /v1/messages/123456?revision=2&amp;sub.subfield=foo` |
 * `GetMessage(message_id: "123456" revision: 2 sub: SubMessage(subfield:
 * "foo"))`
 * Note that fields which are mapped to URL query parameters must have a
 * primitive type or a repeated primitive type or a non-repeated message type.
 * In the case of a repeated type, the parameter can be repeated in the URL
 * as `...?param=A&amp;param=B`. In the case of a message type, each field of the
 * message is mapped to a separate parameter, such as
 * `...?foo.a=A&amp;foo.b=B&amp;foo.c=C`.
 * For HTTP methods that allow a request body, the `body` field
 * specifies the mapping. Consider a REST update method on the
 * message resource collection:
 *     service Messaging {
 *       rpc UpdateMessage(UpdateMessageRequest) returns (Message) {
 *         option (google.api.http) = {
 *           patch: "/v1/messages/{message_id}"
 *           body: "message"
 *         };
 *       }
 *     }
 *     message UpdateMessageRequest {
 *       string message_id = 1; // mapped to the URL
 *       Message message = 2;   // mapped to the body
 *     }
 * The following HTTP JSON to RPC mapping is enabled, where the
 * representation of the JSON in the request body is determined by
 * protos JSON encoding:
 * HTTP | gRPC
 * -----|-----
 * `PATCH /v1/messages/123456 { "text": "Hi!" }` | `UpdateMessage(message_id:
 * "123456" message { text: "Hi!" })`
 * The special name `*` can be used in the body mapping to define that
 * every field not bound by the path template should be mapped to the
 * request body.  This enables the following alternative definition of
 * the update method:
 *     service Messaging {
 *       rpc UpdateMessage(Message) returns (Message) {
 *         option (google.api.http) = {
 *           patch: "/v1/messages/{message_id}"
 *           body: "*"
 *         };
 *       }
 *     }
 *     message Message {
 *       string message_id = 1;
 *       string text = 2;
 *     }
 * The following HTTP JSON to RPC mapping is enabled:
 * HTTP | gRPC
 * -----|-----
 * `PATCH /v1/messages/123456 { "text": "Hi!" }` | `UpdateMessage(message_id:
 * "123456" text: "Hi!")`
 * Note that when using `*` in the body mapping, it is not possible to
 * have HTTP parameters, as all fields not bound by the path end in
 * the body. This makes this option more rarely used in practice when
 * defining REST APIs. The common usage of `*` is in custom methods
 * which don't use the URL at all for transferring data.
 * It is possible to define multiple HTTP methods for one RPC by using
 * the `additional_bindings` option. Example:
 *     service Messaging {
 *       rpc GetMessage(GetMessageRequest) returns (Message) {
 *         option (google.api.http) = {
 *           get: "/v1/messages/{message_id}"
 *           additional_bindings {
 *             get: "/v1/users/{user_id}/messages/{message_id}"
 *           }
 *         };
 *       }
 *     }
 *     message GetMessageRequest {
 *       string message_id = 1;
 *       string user_id = 2;
 *     }
 * This enables the following two alternative HTTP JSON to RPC mappings:
 * HTTP | gRPC
 * -----|-----
 * `GET /v1/messages/123456` | `GetMessage(message_id: "123456")`
 * `GET /v1/users/me/messages/123456` | `GetMessage(user_id: "me" message_id:
 * "123456")`
 * ## Rules for HTTP mapping
 * 1. Leaf request fields (recursive expansion nested messages in the request
 *    message) are classified into three categories:
 *    - Fields referred by the path template. They are passed via the URL path.
 *    - Fields referred by the [HttpRule.body][google.api.HttpRule.body]. They are passed via the HTTP
 *      request body.
 *    - All other fields are passed via the URL query parameters, and the
 *      parameter name is the field path in the request message. A repeated
 *      field can be represented as multiple query parameters under the same
 *      name.
 *  2. If [HttpRule.body][google.api.HttpRule.body] is "*", there is no URL query parameter, all fields
 *     are passed via URL path and HTTP request body.
 *  3. If [HttpRule.body][google.api.HttpRule.body] is omitted, there is no HTTP request body, all
 *     fields are passed via URL path and URL query parameters.
 * ### Path template syntax
 *     Template = "/" Segments [ Verb ] ;
 *     Segments = Segment { "/" Segment } ;
 *     Segment  = "*" | "**" | LITERAL | Variable ;
 *     Variable = "{" FieldPath [ "=" Segments ] "}" ;
 *     FieldPath = IDENT { "." IDENT } ;
 *     Verb     = ":" LITERAL ;
 * The syntax `*` matches a single URL path segment. The syntax `**` matches
 * zero or more URL path segments, which must be the last part of the URL path
 * except the `Verb`.
 * The syntax `Variable` matches part of the URL path as specified by its
 * template. A variable template must not contain other variables. If a variable
 * matches a single path segment, its template may be omitted, e.g. `{var}`
 * is equivalent to `{var=*}`.
 * The syntax `LITERAL` matches literal text in the URL path. If the `LITERAL`
 * contains any reserved character, such characters should be percent-encoded
 * before the matching.
 * If a variable contains exactly one path segment, such as `"{var}"` or
 * `"{var=*}"`, when such a variable is expanded into a URL path on the client
 * side, all characters except `[-_.~0-9a-zA-Z]` are percent-encoded. The
 * server side does the reverse decoding. Such variables show up in the
 * [Discovery
 * Document](https://developers.google.com/discovery/v1/reference/apis) as
 * `{var}`.
 * If a variable contains multiple path segments, such as `"{var=foo/&#42;}"`
 * or `"{var=**}"`, when such a variable is expanded into a URL path on the
 * client side, all characters except `[-_.~/0-9a-zA-Z]` are percent-encoded.
 * The server side does the reverse decoding, except "%2F" and "%2f" are left
 * unchanged. Such variables show up in the
 * [Discovery
 * Document](https://developers.google.com/discovery/v1/reference/apis) as
 * `{+var}`.
 * ## Using gRPC API Service Configuration
 * gRPC API Service Configuration (service config) is a configuration language
 * for configuring a gRPC service to become a user-facing product. The
 * service config is simply the YAML representation of the `google.api.Service`
 * proto message.
 * As an alternative to annotating your proto file, you can configure gRPC
 * transcoding in your service config YAML files. You do this by specifying a
 * `HttpRule` that maps the gRPC method to a REST endpoint, achieving the same
 * effect as the proto annotation. This can be particularly useful if you
 * have a proto that is reused in multiple services. Note that any transcoding
 * specified in the service config will override any matching transcoding
 * configuration in the proto.
 * Example:
 *     http:
 *       rules:
 *         # Selects a gRPC method and applies HttpRule to it.
 *         - selector: example.v1.Messaging.GetMessage
 *           get: /v1/messages/{message_id}/{sub.subfield}
 * ## Special notes
 * When gRPC Transcoding is used to map a gRPC to JSON REST endpoints, the
 * proto to JSON conversion must follow the [proto3
 * specification](https://developers.google.com/protocol-buffers/docs/proto3#json).
 * While the single segment variable follows the semantics of
 * [RFC 6570](https://tools.ietf.org/html/rfc6570) Section 3.2.2 Simple String
 * Expansion, the multi segment variable **does not** follow RFC 6570 Section
 * 3.2.3 Reserved Expansion. The reason is that the Reserved Expansion
 * does not expand special characters like `?` and `#`, which would lead
 * to invalid URLs. As the result, gRPC Transcoding uses a custom encoding
 * for multi segment variables.
 * The path variables **must not** refer to any repeated or mapped field,
 * because client libraries are not capable of handling such variable expansion.
 * The path variables **must not** capture the leading "/" character. The reason
 * is that the most common use case "{var}" does not capture the leading "/"
 * character. For consistency, all path variables must share the same behavior.
 * Repeated message fields must not be mapped to URL query parameters, because
 * no client library can support such complicated mapping.
 * If an API needs to use a JSON array for request or response body, it can map
 * the request or response body to a repeated field. However, some gRPC
 * Transcoding implementations may not support this feature.
 * </pre>
 *
 * Protobuf type {@code google.api.HttpRule}
 */
public  final class HttpRule extends
    com.google.protobuf.GeneratedMessageLite<
        HttpRule, HttpRule.Builder> implements
    // @@protoc_insertion_point(message_implements:google.api.HttpRule)
    HttpRuleOrBuilder {
  private HttpRule() {
    selector_ = "";
    body_ = "";
    responseBody_ = "";
    additionalBindings_ = emptyProtobufList();
  }
  private int bitField0_;
  private int patternCase_ = 0;
  private java.lang.Object pattern_;
  public enum PatternCase
      implements com.google.protobuf.Internal.EnumLite {
    GET(2),
    PUT(3),
    POST(4),
    DELETE(5),
    PATCH(6),
    CUSTOM(8),
    PATTERN_NOT_SET(0);
    private final int value;
    private PatternCase(int value) {
      this.value = value;
    }
    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static PatternCase valueOf(int value) {
      return forNumber(value);
    }

    public static PatternCase forNumber(int value) {
      switch (value) {
        case 2: return GET;
        case 3: return PUT;
        case 4: return POST;
        case 5: return DELETE;
        case 6: return PATCH;
        case 8: return CUSTOM;
        case 0: return PATTERN_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public PatternCase
  getPatternCase() {
    return PatternCase.forNumber(
        patternCase_);
  }

  private void clearPattern() {
    patternCase_ = 0;
    pattern_ = null;
  }

  public static final int SELECTOR_FIELD_NUMBER = 1;
  private java.lang.String selector_;
  /**
   * <pre>
   * Selects a method to which this rule applies.
   * Refer to [selector][google.api.DocumentationRule.selector] for syntax details.
   * </pre>
   *
   * <code>optional string selector = 1;</code>
   */
  public java.lang.String getSelector() {
    return selector_;
  }
  /**
   * <pre>
   * Selects a method to which this rule applies.
   * Refer to [selector][google.api.DocumentationRule.selector] for syntax details.
   * </pre>
   *
   * <code>optional string selector = 1;</code>
   */
  public com.google.protobuf.ByteString
      getSelectorBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(selector_);
  }
  /**
   * <pre>
   * Selects a method to which this rule applies.
   * Refer to [selector][google.api.DocumentationRule.selector] for syntax details.
   * </pre>
   *
   * <code>optional string selector = 1;</code>
   */
  private void setSelector(
      java.lang.String value) {
    if (value == null) {
    throw new NullPointerException();
  }
  
    selector_ = value;
  }
  /**
   * <pre>
   * Selects a method to which this rule applies.
   * Refer to [selector][google.api.DocumentationRule.selector] for syntax details.
   * </pre>
   *
   * <code>optional string selector = 1;</code>
   */
  private void clearSelector() {
    
    selector_ = getDefaultInstance().getSelector();
  }
  /**
   * <pre>
   * Selects a method to which this rule applies.
   * Refer to [selector][google.api.DocumentationRule.selector] for syntax details.
   * </pre>
   *
   * <code>optional string selector = 1;</code>
   */
  private void setSelectorBytes(
      com.google.protobuf.ByteString value) {
    if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
    
    selector_ = value.toStringUtf8();
  }

  public static final int GET_FIELD_NUMBER = 2;
  /**
   * <pre>
   * Maps to HTTP GET. Used for listing and getting information about
   * resources.
   * </pre>
   *
   * <code>optional string get = 2;</code>
   */
  public java.lang.String getGet() {
    java.lang.String ref = "";
    if (patternCase_ == 2) {
      ref = (java.lang.String) pattern_;
    }
    return ref;
  }
  /**
   * <pre>
   * Maps to HTTP GET. Used for listing and getting information about
   * resources.
   * </pre>
   *
   * <code>optional string get = 2;</code>
   */
  public com.google.protobuf.ByteString
      getGetBytes() {
    java.lang.String ref = "";
    if (patternCase_ == 2) {
      ref = (java.lang.String) pattern_;
    }
    return com.google.protobuf.ByteString.copyFromUtf8(ref);
  }
  /**
   * <pre>
   * Maps to HTTP GET. Used for listing and getting information about
   * resources.
   * </pre>
   *
   * <code>optional string get = 2;</code>
   */
  private void setGet(
      java.lang.String value) {
    if (value == null) {
    throw new NullPointerException();
  }
  patternCase_ = 2;
    pattern_ = value;
  }
  /**
   * <pre>
   * Maps to HTTP GET. Used for listing and getting information about
   * resources.
   * </pre>
   *
   * <code>optional string get = 2;</code>
   */
  private void clearGet() {
    if (patternCase_ == 2) {
      patternCase_ = 0;
      pattern_ = null;
    }
  }
  /**
   * <pre>
   * Maps to HTTP GET. Used for listing and getting information about
   * resources.
   * </pre>
   *
   * <code>optional string get = 2;</code>
   */
  private void setGetBytes(
      com.google.protobuf.ByteString value) {
    if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
    patternCase_ = 2;
    pattern_ = value.toStringUtf8();
  }

  public static final int PUT_FIELD_NUMBER = 3;
  /**
   * <pre>
   * Maps to HTTP PUT. Used for replacing a resource.
   * </pre>
   *
   * <code>optional string put = 3;</code>
   */
  public java.lang.String getPut() {
    java.lang.String ref = "";
    if (patternCase_ == 3) {
      ref = (java.lang.String) pattern_;
    }
    return ref;
  }
  /**
   * <pre>
   * Maps to HTTP PUT. Used for replacing a resource.
   * </pre>
   *
   * <code>optional string put = 3;</code>
   */
  public com.google.protobuf.ByteString
      getPutBytes() {
    java.lang.String ref = "";
    if (patternCase_ == 3) {
      ref = (java.lang.String) pattern_;
    }
    return com.google.protobuf.ByteString.copyFromUtf8(ref);
  }
  /**
   * <pre>
   * Maps to HTTP PUT. Used for replacing a resource.
   * </pre>
   *
   * <code>optional string put = 3;</code>
   */
  private void setPut(
      java.lang.String value) {
    if (value == null) {
    throw new NullPointerException();
  }
  patternCase_ = 3;
    pattern_ = value;
  }
  /**
   * <pre>
   * Maps to HTTP PUT. Used for replacing a resource.
   * </pre>
   *
   * <code>optional string put = 3;</code>
   */
  private void clearPut() {
    if (patternCase_ == 3) {
      patternCase_ = 0;
      pattern_ = null;
    }
  }
  /**
   * <pre>
   * Maps to HTTP PUT. Used for replacing a resource.
   * </pre>
   *
   * <code>optional string put = 3;</code>
   */
  private void setPutBytes(
      com.google.protobuf.ByteString value) {
    if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
    patternCase_ = 3;
    pattern_ = value.toStringUtf8();
  }

  public static final int POST_FIELD_NUMBER = 4;
  /**
   * <pre>
   * Maps to HTTP POST. Used for creating a resource or performing an action.
   * </pre>
   *
   * <code>optional string post = 4;</code>
   */
  public java.lang.String getPost() {
    java.lang.String ref = "";
    if (patternCase_ == 4) {
      ref = (java.lang.String) pattern_;
    }
    return ref;
  }
  /**
   * <pre>
   * Maps to HTTP POST. Used for creating a resource or performing an action.
   * </pre>
   *
   * <code>optional string post = 4;</code>
   */
  public com.google.protobuf.ByteString
      getPostBytes() {
    java.lang.String ref = "";
    if (patternCase_ == 4) {
      ref = (java.lang.String) pattern_;
    }
    return com.google.protobuf.ByteString.copyFromUtf8(ref);
  }
  /**
   * <pre>
   * Maps to HTTP POST. Used for creating a resource or performing an action.
   * </pre>
   *
   * <code>optional string post = 4;</code>
   */
  private void setPost(
      java.lang.String value) {
    if (value == null) {
    throw new NullPointerException();
  }
  patternCase_ = 4;
    pattern_ = value;
  }
  /**
   * <pre>
   * Maps to HTTP POST. Used for creating a resource or performing an action.
   * </pre>
   *
   * <code>optional string post = 4;</code>
   */
  private void clearPost() {
    if (patternCase_ == 4) {
      patternCase_ = 0;
      pattern_ = null;
    }
  }
  /**
   * <pre>
   * Maps to HTTP POST. Used for creating a resource or performing an action.
   * </pre>
   *
   * <code>optional string post = 4;</code>
   */
  private void setPostBytes(
      com.google.protobuf.ByteString value) {
    if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
    patternCase_ = 4;
    pattern_ = value.toStringUtf8();
  }

  public static final int DELETE_FIELD_NUMBER = 5;
  /**
   * <pre>
   * Maps to HTTP DELETE. Used for deleting a resource.
   * </pre>
   *
   * <code>optional string delete = 5;</code>
   */
  public java.lang.String getDelete() {
    java.lang.String ref = "";
    if (patternCase_ == 5) {
      ref = (java.lang.String) pattern_;
    }
    return ref;
  }
  /**
   * <pre>
   * Maps to HTTP DELETE. Used for deleting a resource.
   * </pre>
   *
   * <code>optional string delete = 5;</code>
   */
  public com.google.protobuf.ByteString
      getDeleteBytes() {
    java.lang.String ref = "";
    if (patternCase_ == 5) {
      ref = (java.lang.String) pattern_;
    }
    return com.google.protobuf.ByteString.copyFromUtf8(ref);
  }
  /**
   * <pre>
   * Maps to HTTP DELETE. Used for deleting a resource.
   * </pre>
   *
   * <code>optional string delete = 5;</code>
   */
  private void setDelete(
      java.lang.String value) {
    if (value == null) {
    throw new NullPointerException();
  }
  patternCase_ = 5;
    pattern_ = value;
  }
  /**
   * <pre>
   * Maps to HTTP DELETE. Used for deleting a resource.
   * </pre>
   *
   * <code>optional string delete = 5;</code>
   */
  private void clearDelete() {
    if (patternCase_ == 5) {
      patternCase_ = 0;
      pattern_ = null;
    }
  }
  /**
   * <pre>
   * Maps to HTTP DELETE. Used for deleting a resource.
   * </pre>
   *
   * <code>optional string delete = 5;</code>
   */
  private void setDeleteBytes(
      com.google.protobuf.ByteString value) {
    if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
    patternCase_ = 5;
    pattern_ = value.toStringUtf8();
  }

  public static final int PATCH_FIELD_NUMBER = 6;
  /**
   * <pre>
   * Maps to HTTP PATCH. Used for updating a resource.
   * </pre>
   *
   * <code>optional string patch = 6;</code>
   */
  public java.lang.String getPatch() {
    java.lang.String ref = "";
    if (patternCase_ == 6) {
      ref = (java.lang.String) pattern_;
    }
    return ref;
  }
  /**
   * <pre>
   * Maps to HTTP PATCH. Used for updating a resource.
   * </pre>
   *
   * <code>optional string patch = 6;</code>
   */
  public com.google.protobuf.ByteString
      getPatchBytes() {
    java.lang.String ref = "";
    if (patternCase_ == 6) {
      ref = (java.lang.String) pattern_;
    }
    return com.google.protobuf.ByteString.copyFromUtf8(ref);
  }
  /**
   * <pre>
   * Maps to HTTP PATCH. Used for updating a resource.
   * </pre>
   *
   * <code>optional string patch = 6;</code>
   */
  private void setPatch(
      java.lang.String value) {
    if (value == null) {
    throw new NullPointerException();
  }
  patternCase_ = 6;
    pattern_ = value;
  }
  /**
   * <pre>
   * Maps to HTTP PATCH. Used for updating a resource.
   * </pre>
   *
   * <code>optional string patch = 6;</code>
   */
  private void clearPatch() {
    if (patternCase_ == 6) {
      patternCase_ = 0;
      pattern_ = null;
    }
  }
  /**
   * <pre>
   * Maps to HTTP PATCH. Used for updating a resource.
   * </pre>
   *
   * <code>optional string patch = 6;</code>
   */
  private void setPatchBytes(
      com.google.protobuf.ByteString value) {
    if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
    patternCase_ = 6;
    pattern_ = value.toStringUtf8();
  }

  public static final int CUSTOM_FIELD_NUMBER = 8;
  /**
   * <pre>
   * The custom pattern is used for specifying an HTTP method that is not
   * included in the `pattern` field, such as HEAD, or "*" to leave the
   * HTTP method unspecified for this rule. The wild-card rule is useful
   * for services that provide content to Web (HTML) clients.
   * </pre>
   *
   * <code>optional .google.api.CustomHttpPattern custom = 8;</code>
   */
  public com.google.api.CustomHttpPattern getCustom() {
    if (patternCase_ == 8) {
       return (com.google.api.CustomHttpPattern) pattern_;
    }
    return com.google.api.CustomHttpPattern.getDefaultInstance();
  }
  /**
   * <pre>
   * The custom pattern is used for specifying an HTTP method that is not
   * included in the `pattern` field, such as HEAD, or "*" to leave the
   * HTTP method unspecified for this rule. The wild-card rule is useful
   * for services that provide content to Web (HTML) clients.
   * </pre>
   *
   * <code>optional .google.api.CustomHttpPattern custom = 8;</code>
   */
  private void setCustom(com.google.api.CustomHttpPattern value) {
    if (value == null) {
      throw new NullPointerException();
    }
    pattern_ = value;
    patternCase_ = 8;
  }
  /**
   * <pre>
   * The custom pattern is used for specifying an HTTP method that is not
   * included in the `pattern` field, such as HEAD, or "*" to leave the
   * HTTP method unspecified for this rule. The wild-card rule is useful
   * for services that provide content to Web (HTML) clients.
   * </pre>
   *
   * <code>optional .google.api.CustomHttpPattern custom = 8;</code>
   */
  private void setCustom(
      com.google.api.CustomHttpPattern.Builder builderForValue) {
    pattern_ = builderForValue.build();
    patternCase_ = 8;
  }
  /**
   * <pre>
   * The custom pattern is used for specifying an HTTP method that is not
   * included in the `pattern` field, such as HEAD, or "*" to leave the
   * HTTP method unspecified for this rule. The wild-card rule is useful
   * for services that provide content to Web (HTML) clients.
   * </pre>
   *
   * <code>optional .google.api.CustomHttpPattern custom = 8;</code>
   */
  private void mergeCustom(com.google.api.CustomHttpPattern value) {
    if (patternCase_ == 8 &&
        pattern_ != com.google.api.CustomHttpPattern.getDefaultInstance()) {
      pattern_ = com.google.api.CustomHttpPattern.newBuilder((com.google.api.CustomHttpPattern) pattern_)
          .mergeFrom(value).buildPartial();
    } else {
      pattern_ = value;
    }
    patternCase_ = 8;
  }
  /**
   * <pre>
   * The custom pattern is used for specifying an HTTP method that is not
   * included in the `pattern` field, such as HEAD, or "*" to leave the
   * HTTP method unspecified for this rule. The wild-card rule is useful
   * for services that provide content to Web (HTML) clients.
   * </pre>
   *
   * <code>optional .google.api.CustomHttpPattern custom = 8;</code>
   */
  private void clearCustom() {
    if (patternCase_ == 8) {
      patternCase_ = 0;
      pattern_ = null;
    }
  }

  public static final int BODY_FIELD_NUMBER = 7;
  private java.lang.String body_;
  /**
   * <pre>
   * The name of the request field whose value is mapped to the HTTP request
   * body, or `*` for mapping all request fields not captured by the path
   * pattern to the HTTP body, or omitted for not having any HTTP request body.
   * NOTE: the referred field must be present at the top-level of the request
   * message type.
   * </pre>
   *
   * <code>optional string body = 7;</code>
   */
  public java.lang.String getBody() {
    return body_;
  }
  /**
   * <pre>
   * The name of the request field whose value is mapped to the HTTP request
   * body, or `*` for mapping all request fields not captured by the path
   * pattern to the HTTP body, or omitted for not having any HTTP request body.
   * NOTE: the referred field must be present at the top-level of the request
   * message type.
   * </pre>
   *
   * <code>optional string body = 7;</code>
   */
  public com.google.protobuf.ByteString
      getBodyBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(body_);
  }
  /**
   * <pre>
   * The name of the request field whose value is mapped to the HTTP request
   * body, or `*` for mapping all request fields not captured by the path
   * pattern to the HTTP body, or omitted for not having any HTTP request body.
   * NOTE: the referred field must be present at the top-level of the request
   * message type.
   * </pre>
   *
   * <code>optional string body = 7;</code>
   */
  private void setBody(
      java.lang.String value) {
    if (value == null) {
    throw new NullPointerException();
  }
  
    body_ = value;
  }
  /**
   * <pre>
   * The name of the request field whose value is mapped to the HTTP request
   * body, or `*` for mapping all request fields not captured by the path
   * pattern to the HTTP body, or omitted for not having any HTTP request body.
   * NOTE: the referred field must be present at the top-level of the request
   * message type.
   * </pre>
   *
   * <code>optional string body = 7;</code>
   */
  private void clearBody() {
    
    body_ = getDefaultInstance().getBody();
  }
  /**
   * <pre>
   * The name of the request field whose value is mapped to the HTTP request
   * body, or `*` for mapping all request fields not captured by the path
   * pattern to the HTTP body, or omitted for not having any HTTP request body.
   * NOTE: the referred field must be present at the top-level of the request
   * message type.
   * </pre>
   *
   * <code>optional string body = 7;</code>
   */
  private void setBodyBytes(
      com.google.protobuf.ByteString value) {
    if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
    
    body_ = value.toStringUtf8();
  }

  public static final int RESPONSE_BODY_FIELD_NUMBER = 12;
  private java.lang.String responseBody_;
  /**
   * <pre>
   * Optional. The name of the response field whose value is mapped to the HTTP
   * response body. When omitted, the entire response message will be used
   * as the HTTP response body.
   * NOTE: The referred field must be present at the top-level of the response
   * message type.
   * </pre>
   *
   * <code>optional string response_body = 12;</code>
   */
  public java.lang.String getResponseBody() {
    return responseBody_;
  }
  /**
   * <pre>
   * Optional. The name of the response field whose value is mapped to the HTTP
   * response body. When omitted, the entire response message will be used
   * as the HTTP response body.
   * NOTE: The referred field must be present at the top-level of the response
   * message type.
   * </pre>
   *
   * <code>optional string response_body = 12;</code>
   */
  public com.google.protobuf.ByteString
      getResponseBodyBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(responseBody_);
  }
  /**
   * <pre>
   * Optional. The name of the response field whose value is mapped to the HTTP
   * response body. When omitted, the entire response message will be used
   * as the HTTP response body.
   * NOTE: The referred field must be present at the top-level of the response
   * message type.
   * </pre>
   *
   * <code>optional string response_body = 12;</code>
   */
  private void setResponseBody(
      java.lang.String value) {
    if (value == null) {
    throw new NullPointerException();
  }
  
    responseBody_ = value;
  }
  /**
   * <pre>
   * Optional. The name of the response field whose value is mapped to the HTTP
   * response body. When omitted, the entire response message will be used
   * as the HTTP response body.
   * NOTE: The referred field must be present at the top-level of the response
   * message type.
   * </pre>
   *
   * <code>optional string response_body = 12;</code>
   */
  private void clearResponseBody() {
    
    responseBody_ = getDefaultInstance().getResponseBody();
  }
  /**
   * <pre>
   * Optional. The name of the response field whose value is mapped to the HTTP
   * response body. When omitted, the entire response message will be used
   * as the HTTP response body.
   * NOTE: The referred field must be present at the top-level of the response
   * message type.
   * </pre>
   *
   * <code>optional string response_body = 12;</code>
   */
  private void setResponseBodyBytes(
      com.google.protobuf.ByteString value) {
    if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
    
    responseBody_ = value.toStringUtf8();
  }

  public static final int ADDITIONAL_BINDINGS_FIELD_NUMBER = 11;
  private com.google.protobuf.Internal.ProtobufList<com.google.api.HttpRule> additionalBindings_;
  /**
   * <pre>
   * Additional HTTP bindings for the selector. Nested bindings must
   * not contain an `additional_bindings` field themselves (that is,
   * the nesting may only be one level deep).
   * </pre>
   *
   * <code>repeated .google.api.HttpRule additional_bindings = 11;</code>
   */
  public java.util.List<com.google.api.HttpRule> getAdditionalBindingsList() {
    return additionalBindings_;
  }
  /**
   * <pre>
   * Additional HTTP bindings for the selector. Nested bindings must
   * not contain an `additional_bindings` field themselves (that is,
   * the nesting may only be one level deep).
   * </pre>
   *
   * <code>repeated .google.api.HttpRule additional_bindings = 11;</code>
   */
  public java.util.List<? extends com.google.api.HttpRuleOrBuilder> 
      getAdditionalBindingsOrBuilderList() {
    return additionalBindings_;
  }
  /**
   * <pre>
   * Additional HTTP bindings for the selector. Nested bindings must
   * not contain an `additional_bindings` field themselves (that is,
   * the nesting may only be one level deep).
   * </pre>
   *
   * <code>repeated .google.api.HttpRule additional_bindings = 11;</code>
   */
  public int getAdditionalBindingsCount() {
    return additionalBindings_.size();
  }
  /**
   * <pre>
   * Additional HTTP bindings for the selector. Nested bindings must
   * not contain an `additional_bindings` field themselves (that is,
   * the nesting may only be one level deep).
   * </pre>
   *
   * <code>repeated .google.api.HttpRule additional_bindings = 11;</code>
   */
  public com.google.api.HttpRule getAdditionalBindings(int index) {
    return additionalBindings_.get(index);
  }
  /**
   * <pre>
   * Additional HTTP bindings for the selector. Nested bindings must
   * not contain an `additional_bindings` field themselves (that is,
   * the nesting may only be one level deep).
   * </pre>
   *
   * <code>repeated .google.api.HttpRule additional_bindings = 11;</code>
   */
  public com.google.api.HttpRuleOrBuilder getAdditionalBindingsOrBuilder(
      int index) {
    return additionalBindings_.get(index);
  }
  private void ensureAdditionalBindingsIsMutable() {
    if (!additionalBindings_.isModifiable()) {
      additionalBindings_ =
          com.google.protobuf.GeneratedMessageLite.mutableCopy(additionalBindings_);
     }
  }

  /**
   * <pre>
   * Additional HTTP bindings for the selector. Nested bindings must
   * not contain an `additional_bindings` field themselves (that is,
   * the nesting may only be one level deep).
   * </pre>
   *
   * <code>repeated .google.api.HttpRule additional_bindings = 11;</code>
   */
  private void setAdditionalBindings(
      int index, com.google.api.HttpRule value) {
    if (value == null) {
      throw new NullPointerException();
    }
    ensureAdditionalBindingsIsMutable();
    additionalBindings_.set(index, value);
  }
  /**
   * <pre>
   * Additional HTTP bindings for the selector. Nested bindings must
   * not contain an `additional_bindings` field themselves (that is,
   * the nesting may only be one level deep).
   * </pre>
   *
   * <code>repeated .google.api.HttpRule additional_bindings = 11;</code>
   */
  private void setAdditionalBindings(
      int index, com.google.api.HttpRule.Builder builderForValue) {
    ensureAdditionalBindingsIsMutable();
    additionalBindings_.set(index, builderForValue.build());
  }
  /**
   * <pre>
   * Additional HTTP bindings for the selector. Nested bindings must
   * not contain an `additional_bindings` field themselves (that is,
   * the nesting may only be one level deep).
   * </pre>
   *
   * <code>repeated .google.api.HttpRule additional_bindings = 11;</code>
   */
  private void addAdditionalBindings(com.google.api.HttpRule value) {
    if (value == null) {
      throw new NullPointerException();
    }
    ensureAdditionalBindingsIsMutable();
    additionalBindings_.add(value);
  }
  /**
   * <pre>
   * Additional HTTP bindings for the selector. Nested bindings must
   * not contain an `additional_bindings` field themselves (that is,
   * the nesting may only be one level deep).
   * </pre>
   *
   * <code>repeated .google.api.HttpRule additional_bindings = 11;</code>
   */
  private void addAdditionalBindings(
      int index, com.google.api.HttpRule value) {
    if (value == null) {
      throw new NullPointerException();
    }
    ensureAdditionalBindingsIsMutable();
    additionalBindings_.add(index, value);
  }
  /**
   * <pre>
   * Additional HTTP bindings for the selector. Nested bindings must
   * not contain an `additional_bindings` field themselves (that is,
   * the nesting may only be one level deep).
   * </pre>
   *
   * <code>repeated .google.api.HttpRule additional_bindings = 11;</code>
   */
  private void addAdditionalBindings(
      com.google.api.HttpRule.Builder builderForValue) {
    ensureAdditionalBindingsIsMutable();
    additionalBindings_.add(builderForValue.build());
  }
  /**
   * <pre>
   * Additional HTTP bindings for the selector. Nested bindings must
   * not contain an `additional_bindings` field themselves (that is,
   * the nesting may only be one level deep).
   * </pre>
   *
   * <code>repeated .google.api.HttpRule additional_bindings = 11;</code>
   */
  private void addAdditionalBindings(
      int index, com.google.api.HttpRule.Builder builderForValue) {
    ensureAdditionalBindingsIsMutable();
    additionalBindings_.add(index, builderForValue.build());
  }
  /**
   * <pre>
   * Additional HTTP bindings for the selector. Nested bindings must
   * not contain an `additional_bindings` field themselves (that is,
   * the nesting may only be one level deep).
   * </pre>
   *
   * <code>repeated .google.api.HttpRule additional_bindings = 11;</code>
   */
  private void addAllAdditionalBindings(
      java.lang.Iterable<? extends com.google.api.HttpRule> values) {
    ensureAdditionalBindingsIsMutable();
    com.google.protobuf.AbstractMessageLite.addAll(
        values, additionalBindings_);
  }
  /**
   * <pre>
   * Additional HTTP bindings for the selector. Nested bindings must
   * not contain an `additional_bindings` field themselves (that is,
   * the nesting may only be one level deep).
   * </pre>
   *
   * <code>repeated .google.api.HttpRule additional_bindings = 11;</code>
   */
  private void clearAdditionalBindings() {
    additionalBindings_ = emptyProtobufList();
  }
  /**
   * <pre>
   * Additional HTTP bindings for the selector. Nested bindings must
   * not contain an `additional_bindings` field themselves (that is,
   * the nesting may only be one level deep).
   * </pre>
   *
   * <code>repeated .google.api.HttpRule additional_bindings = 11;</code>
   */
  private void removeAdditionalBindings(int index) {
    ensureAdditionalBindingsIsMutable();
    additionalBindings_.remove(index);
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!selector_.isEmpty()) {
      output.writeString(1, getSelector());
    }
    if (patternCase_ == 2) {
      output.writeString(2, getGet());
    }
    if (patternCase_ == 3) {
      output.writeString(3, getPut());
    }
    if (patternCase_ == 4) {
      output.writeString(4, getPost());
    }
    if (patternCase_ == 5) {
      output.writeString(5, getDelete());
    }
    if (patternCase_ == 6) {
      output.writeString(6, getPatch());
    }
    if (!body_.isEmpty()) {
      output.writeString(7, getBody());
    }
    if (patternCase_ == 8) {
      output.writeMessage(8, (com.google.api.CustomHttpPattern) pattern_);
    }
    for (int i = 0; i < additionalBindings_.size(); i++) {
      output.writeMessage(11, additionalBindings_.get(i));
    }
    if (!responseBody_.isEmpty()) {
      output.writeString(12, getResponseBody());
    }
  }

  public int getSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;

    size = 0;
    if (!selector_.isEmpty()) {
      size += com.google.protobuf.CodedOutputStream
        .computeStringSize(1, getSelector());
    }
    if (patternCase_ == 2) {
      size += com.google.protobuf.CodedOutputStream
        .computeStringSize(2, getGet());
    }
    if (patternCase_ == 3) {
      size += com.google.protobuf.CodedOutputStream
        .computeStringSize(3, getPut());
    }
    if (patternCase_ == 4) {
      size += com.google.protobuf.CodedOutputStream
        .computeStringSize(4, getPost());
    }
    if (patternCase_ == 5) {
      size += com.google.protobuf.CodedOutputStream
        .computeStringSize(5, getDelete());
    }
    if (patternCase_ == 6) {
      size += com.google.protobuf.CodedOutputStream
        .computeStringSize(6, getPatch());
    }
    if (!body_.isEmpty()) {
      size += com.google.protobuf.CodedOutputStream
        .computeStringSize(7, getBody());
    }
    if (patternCase_ == 8) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(8, (com.google.api.CustomHttpPattern) pattern_);
    }
    for (int i = 0; i < additionalBindings_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(11, additionalBindings_.get(i));
    }
    if (!responseBody_.isEmpty()) {
      size += com.google.protobuf.CodedOutputStream
        .computeStringSize(12, getResponseBody());
    }
    memoizedSerializedSize = size;
    return size;
  }

  public static com.google.api.HttpRule parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.google.api.HttpRule parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.google.api.HttpRule parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.google.api.HttpRule parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.google.api.HttpRule parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static com.google.api.HttpRule parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static com.google.api.HttpRule parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static com.google.api.HttpRule parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static com.google.api.HttpRule parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static com.google.api.HttpRule parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.api.HttpRule prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  /**
   * <pre>
   * # gRPC Transcoding
   * gRPC Transcoding is a feature for mapping between a gRPC method and one or
   * more HTTP REST endpoints. It allows developers to build a single API service
   * that supports both gRPC APIs and REST APIs. Many systems, including [Google
   * APIs](https://github.com/googleapis/googleapis),
   * [Cloud Endpoints](https://cloud.google.com/endpoints), [gRPC
   * Gateway](https://github.com/grpc-ecosystem/grpc-gateway),
   * and [Envoy](https://github.com/envoyproxy/envoy) proxy support this feature
   * and use it for large scale production services.
   * `HttpRule` defines the schema of the gRPC/REST mapping. The mapping specifies
   * how different portions of the gRPC request message are mapped to the URL
   * path, URL query parameters, and HTTP request body. It also controls how the
   * gRPC response message is mapped to the HTTP response body. `HttpRule` is
   * typically specified as an `google.api.http` annotation on the gRPC method.
   * Each mapping specifies a URL path template and an HTTP method. The path
   * template may refer to one or more fields in the gRPC request message, as long
   * as each field is a non-repeated field with a primitive (non-message) type.
   * The path template controls how fields of the request message are mapped to
   * the URL path.
   * Example:
   *     service Messaging {
   *       rpc GetMessage(GetMessageRequest) returns (Message) {
   *         option (google.api.http) = {
   *             get: "/v1/{name=messages/&#42;}"
   *         };
   *       }
   *     }
   *     message GetMessageRequest {
   *       string name = 1; // Mapped to URL path.
   *     }
   *     message Message {
   *       string text = 1; // The resource content.
   *     }
   * This enables an HTTP REST to gRPC mapping as below:
   * HTTP | gRPC
   * -----|-----
   * `GET /v1/messages/123456`  | `GetMessage(name: "messages/123456")`
   * Any fields in the request message which are not bound by the path template
   * automatically become HTTP query parameters if there is no HTTP request body.
   * For example:
   *     service Messaging {
   *       rpc GetMessage(GetMessageRequest) returns (Message) {
   *         option (google.api.http) = {
   *             get:"/v1/messages/{message_id}"
   *         };
   *       }
   *     }
   *     message GetMessageRequest {
   *       message SubMessage {
   *         string subfield = 1;
   *       }
   *       string message_id = 1; // Mapped to URL path.
   *       int64 revision = 2;    // Mapped to URL query parameter `revision`.
   *       SubMessage sub = 3;    // Mapped to URL query parameter `sub.subfield`.
   *     }
   * This enables a HTTP JSON to RPC mapping as below:
   * HTTP | gRPC
   * -----|-----
   * `GET /v1/messages/123456?revision=2&amp;sub.subfield=foo` |
   * `GetMessage(message_id: "123456" revision: 2 sub: SubMessage(subfield:
   * "foo"))`
   * Note that fields which are mapped to URL query parameters must have a
   * primitive type or a repeated primitive type or a non-repeated message type.
   * In the case of a repeated type, the parameter can be repeated in the URL
   * as `...?param=A&amp;param=B`. In the case of a message type, each field of the
   * message is mapped to a separate parameter, such as
   * `...?foo.a=A&amp;foo.b=B&amp;foo.c=C`.
   * For HTTP methods that allow a request body, the `body` field
   * specifies the mapping. Consider a REST update method on the
   * message resource collection:
   *     service Messaging {
   *       rpc UpdateMessage(UpdateMessageRequest) returns (Message) {
   *         option (google.api.http) = {
   *           patch: "/v1/messages/{message_id}"
   *           body: "message"
   *         };
   *       }
   *     }
   *     message UpdateMessageRequest {
   *       string message_id = 1; // mapped to the URL
   *       Message message = 2;   // mapped to the body
   *     }
   * The following HTTP JSON to RPC mapping is enabled, where the
   * representation of the JSON in the request body is determined by
   * protos JSON encoding:
   * HTTP | gRPC
   * -----|-----
   * `PATCH /v1/messages/123456 { "text": "Hi!" }` | `UpdateMessage(message_id:
   * "123456" message { text: "Hi!" })`
   * The special name `*` can be used in the body mapping to define that
   * every field not bound by the path template should be mapped to the
   * request body.  This enables the following alternative definition of
   * the update method:
   *     service Messaging {
   *       rpc UpdateMessage(Message) returns (Message) {
   *         option (google.api.http) = {
   *           patch: "/v1/messages/{message_id}"
   *           body: "*"
   *         };
   *       }
   *     }
   *     message Message {
   *       string message_id = 1;
   *       string text = 2;
   *     }
   * The following HTTP JSON to RPC mapping is enabled:
   * HTTP | gRPC
   * -----|-----
   * `PATCH /v1/messages/123456 { "text": "Hi!" }` | `UpdateMessage(message_id:
   * "123456" text: "Hi!")`
   * Note that when using `*` in the body mapping, it is not possible to
   * have HTTP parameters, as all fields not bound by the path end in
   * the body. This makes this option more rarely used in practice when
   * defining REST APIs. The common usage of `*` is in custom methods
   * which don't use the URL at all for transferring data.
   * It is possible to define multiple HTTP methods for one RPC by using
   * the `additional_bindings` option. Example:
   *     service Messaging {
   *       rpc GetMessage(GetMessageRequest) returns (Message) {
   *         option (google.api.http) = {
   *           get: "/v1/messages/{message_id}"
   *           additional_bindings {
   *             get: "/v1/users/{user_id}/messages/{message_id}"
   *           }
   *         };
   *       }
   *     }
   *     message GetMessageRequest {
   *       string message_id = 1;
   *       string user_id = 2;
   *     }
   * This enables the following two alternative HTTP JSON to RPC mappings:
   * HTTP | gRPC
   * -----|-----
   * `GET /v1/messages/123456` | `GetMessage(message_id: "123456")`
   * `GET /v1/users/me/messages/123456` | `GetMessage(user_id: "me" message_id:
   * "123456")`
   * ## Rules for HTTP mapping
   * 1. Leaf request fields (recursive expansion nested messages in the request
   *    message) are classified into three categories:
   *    - Fields referred by the path template. They are passed via the URL path.
   *    - Fields referred by the [HttpRule.body][google.api.HttpRule.body]. They are passed via the HTTP
   *      request body.
   *    - All other fields are passed via the URL query parameters, and the
   *      parameter name is the field path in the request message. A repeated
   *      field can be represented as multiple query parameters under the same
   *      name.
   *  2. If [HttpRule.body][google.api.HttpRule.body] is "*", there is no URL query parameter, all fields
   *     are passed via URL path and HTTP request body.
   *  3. If [HttpRule.body][google.api.HttpRule.body] is omitted, there is no HTTP request body, all
   *     fields are passed via URL path and URL query parameters.
   * ### Path template syntax
   *     Template = "/" Segments [ Verb ] ;
   *     Segments = Segment { "/" Segment } ;
   *     Segment  = "*" | "**" | LITERAL | Variable ;
   *     Variable = "{" FieldPath [ "=" Segments ] "}" ;
   *     FieldPath = IDENT { "." IDENT } ;
   *     Verb     = ":" LITERAL ;
   * The syntax `*` matches a single URL path segment. The syntax `**` matches
   * zero or more URL path segments, which must be the last part of the URL path
   * except the `Verb`.
   * The syntax `Variable` matches part of the URL path as specified by its
   * template. A variable template must not contain other variables. If a variable
   * matches a single path segment, its template may be omitted, e.g. `{var}`
   * is equivalent to `{var=*}`.
   * The syntax `LITERAL` matches literal text in the URL path. If the `LITERAL`
   * contains any reserved character, such characters should be percent-encoded
   * before the matching.
   * If a variable contains exactly one path segment, such as `"{var}"` or
   * `"{var=*}"`, when such a variable is expanded into a URL path on the client
   * side, all characters except `[-_.~0-9a-zA-Z]` are percent-encoded. The
   * server side does the reverse decoding. Such variables show up in the
   * [Discovery
   * Document](https://developers.google.com/discovery/v1/reference/apis) as
   * `{var}`.
   * If a variable contains multiple path segments, such as `"{var=foo/&#42;}"`
   * or `"{var=**}"`, when such a variable is expanded into a URL path on the
   * client side, all characters except `[-_.~/0-9a-zA-Z]` are percent-encoded.
   * The server side does the reverse decoding, except "%2F" and "%2f" are left
   * unchanged. Such variables show up in the
   * [Discovery
   * Document](https://developers.google.com/discovery/v1/reference/apis) as
   * `{+var}`.
   * ## Using gRPC API Service Configuration
   * gRPC API Service Configuration (service config) is a configuration language
   * for configuring a gRPC service to become a user-facing product. The
   * service config is simply the YAML representation of the `google.api.Service`
   * proto message.
   * As an alternative to annotating your proto file, you can configure gRPC
   * transcoding in your service config YAML files. You do this by specifying a
   * `HttpRule` that maps the gRPC method to a REST endpoint, achieving the same
   * effect as the proto annotation. This can be particularly useful if you
   * have a proto that is reused in multiple services. Note that any transcoding
   * specified in the service config will override any matching transcoding
   * configuration in the proto.
   * Example:
   *     http:
   *       rules:
   *         # Selects a gRPC method and applies HttpRule to it.
   *         - selector: example.v1.Messaging.GetMessage
   *           get: /v1/messages/{message_id}/{sub.subfield}
   * ## Special notes
   * When gRPC Transcoding is used to map a gRPC to JSON REST endpoints, the
   * proto to JSON conversion must follow the [proto3
   * specification](https://developers.google.com/protocol-buffers/docs/proto3#json).
   * While the single segment variable follows the semantics of
   * [RFC 6570](https://tools.ietf.org/html/rfc6570) Section 3.2.2 Simple String
   * Expansion, the multi segment variable **does not** follow RFC 6570 Section
   * 3.2.3 Reserved Expansion. The reason is that the Reserved Expansion
   * does not expand special characters like `?` and `#`, which would lead
   * to invalid URLs. As the result, gRPC Transcoding uses a custom encoding
   * for multi segment variables.
   * The path variables **must not** refer to any repeated or mapped field,
   * because client libraries are not capable of handling such variable expansion.
   * The path variables **must not** capture the leading "/" character. The reason
   * is that the most common use case "{var}" does not capture the leading "/"
   * character. For consistency, all path variables must share the same behavior.
   * Repeated message fields must not be mapped to URL query parameters, because
   * no client library can support such complicated mapping.
   * If an API needs to use a JSON array for request or response body, it can map
   * the request or response body to a repeated field. However, some gRPC
   * Transcoding implementations may not support this feature.
   * </pre>
   *
   * Protobuf type {@code google.api.HttpRule}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        com.google.api.HttpRule, Builder> implements
      // @@protoc_insertion_point(builder_implements:google.api.HttpRule)
      com.google.api.HttpRuleOrBuilder {
    // Construct using com.google.api.HttpRule.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }

    public PatternCase
        getPatternCase() {
      return instance.getPatternCase();
    }

    public Builder clearPattern() {
      copyOnWrite();
      instance.clearPattern();
      return this;
    }


    /**
     * <pre>
     * Selects a method to which this rule applies.
     * Refer to [selector][google.api.DocumentationRule.selector] for syntax details.
     * </pre>
     *
     * <code>optional string selector = 1;</code>
     */
    public java.lang.String getSelector() {
      return instance.getSelector();
    }
    /**
     * <pre>
     * Selects a method to which this rule applies.
     * Refer to [selector][google.api.DocumentationRule.selector] for syntax details.
     * </pre>
     *
     * <code>optional string selector = 1;</code>
     */
    public com.google.protobuf.ByteString
        getSelectorBytes() {
      return instance.getSelectorBytes();
    }
    /**
     * <pre>
     * Selects a method to which this rule applies.
     * Refer to [selector][google.api.DocumentationRule.selector] for syntax details.
     * </pre>
     *
     * <code>optional string selector = 1;</code>
     */
    public Builder setSelector(
        java.lang.String value) {
      copyOnWrite();
      instance.setSelector(value);
      return this;
    }
    /**
     * <pre>
     * Selects a method to which this rule applies.
     * Refer to [selector][google.api.DocumentationRule.selector] for syntax details.
     * </pre>
     *
     * <code>optional string selector = 1;</code>
     */
    public Builder clearSelector() {
      copyOnWrite();
      instance.clearSelector();
      return this;
    }
    /**
     * <pre>
     * Selects a method to which this rule applies.
     * Refer to [selector][google.api.DocumentationRule.selector] for syntax details.
     * </pre>
     *
     * <code>optional string selector = 1;</code>
     */
    public Builder setSelectorBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setSelectorBytes(value);
      return this;
    }

    /**
     * <pre>
     * Maps to HTTP GET. Used for listing and getting information about
     * resources.
     * </pre>
     *
     * <code>optional string get = 2;</code>
     */
    public java.lang.String getGet() {
      return instance.getGet();
    }
    /**
     * <pre>
     * Maps to HTTP GET. Used for listing and getting information about
     * resources.
     * </pre>
     *
     * <code>optional string get = 2;</code>
     */
    public com.google.protobuf.ByteString
        getGetBytes() {
      return instance.getGetBytes();
    }
    /**
     * <pre>
     * Maps to HTTP GET. Used for listing and getting information about
     * resources.
     * </pre>
     *
     * <code>optional string get = 2;</code>
     */
    public Builder setGet(
        java.lang.String value) {
      copyOnWrite();
      instance.setGet(value);
      return this;
    }
    /**
     * <pre>
     * Maps to HTTP GET. Used for listing and getting information about
     * resources.
     * </pre>
     *
     * <code>optional string get = 2;</code>
     */
    public Builder clearGet() {
      copyOnWrite();
      instance.clearGet();
      return this;
    }
    /**
     * <pre>
     * Maps to HTTP GET. Used for listing and getting information about
     * resources.
     * </pre>
     *
     * <code>optional string get = 2;</code>
     */
    public Builder setGetBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setGetBytes(value);
      return this;
    }

    /**
     * <pre>
     * Maps to HTTP PUT. Used for replacing a resource.
     * </pre>
     *
     * <code>optional string put = 3;</code>
     */
    public java.lang.String getPut() {
      return instance.getPut();
    }
    /**
     * <pre>
     * Maps to HTTP PUT. Used for replacing a resource.
     * </pre>
     *
     * <code>optional string put = 3;</code>
     */
    public com.google.protobuf.ByteString
        getPutBytes() {
      return instance.getPutBytes();
    }
    /**
     * <pre>
     * Maps to HTTP PUT. Used for replacing a resource.
     * </pre>
     *
     * <code>optional string put = 3;</code>
     */
    public Builder setPut(
        java.lang.String value) {
      copyOnWrite();
      instance.setPut(value);
      return this;
    }
    /**
     * <pre>
     * Maps to HTTP PUT. Used for replacing a resource.
     * </pre>
     *
     * <code>optional string put = 3;</code>
     */
    public Builder clearPut() {
      copyOnWrite();
      instance.clearPut();
      return this;
    }
    /**
     * <pre>
     * Maps to HTTP PUT. Used for replacing a resource.
     * </pre>
     *
     * <code>optional string put = 3;</code>
     */
    public Builder setPutBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setPutBytes(value);
      return this;
    }

    /**
     * <pre>
     * Maps to HTTP POST. Used for creating a resource or performing an action.
     * </pre>
     *
     * <code>optional string post = 4;</code>
     */
    public java.lang.String getPost() {
      return instance.getPost();
    }
    /**
     * <pre>
     * Maps to HTTP POST. Used for creating a resource or performing an action.
     * </pre>
     *
     * <code>optional string post = 4;</code>
     */
    public com.google.protobuf.ByteString
        getPostBytes() {
      return instance.getPostBytes();
    }
    /**
     * <pre>
     * Maps to HTTP POST. Used for creating a resource or performing an action.
     * </pre>
     *
     * <code>optional string post = 4;</code>
     */
    public Builder setPost(
        java.lang.String value) {
      copyOnWrite();
      instance.setPost(value);
      return this;
    }
    /**
     * <pre>
     * Maps to HTTP POST. Used for creating a resource or performing an action.
     * </pre>
     *
     * <code>optional string post = 4;</code>
     */
    public Builder clearPost() {
      copyOnWrite();
      instance.clearPost();
      return this;
    }
    /**
     * <pre>
     * Maps to HTTP POST. Used for creating a resource or performing an action.
     * </pre>
     *
     * <code>optional string post = 4;</code>
     */
    public Builder setPostBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setPostBytes(value);
      return this;
    }

    /**
     * <pre>
     * Maps to HTTP DELETE. Used for deleting a resource.
     * </pre>
     *
     * <code>optional string delete = 5;</code>
     */
    public java.lang.String getDelete() {
      return instance.getDelete();
    }
    /**
     * <pre>
     * Maps to HTTP DELETE. Used for deleting a resource.
     * </pre>
     *
     * <code>optional string delete = 5;</code>
     */
    public com.google.protobuf.ByteString
        getDeleteBytes() {
      return instance.getDeleteBytes();
    }
    /**
     * <pre>
     * Maps to HTTP DELETE. Used for deleting a resource.
     * </pre>
     *
     * <code>optional string delete = 5;</code>
     */
    public Builder setDelete(
        java.lang.String value) {
      copyOnWrite();
      instance.setDelete(value);
      return this;
    }
    /**
     * <pre>
     * Maps to HTTP DELETE. Used for deleting a resource.
     * </pre>
     *
     * <code>optional string delete = 5;</code>
     */
    public Builder clearDelete() {
      copyOnWrite();
      instance.clearDelete();
      return this;
    }
    /**
     * <pre>
     * Maps to HTTP DELETE. Used for deleting a resource.
     * </pre>
     *
     * <code>optional string delete = 5;</code>
     */
    public Builder setDeleteBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setDeleteBytes(value);
      return this;
    }

    /**
     * <pre>
     * Maps to HTTP PATCH. Used for updating a resource.
     * </pre>
     *
     * <code>optional string patch = 6;</code>
     */
    public java.lang.String getPatch() {
      return instance.getPatch();
    }
    /**
     * <pre>
     * Maps to HTTP PATCH. Used for updating a resource.
     * </pre>
     *
     * <code>optional string patch = 6;</code>
     */
    public com.google.protobuf.ByteString
        getPatchBytes() {
      return instance.getPatchBytes();
    }
    /**
     * <pre>
     * Maps to HTTP PATCH. Used for updating a resource.
     * </pre>
     *
     * <code>optional string patch = 6;</code>
     */
    public Builder setPatch(
        java.lang.String value) {
      copyOnWrite();
      instance.setPatch(value);
      return this;
    }
    /**
     * <pre>
     * Maps to HTTP PATCH. Used for updating a resource.
     * </pre>
     *
     * <code>optional string patch = 6;</code>
     */
    public Builder clearPatch() {
      copyOnWrite();
      instance.clearPatch();
      return this;
    }
    /**
     * <pre>
     * Maps to HTTP PATCH. Used for updating a resource.
     * </pre>
     *
     * <code>optional string patch = 6;</code>
     */
    public Builder setPatchBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setPatchBytes(value);
      return this;
    }

    /**
     * <pre>
     * The custom pattern is used for specifying an HTTP method that is not
     * included in the `pattern` field, such as HEAD, or "*" to leave the
     * HTTP method unspecified for this rule. The wild-card rule is useful
     * for services that provide content to Web (HTML) clients.
     * </pre>
     *
     * <code>optional .google.api.CustomHttpPattern custom = 8;</code>
     */
    public com.google.api.CustomHttpPattern getCustom() {
      return instance.getCustom();
    }
    /**
     * <pre>
     * The custom pattern is used for specifying an HTTP method that is not
     * included in the `pattern` field, such as HEAD, or "*" to leave the
     * HTTP method unspecified for this rule. The wild-card rule is useful
     * for services that provide content to Web (HTML) clients.
     * </pre>
     *
     * <code>optional .google.api.CustomHttpPattern custom = 8;</code>
     */
    public Builder setCustom(com.google.api.CustomHttpPattern value) {
      copyOnWrite();
      instance.setCustom(value);
      return this;
    }
    /**
     * <pre>
     * The custom pattern is used for specifying an HTTP method that is not
     * included in the `pattern` field, such as HEAD, or "*" to leave the
     * HTTP method unspecified for this rule. The wild-card rule is useful
     * for services that provide content to Web (HTML) clients.
     * </pre>
     *
     * <code>optional .google.api.CustomHttpPattern custom = 8;</code>
     */
    public Builder setCustom(
        com.google.api.CustomHttpPattern.Builder builderForValue) {
      copyOnWrite();
      instance.setCustom(builderForValue);
      return this;
    }
    /**
     * <pre>
     * The custom pattern is used for specifying an HTTP method that is not
     * included in the `pattern` field, such as HEAD, or "*" to leave the
     * HTTP method unspecified for this rule. The wild-card rule is useful
     * for services that provide content to Web (HTML) clients.
     * </pre>
     *
     * <code>optional .google.api.CustomHttpPattern custom = 8;</code>
     */
    public Builder mergeCustom(com.google.api.CustomHttpPattern value) {
      copyOnWrite();
      instance.mergeCustom(value);
      return this;
    }
    /**
     * <pre>
     * The custom pattern is used for specifying an HTTP method that is not
     * included in the `pattern` field, such as HEAD, or "*" to leave the
     * HTTP method unspecified for this rule. The wild-card rule is useful
     * for services that provide content to Web (HTML) clients.
     * </pre>
     *
     * <code>optional .google.api.CustomHttpPattern custom = 8;</code>
     */
    public Builder clearCustom() {
      copyOnWrite();
      instance.clearCustom();
      return this;
    }

    /**
     * <pre>
     * The name of the request field whose value is mapped to the HTTP request
     * body, or `*` for mapping all request fields not captured by the path
     * pattern to the HTTP body, or omitted for not having any HTTP request body.
     * NOTE: the referred field must be present at the top-level of the request
     * message type.
     * </pre>
     *
     * <code>optional string body = 7;</code>
     */
    public java.lang.String getBody() {
      return instance.getBody();
    }
    /**
     * <pre>
     * The name of the request field whose value is mapped to the HTTP request
     * body, or `*` for mapping all request fields not captured by the path
     * pattern to the HTTP body, or omitted for not having any HTTP request body.
     * NOTE: the referred field must be present at the top-level of the request
     * message type.
     * </pre>
     *
     * <code>optional string body = 7;</code>
     */
    public com.google.protobuf.ByteString
        getBodyBytes() {
      return instance.getBodyBytes();
    }
    /**
     * <pre>
     * The name of the request field whose value is mapped to the HTTP request
     * body, or `*` for mapping all request fields not captured by the path
     * pattern to the HTTP body, or omitted for not having any HTTP request body.
     * NOTE: the referred field must be present at the top-level of the request
     * message type.
     * </pre>
     *
     * <code>optional string body = 7;</code>
     */
    public Builder setBody(
        java.lang.String value) {
      copyOnWrite();
      instance.setBody(value);
      return this;
    }
    /**
     * <pre>
     * The name of the request field whose value is mapped to the HTTP request
     * body, or `*` for mapping all request fields not captured by the path
     * pattern to the HTTP body, or omitted for not having any HTTP request body.
     * NOTE: the referred field must be present at the top-level of the request
     * message type.
     * </pre>
     *
     * <code>optional string body = 7;</code>
     */
    public Builder clearBody() {
      copyOnWrite();
      instance.clearBody();
      return this;
    }
    /**
     * <pre>
     * The name of the request field whose value is mapped to the HTTP request
     * body, or `*` for mapping all request fields not captured by the path
     * pattern to the HTTP body, or omitted for not having any HTTP request body.
     * NOTE: the referred field must be present at the top-level of the request
     * message type.
     * </pre>
     *
     * <code>optional string body = 7;</code>
     */
    public Builder setBodyBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setBodyBytes(value);
      return this;
    }

    /**
     * <pre>
     * Optional. The name of the response field whose value is mapped to the HTTP
     * response body. When omitted, the entire response message will be used
     * as the HTTP response body.
     * NOTE: The referred field must be present at the top-level of the response
     * message type.
     * </pre>
     *
     * <code>optional string response_body = 12;</code>
     */
    public java.lang.String getResponseBody() {
      return instance.getResponseBody();
    }
    /**
     * <pre>
     * Optional. The name of the response field whose value is mapped to the HTTP
     * response body. When omitted, the entire response message will be used
     * as the HTTP response body.
     * NOTE: The referred field must be present at the top-level of the response
     * message type.
     * </pre>
     *
     * <code>optional string response_body = 12;</code>
     */
    public com.google.protobuf.ByteString
        getResponseBodyBytes() {
      return instance.getResponseBodyBytes();
    }
    /**
     * <pre>
     * Optional. The name of the response field whose value is mapped to the HTTP
     * response body. When omitted, the entire response message will be used
     * as the HTTP response body.
     * NOTE: The referred field must be present at the top-level of the response
     * message type.
     * </pre>
     *
     * <code>optional string response_body = 12;</code>
     */
    public Builder setResponseBody(
        java.lang.String value) {
      copyOnWrite();
      instance.setResponseBody(value);
      return this;
    }
    /**
     * <pre>
     * Optional. The name of the response field whose value is mapped to the HTTP
     * response body. When omitted, the entire response message will be used
     * as the HTTP response body.
     * NOTE: The referred field must be present at the top-level of the response
     * message type.
     * </pre>
     *
     * <code>optional string response_body = 12;</code>
     */
    public Builder clearResponseBody() {
      copyOnWrite();
      instance.clearResponseBody();
      return this;
    }
    /**
     * <pre>
     * Optional. The name of the response field whose value is mapped to the HTTP
     * response body. When omitted, the entire response message will be used
     * as the HTTP response body.
     * NOTE: The referred field must be present at the top-level of the response
     * message type.
     * </pre>
     *
     * <code>optional string response_body = 12;</code>
     */
    public Builder setResponseBodyBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setResponseBodyBytes(value);
      return this;
    }

    /**
     * <pre>
     * Additional HTTP bindings for the selector. Nested bindings must
     * not contain an `additional_bindings` field themselves (that is,
     * the nesting may only be one level deep).
     * </pre>
     *
     * <code>repeated .google.api.HttpRule additional_bindings = 11;</code>
     */
    public java.util.List<com.google.api.HttpRule> getAdditionalBindingsList() {
      return java.util.Collections.unmodifiableList(
          instance.getAdditionalBindingsList());
    }
    /**
     * <pre>
     * Additional HTTP bindings for the selector. Nested bindings must
     * not contain an `additional_bindings` field themselves (that is,
     * the nesting may only be one level deep).
     * </pre>
     *
     * <code>repeated .google.api.HttpRule additional_bindings = 11;</code>
     */
    public int getAdditionalBindingsCount() {
      return instance.getAdditionalBindingsCount();
    }/**
     * <pre>
     * Additional HTTP bindings for the selector. Nested bindings must
     * not contain an `additional_bindings` field themselves (that is,
     * the nesting may only be one level deep).
     * </pre>
     *
     * <code>repeated .google.api.HttpRule additional_bindings = 11;</code>
     */
    public com.google.api.HttpRule getAdditionalBindings(int index) {
      return instance.getAdditionalBindings(index);
    }
    /**
     * <pre>
     * Additional HTTP bindings for the selector. Nested bindings must
     * not contain an `additional_bindings` field themselves (that is,
     * the nesting may only be one level deep).
     * </pre>
     *
     * <code>repeated .google.api.HttpRule additional_bindings = 11;</code>
     */
    public Builder setAdditionalBindings(
        int index, com.google.api.HttpRule value) {
      copyOnWrite();
      instance.setAdditionalBindings(index, value);
      return this;
    }
    /**
     * <pre>
     * Additional HTTP bindings for the selector. Nested bindings must
     * not contain an `additional_bindings` field themselves (that is,
     * the nesting may only be one level deep).
     * </pre>
     *
     * <code>repeated .google.api.HttpRule additional_bindings = 11;</code>
     */
    public Builder setAdditionalBindings(
        int index, com.google.api.HttpRule.Builder builderForValue) {
      copyOnWrite();
      instance.setAdditionalBindings(index, builderForValue);
      return this;
    }
    /**
     * <pre>
     * Additional HTTP bindings for the selector. Nested bindings must
     * not contain an `additional_bindings` field themselves (that is,
     * the nesting may only be one level deep).
     * </pre>
     *
     * <code>repeated .google.api.HttpRule additional_bindings = 11;</code>
     */
    public Builder addAdditionalBindings(com.google.api.HttpRule value) {
      copyOnWrite();
      instance.addAdditionalBindings(value);
      return this;
    }
    /**
     * <pre>
     * Additional HTTP bindings for the selector. Nested bindings must
     * not contain an `additional_bindings` field themselves (that is,
     * the nesting may only be one level deep).
     * </pre>
     *
     * <code>repeated .google.api.HttpRule additional_bindings = 11;</code>
     */
    public Builder addAdditionalBindings(
        int index, com.google.api.HttpRule value) {
      copyOnWrite();
      instance.addAdditionalBindings(index, value);
      return this;
    }
    /**
     * <pre>
     * Additional HTTP bindings for the selector. Nested bindings must
     * not contain an `additional_bindings` field themselves (that is,
     * the nesting may only be one level deep).
     * </pre>
     *
     * <code>repeated .google.api.HttpRule additional_bindings = 11;</code>
     */
    public Builder addAdditionalBindings(
        com.google.api.HttpRule.Builder builderForValue) {
      copyOnWrite();
      instance.addAdditionalBindings(builderForValue);
      return this;
    }
    /**
     * <pre>
     * Additional HTTP bindings for the selector. Nested bindings must
     * not contain an `additional_bindings` field themselves (that is,
     * the nesting may only be one level deep).
     * </pre>
     *
     * <code>repeated .google.api.HttpRule additional_bindings = 11;</code>
     */
    public Builder addAdditionalBindings(
        int index, com.google.api.HttpRule.Builder builderForValue) {
      copyOnWrite();
      instance.addAdditionalBindings(index, builderForValue);
      return this;
    }
    /**
     * <pre>
     * Additional HTTP bindings for the selector. Nested bindings must
     * not contain an `additional_bindings` field themselves (that is,
     * the nesting may only be one level deep).
     * </pre>
     *
     * <code>repeated .google.api.HttpRule additional_bindings = 11;</code>
     */
    public Builder addAllAdditionalBindings(
        java.lang.Iterable<? extends com.google.api.HttpRule> values) {
      copyOnWrite();
      instance.addAllAdditionalBindings(values);
      return this;
    }
    /**
     * <pre>
     * Additional HTTP bindings for the selector. Nested bindings must
     * not contain an `additional_bindings` field themselves (that is,
     * the nesting may only be one level deep).
     * </pre>
     *
     * <code>repeated .google.api.HttpRule additional_bindings = 11;</code>
     */
    public Builder clearAdditionalBindings() {
      copyOnWrite();
      instance.clearAdditionalBindings();
      return this;
    }
    /**
     * <pre>
     * Additional HTTP bindings for the selector. Nested bindings must
     * not contain an `additional_bindings` field themselves (that is,
     * the nesting may only be one level deep).
     * </pre>
     *
     * <code>repeated .google.api.HttpRule additional_bindings = 11;</code>
     */
    public Builder removeAdditionalBindings(int index) {
      copyOnWrite();
      instance.removeAdditionalBindings(index);
      return this;
    }

    // @@protoc_insertion_point(builder_scope:google.api.HttpRule)
  }
  protected final Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      Object arg0, Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new com.google.api.HttpRule();
      }
      case IS_INITIALIZED: {
        return DEFAULT_INSTANCE;
      }
      case MAKE_IMMUTABLE: {
        additionalBindings_.makeImmutable();
        return null;
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case VISIT: {
        Visitor visitor = (Visitor) arg0;
        com.google.api.HttpRule other = (com.google.api.HttpRule) arg1;
        selector_ = visitor.visitString(!selector_.isEmpty(), selector_,
            !other.selector_.isEmpty(), other.selector_);
        body_ = visitor.visitString(!body_.isEmpty(), body_,
            !other.body_.isEmpty(), other.body_);
        responseBody_ = visitor.visitString(!responseBody_.isEmpty(), responseBody_,
            !other.responseBody_.isEmpty(), other.responseBody_);
        additionalBindings_= visitor.visitList(additionalBindings_, other.additionalBindings_);
        switch (other.getPatternCase()) {
          case GET: {
            pattern_ = visitor.visitOneofString(
               patternCase_ == 2, pattern_, other.pattern_);
            break;
          }
          case PUT: {
            pattern_ = visitor.visitOneofString(
               patternCase_ == 3, pattern_, other.pattern_);
            break;
          }
          case POST: {
            pattern_ = visitor.visitOneofString(
               patternCase_ == 4, pattern_, other.pattern_);
            break;
          }
          case DELETE: {
            pattern_ = visitor.visitOneofString(
               patternCase_ == 5, pattern_, other.pattern_);
            break;
          }
          case PATCH: {
            pattern_ = visitor.visitOneofString(
               patternCase_ == 6, pattern_, other.pattern_);
            break;
          }
          case CUSTOM: {
            pattern_ = visitor.visitOneofMessage(
                patternCase_ == 8,
                pattern_,
                other.pattern_);
            break;
          }
          case PATTERN_NOT_SET: {
            visitor.visitOneofNotSet(patternCase_ != 0);
            break;
          }
        }
        if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
            .INSTANCE) {
          if (other.patternCase_ != 0) {
            patternCase_ = other.patternCase_;
          }
          bitField0_ |= other.bitField0_;
        }
        return this;
      }
      case MERGE_FROM_STREAM: {
        com.google.protobuf.CodedInputStream input =
            (com.google.protobuf.CodedInputStream) arg0;
        com.google.protobuf.ExtensionRegistryLite extensionRegistry =
            (com.google.protobuf.ExtensionRegistryLite) arg1;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!input.skipField(tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                String s = input.readStringRequireUtf8();

                selector_ = s;
                break;
              }
              case 18: {
                String s = input.readStringRequireUtf8();
                patternCase_ = 2;
                pattern_ = s;
                break;
              }
              case 26: {
                String s = input.readStringRequireUtf8();
                patternCase_ = 3;
                pattern_ = s;
                break;
              }
              case 34: {
                String s = input.readStringRequireUtf8();
                patternCase_ = 4;
                pattern_ = s;
                break;
              }
              case 42: {
                String s = input.readStringRequireUtf8();
                patternCase_ = 5;
                pattern_ = s;
                break;
              }
              case 50: {
                String s = input.readStringRequireUtf8();
                patternCase_ = 6;
                pattern_ = s;
                break;
              }
              case 58: {
                String s = input.readStringRequireUtf8();

                body_ = s;
                break;
              }
              case 66: {
                com.google.api.CustomHttpPattern.Builder subBuilder = null;
                if (patternCase_ == 8) {
                  subBuilder = ((com.google.api.CustomHttpPattern) pattern_).toBuilder();
                }
                pattern_ =
                     input.readMessage(com.google.api.CustomHttpPattern.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom((com.google.api.CustomHttpPattern) pattern_);
                  pattern_ = subBuilder.buildPartial();
                }
                patternCase_ = 8;
                break;
              }
              case 90: {
                if (!additionalBindings_.isModifiable()) {
                  additionalBindings_ =
                      com.google.protobuf.GeneratedMessageLite.mutableCopy(additionalBindings_);
                }
                additionalBindings_.add(
                    input.readMessage(com.google.api.HttpRule.parser(), extensionRegistry));
                break;
              }
              case 98: {
                String s = input.readStringRequireUtf8();

                responseBody_ = s;
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw new RuntimeException(e.setUnfinishedMessage(this));
        } catch (java.io.IOException e) {
          throw new RuntimeException(
              new com.google.protobuf.InvalidProtocolBufferException(
                  e.getMessage()).setUnfinishedMessage(this));
        } finally {
        }
      }
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        if (PARSER == null) {    synchronized (com.google.api.HttpRule.class) {
            if (PARSER == null) {
              PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
            }
          }
        }
        return PARSER;
      }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:google.api.HttpRule)
  private static final com.google.api.HttpRule DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new HttpRule();
    DEFAULT_INSTANCE.makeImmutable();
  }

  public static com.google.api.HttpRule getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<HttpRule> PARSER;

  public static com.google.protobuf.Parser<HttpRule> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

