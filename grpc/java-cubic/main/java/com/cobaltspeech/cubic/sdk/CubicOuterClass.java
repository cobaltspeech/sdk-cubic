// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cubic.proto

package com.cobaltspeech.cubic.sdk;

public final class CubicOuterClass {
  private CubicOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface ListModelsRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:cobaltspeech.cubic.ListModelsRequest)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * <pre>
   * The top-level message sent by the client for the `ListModels` method.
   * </pre>
   *
   * Protobuf type {@code cobaltspeech.cubic.ListModelsRequest}
   */
  public  static final class ListModelsRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:cobaltspeech.cubic.ListModelsRequest)
      ListModelsRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ListModelsRequest.newBuilder() to construct.
    private ListModelsRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ListModelsRequest() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ListModelsRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.cobaltspeech.cubic.sdk.CubicOuterClass.internal_static_cobaltspeech_cubic_ListModelsRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.cobaltspeech.cubic.sdk.CubicOuterClass.internal_static_cobaltspeech_cubic_ListModelsRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.cobaltspeech.cubic.sdk.CubicOuterClass.ListModelsRequest.class, com.cobaltspeech.cubic.sdk.CubicOuterClass.ListModelsRequest.Builder.class);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.cobaltspeech.cubic.sdk.CubicOuterClass.ListModelsRequest)) {
        return super.equals(obj);
      }
      com.cobaltspeech.cubic.sdk.CubicOuterClass.ListModelsRequest other = (com.cobaltspeech.cubic.sdk.CubicOuterClass.ListModelsRequest) obj;

      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.ListModelsRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.ListModelsRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.ListModelsRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.ListModelsRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.ListModelsRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.ListModelsRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.ListModelsRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.ListModelsRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.ListModelsRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.ListModelsRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.ListModelsRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.ListModelsRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.cobaltspeech.cubic.sdk.CubicOuterClass.ListModelsRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * The top-level message sent by the client for the `ListModels` method.
     * </pre>
     *
     * Protobuf type {@code cobaltspeech.cubic.ListModelsRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:cobaltspeech.cubic.ListModelsRequest)
        com.cobaltspeech.cubic.sdk.CubicOuterClass.ListModelsRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.cobaltspeech.cubic.sdk.CubicOuterClass.internal_static_cobaltspeech_cubic_ListModelsRequest_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.cobaltspeech.cubic.sdk.CubicOuterClass.internal_static_cobaltspeech_cubic_ListModelsRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.cobaltspeech.cubic.sdk.CubicOuterClass.ListModelsRequest.class, com.cobaltspeech.cubic.sdk.CubicOuterClass.ListModelsRequest.Builder.class);
      }

      // Construct using com.cobaltspeech.cubic.sdk.CubicOuterClass.ListModelsRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.cobaltspeech.cubic.sdk.CubicOuterClass.internal_static_cobaltspeech_cubic_ListModelsRequest_descriptor;
      }

      @java.lang.Override
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.ListModelsRequest getDefaultInstanceForType() {
        return com.cobaltspeech.cubic.sdk.CubicOuterClass.ListModelsRequest.getDefaultInstance();
      }

      @java.lang.Override
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.ListModelsRequest build() {
        com.cobaltspeech.cubic.sdk.CubicOuterClass.ListModelsRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.ListModelsRequest buildPartial() {
        com.cobaltspeech.cubic.sdk.CubicOuterClass.ListModelsRequest result = new com.cobaltspeech.cubic.sdk.CubicOuterClass.ListModelsRequest(this);
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.cobaltspeech.cubic.sdk.CubicOuterClass.ListModelsRequest) {
          return mergeFrom((com.cobaltspeech.cubic.sdk.CubicOuterClass.ListModelsRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.cobaltspeech.cubic.sdk.CubicOuterClass.ListModelsRequest other) {
        if (other == com.cobaltspeech.cubic.sdk.CubicOuterClass.ListModelsRequest.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.cobaltspeech.cubic.sdk.CubicOuterClass.ListModelsRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.cobaltspeech.cubic.sdk.CubicOuterClass.ListModelsRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:cobaltspeech.cubic.ListModelsRequest)
    }

    // @@protoc_insertion_point(class_scope:cobaltspeech.cubic.ListModelsRequest)
    private static final com.cobaltspeech.cubic.sdk.CubicOuterClass.ListModelsRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.cobaltspeech.cubic.sdk.CubicOuterClass.ListModelsRequest();
    }

    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.ListModelsRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ListModelsRequest>
        PARSER = new com.google.protobuf.AbstractParser<ListModelsRequest>() {
      @java.lang.Override
      public ListModelsRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ListModelsRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ListModelsRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ListModelsRequest> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.cobaltspeech.cubic.sdk.CubicOuterClass.ListModelsRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RecognizeRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:cobaltspeech.cubic.RecognizeRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Provides configuration to create the recognizer.
     * </pre>
     *
     * <code>.cobaltspeech.cubic.RecognitionConfig config = 1;</code>
     */
    boolean hasConfig();
    /**
     * <pre>
     * Provides configuration to create the recognizer.
     * </pre>
     *
     * <code>.cobaltspeech.cubic.RecognitionConfig config = 1;</code>
     */
    com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfig getConfig();
    /**
     * <pre>
     * Provides configuration to create the recognizer.
     * </pre>
     *
     * <code>.cobaltspeech.cubic.RecognitionConfig config = 1;</code>
     */
    com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfigOrBuilder getConfigOrBuilder();

    /**
     * <pre>
     * The audio data to be recognized
     * </pre>
     *
     * <code>.cobaltspeech.cubic.RecognitionAudio audio = 2;</code>
     */
    boolean hasAudio();
    /**
     * <pre>
     * The audio data to be recognized
     * </pre>
     *
     * <code>.cobaltspeech.cubic.RecognitionAudio audio = 2;</code>
     */
    com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAudio getAudio();
    /**
     * <pre>
     * The audio data to be recognized
     * </pre>
     *
     * <code>.cobaltspeech.cubic.RecognitionAudio audio = 2;</code>
     */
    com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAudioOrBuilder getAudioOrBuilder();
  }
  /**
   * <pre>
   * The top-level message sent by the client for the `Recognize` method.  Both
   * the `RecognitionConfig` and `RecognitionAudio` fields are required.  The
   * entire audio data must be sent in one request.  If your audio data is larger,
   * please use the `StreamingRecognize` call..
   * </pre>
   *
   * Protobuf type {@code cobaltspeech.cubic.RecognizeRequest}
   */
  public  static final class RecognizeRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:cobaltspeech.cubic.RecognizeRequest)
      RecognizeRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use RecognizeRequest.newBuilder() to construct.
    private RecognizeRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RecognizeRequest() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private RecognizeRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfig.Builder subBuilder = null;
              if (config_ != null) {
                subBuilder = config_.toBuilder();
              }
              config_ = input.readMessage(com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfig.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(config_);
                config_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAudio.Builder subBuilder = null;
              if (audio_ != null) {
                subBuilder = audio_.toBuilder();
              }
              audio_ = input.readMessage(com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAudio.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(audio_);
                audio_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.cobaltspeech.cubic.sdk.CubicOuterClass.internal_static_cobaltspeech_cubic_RecognizeRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.cobaltspeech.cubic.sdk.CubicOuterClass.internal_static_cobaltspeech_cubic_RecognizeRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognizeRequest.class, com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognizeRequest.Builder.class);
    }

    public static final int CONFIG_FIELD_NUMBER = 1;
    private com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfig config_;
    /**
     * <pre>
     * Provides configuration to create the recognizer.
     * </pre>
     *
     * <code>.cobaltspeech.cubic.RecognitionConfig config = 1;</code>
     */
    public boolean hasConfig() {
      return config_ != null;
    }
    /**
     * <pre>
     * Provides configuration to create the recognizer.
     * </pre>
     *
     * <code>.cobaltspeech.cubic.RecognitionConfig config = 1;</code>
     */
    public com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfig getConfig() {
      return config_ == null ? com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfig.getDefaultInstance() : config_;
    }
    /**
     * <pre>
     * Provides configuration to create the recognizer.
     * </pre>
     *
     * <code>.cobaltspeech.cubic.RecognitionConfig config = 1;</code>
     */
    public com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfigOrBuilder getConfigOrBuilder() {
      return getConfig();
    }

    public static final int AUDIO_FIELD_NUMBER = 2;
    private com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAudio audio_;
    /**
     * <pre>
     * The audio data to be recognized
     * </pre>
     *
     * <code>.cobaltspeech.cubic.RecognitionAudio audio = 2;</code>
     */
    public boolean hasAudio() {
      return audio_ != null;
    }
    /**
     * <pre>
     * The audio data to be recognized
     * </pre>
     *
     * <code>.cobaltspeech.cubic.RecognitionAudio audio = 2;</code>
     */
    public com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAudio getAudio() {
      return audio_ == null ? com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAudio.getDefaultInstance() : audio_;
    }
    /**
     * <pre>
     * The audio data to be recognized
     * </pre>
     *
     * <code>.cobaltspeech.cubic.RecognitionAudio audio = 2;</code>
     */
    public com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAudioOrBuilder getAudioOrBuilder() {
      return getAudio();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (config_ != null) {
        output.writeMessage(1, getConfig());
      }
      if (audio_ != null) {
        output.writeMessage(2, getAudio());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (config_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getConfig());
      }
      if (audio_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getAudio());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognizeRequest)) {
        return super.equals(obj);
      }
      com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognizeRequest other = (com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognizeRequest) obj;

      if (hasConfig() != other.hasConfig()) return false;
      if (hasConfig()) {
        if (!getConfig()
            .equals(other.getConfig())) return false;
      }
      if (hasAudio() != other.hasAudio()) return false;
      if (hasAudio()) {
        if (!getAudio()
            .equals(other.getAudio())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasConfig()) {
        hash = (37 * hash) + CONFIG_FIELD_NUMBER;
        hash = (53 * hash) + getConfig().hashCode();
      }
      if (hasAudio()) {
        hash = (37 * hash) + AUDIO_FIELD_NUMBER;
        hash = (53 * hash) + getAudio().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognizeRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognizeRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognizeRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognizeRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognizeRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognizeRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognizeRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognizeRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognizeRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognizeRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognizeRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognizeRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognizeRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * The top-level message sent by the client for the `Recognize` method.  Both
     * the `RecognitionConfig` and `RecognitionAudio` fields are required.  The
     * entire audio data must be sent in one request.  If your audio data is larger,
     * please use the `StreamingRecognize` call..
     * </pre>
     *
     * Protobuf type {@code cobaltspeech.cubic.RecognizeRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:cobaltspeech.cubic.RecognizeRequest)
        com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognizeRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.cobaltspeech.cubic.sdk.CubicOuterClass.internal_static_cobaltspeech_cubic_RecognizeRequest_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.cobaltspeech.cubic.sdk.CubicOuterClass.internal_static_cobaltspeech_cubic_RecognizeRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognizeRequest.class, com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognizeRequest.Builder.class);
      }

      // Construct using com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognizeRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (configBuilder_ == null) {
          config_ = null;
        } else {
          config_ = null;
          configBuilder_ = null;
        }
        if (audioBuilder_ == null) {
          audio_ = null;
        } else {
          audio_ = null;
          audioBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.cobaltspeech.cubic.sdk.CubicOuterClass.internal_static_cobaltspeech_cubic_RecognizeRequest_descriptor;
      }

      @java.lang.Override
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognizeRequest getDefaultInstanceForType() {
        return com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognizeRequest.getDefaultInstance();
      }

      @java.lang.Override
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognizeRequest build() {
        com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognizeRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognizeRequest buildPartial() {
        com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognizeRequest result = new com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognizeRequest(this);
        if (configBuilder_ == null) {
          result.config_ = config_;
        } else {
          result.config_ = configBuilder_.build();
        }
        if (audioBuilder_ == null) {
          result.audio_ = audio_;
        } else {
          result.audio_ = audioBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognizeRequest) {
          return mergeFrom((com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognizeRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognizeRequest other) {
        if (other == com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognizeRequest.getDefaultInstance()) return this;
        if (other.hasConfig()) {
          mergeConfig(other.getConfig());
        }
        if (other.hasAudio()) {
          mergeAudio(other.getAudio());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognizeRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognizeRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfig config_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfig, com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfig.Builder, com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfigOrBuilder> configBuilder_;
      /**
       * <pre>
       * Provides configuration to create the recognizer.
       * </pre>
       *
       * <code>.cobaltspeech.cubic.RecognitionConfig config = 1;</code>
       */
      public boolean hasConfig() {
        return configBuilder_ != null || config_ != null;
      }
      /**
       * <pre>
       * Provides configuration to create the recognizer.
       * </pre>
       *
       * <code>.cobaltspeech.cubic.RecognitionConfig config = 1;</code>
       */
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfig getConfig() {
        if (configBuilder_ == null) {
          return config_ == null ? com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfig.getDefaultInstance() : config_;
        } else {
          return configBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Provides configuration to create the recognizer.
       * </pre>
       *
       * <code>.cobaltspeech.cubic.RecognitionConfig config = 1;</code>
       */
      public Builder setConfig(com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfig value) {
        if (configBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          config_ = value;
          onChanged();
        } else {
          configBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Provides configuration to create the recognizer.
       * </pre>
       *
       * <code>.cobaltspeech.cubic.RecognitionConfig config = 1;</code>
       */
      public Builder setConfig(
          com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfig.Builder builderForValue) {
        if (configBuilder_ == null) {
          config_ = builderForValue.build();
          onChanged();
        } else {
          configBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Provides configuration to create the recognizer.
       * </pre>
       *
       * <code>.cobaltspeech.cubic.RecognitionConfig config = 1;</code>
       */
      public Builder mergeConfig(com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfig value) {
        if (configBuilder_ == null) {
          if (config_ != null) {
            config_ =
              com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfig.newBuilder(config_).mergeFrom(value).buildPartial();
          } else {
            config_ = value;
          }
          onChanged();
        } else {
          configBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Provides configuration to create the recognizer.
       * </pre>
       *
       * <code>.cobaltspeech.cubic.RecognitionConfig config = 1;</code>
       */
      public Builder clearConfig() {
        if (configBuilder_ == null) {
          config_ = null;
          onChanged();
        } else {
          config_ = null;
          configBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Provides configuration to create the recognizer.
       * </pre>
       *
       * <code>.cobaltspeech.cubic.RecognitionConfig config = 1;</code>
       */
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfig.Builder getConfigBuilder() {
        
        onChanged();
        return getConfigFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Provides configuration to create the recognizer.
       * </pre>
       *
       * <code>.cobaltspeech.cubic.RecognitionConfig config = 1;</code>
       */
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfigOrBuilder getConfigOrBuilder() {
        if (configBuilder_ != null) {
          return configBuilder_.getMessageOrBuilder();
        } else {
          return config_ == null ?
              com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfig.getDefaultInstance() : config_;
        }
      }
      /**
       * <pre>
       * Provides configuration to create the recognizer.
       * </pre>
       *
       * <code>.cobaltspeech.cubic.RecognitionConfig config = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfig, com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfig.Builder, com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfigOrBuilder> 
          getConfigFieldBuilder() {
        if (configBuilder_ == null) {
          configBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfig, com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfig.Builder, com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfigOrBuilder>(
                  getConfig(),
                  getParentForChildren(),
                  isClean());
          config_ = null;
        }
        return configBuilder_;
      }

      private com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAudio audio_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAudio, com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAudio.Builder, com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAudioOrBuilder> audioBuilder_;
      /**
       * <pre>
       * The audio data to be recognized
       * </pre>
       *
       * <code>.cobaltspeech.cubic.RecognitionAudio audio = 2;</code>
       */
      public boolean hasAudio() {
        return audioBuilder_ != null || audio_ != null;
      }
      /**
       * <pre>
       * The audio data to be recognized
       * </pre>
       *
       * <code>.cobaltspeech.cubic.RecognitionAudio audio = 2;</code>
       */
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAudio getAudio() {
        if (audioBuilder_ == null) {
          return audio_ == null ? com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAudio.getDefaultInstance() : audio_;
        } else {
          return audioBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The audio data to be recognized
       * </pre>
       *
       * <code>.cobaltspeech.cubic.RecognitionAudio audio = 2;</code>
       */
      public Builder setAudio(com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAudio value) {
        if (audioBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          audio_ = value;
          onChanged();
        } else {
          audioBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The audio data to be recognized
       * </pre>
       *
       * <code>.cobaltspeech.cubic.RecognitionAudio audio = 2;</code>
       */
      public Builder setAudio(
          com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAudio.Builder builderForValue) {
        if (audioBuilder_ == null) {
          audio_ = builderForValue.build();
          onChanged();
        } else {
          audioBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The audio data to be recognized
       * </pre>
       *
       * <code>.cobaltspeech.cubic.RecognitionAudio audio = 2;</code>
       */
      public Builder mergeAudio(com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAudio value) {
        if (audioBuilder_ == null) {
          if (audio_ != null) {
            audio_ =
              com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAudio.newBuilder(audio_).mergeFrom(value).buildPartial();
          } else {
            audio_ = value;
          }
          onChanged();
        } else {
          audioBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The audio data to be recognized
       * </pre>
       *
       * <code>.cobaltspeech.cubic.RecognitionAudio audio = 2;</code>
       */
      public Builder clearAudio() {
        if (audioBuilder_ == null) {
          audio_ = null;
          onChanged();
        } else {
          audio_ = null;
          audioBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The audio data to be recognized
       * </pre>
       *
       * <code>.cobaltspeech.cubic.RecognitionAudio audio = 2;</code>
       */
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAudio.Builder getAudioBuilder() {
        
        onChanged();
        return getAudioFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The audio data to be recognized
       * </pre>
       *
       * <code>.cobaltspeech.cubic.RecognitionAudio audio = 2;</code>
       */
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAudioOrBuilder getAudioOrBuilder() {
        if (audioBuilder_ != null) {
          return audioBuilder_.getMessageOrBuilder();
        } else {
          return audio_ == null ?
              com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAudio.getDefaultInstance() : audio_;
        }
      }
      /**
       * <pre>
       * The audio data to be recognized
       * </pre>
       *
       * <code>.cobaltspeech.cubic.RecognitionAudio audio = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAudio, com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAudio.Builder, com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAudioOrBuilder> 
          getAudioFieldBuilder() {
        if (audioBuilder_ == null) {
          audioBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAudio, com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAudio.Builder, com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAudioOrBuilder>(
                  getAudio(),
                  getParentForChildren(),
                  isClean());
          audio_ = null;
        }
        return audioBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:cobaltspeech.cubic.RecognizeRequest)
    }

    // @@protoc_insertion_point(class_scope:cobaltspeech.cubic.RecognizeRequest)
    private static final com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognizeRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognizeRequest();
    }

    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognizeRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RecognizeRequest>
        PARSER = new com.google.protobuf.AbstractParser<RecognizeRequest>() {
      @java.lang.Override
      public RecognizeRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RecognizeRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RecognizeRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RecognizeRequest> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognizeRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface StreamingRecognizeRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:cobaltspeech.cubic.StreamingRecognizeRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.cobaltspeech.cubic.RecognitionConfig config = 1;</code>
     */
    boolean hasConfig();
    /**
     * <code>.cobaltspeech.cubic.RecognitionConfig config = 1;</code>
     */
    com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfig getConfig();
    /**
     * <code>.cobaltspeech.cubic.RecognitionConfig config = 1;</code>
     */
    com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfigOrBuilder getConfigOrBuilder();

    /**
     * <code>.cobaltspeech.cubic.RecognitionAudio audio = 2;</code>
     */
    boolean hasAudio();
    /**
     * <code>.cobaltspeech.cubic.RecognitionAudio audio = 2;</code>
     */
    com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAudio getAudio();
    /**
     * <code>.cobaltspeech.cubic.RecognitionAudio audio = 2;</code>
     */
    com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAudioOrBuilder getAudioOrBuilder();

    public com.cobaltspeech.cubic.sdk.CubicOuterClass.StreamingRecognizeRequest.RequestCase getRequestCase();
  }
  /**
   * <pre>
   * The top-level message sent by the client for the `StreamingRecognize`
   * request.  Multiple `StreamingRecognizeRequest` messages are sent. The first
   * message must contain a `RecognitionConfig` message only, and all subsequent
   * messages must contain `RecognitionAudio` only.  All `RecognitionAudio`
   * messages must contain non-empty audio.  If audio content is empty, the server
   * may interpret it as end of stream and stop accepting any further messages.
   * </pre>
   *
   * Protobuf type {@code cobaltspeech.cubic.StreamingRecognizeRequest}
   */
  public  static final class StreamingRecognizeRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:cobaltspeech.cubic.StreamingRecognizeRequest)
      StreamingRecognizeRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use StreamingRecognizeRequest.newBuilder() to construct.
    private StreamingRecognizeRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private StreamingRecognizeRequest() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private StreamingRecognizeRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfig.Builder subBuilder = null;
              if (requestCase_ == 1) {
                subBuilder = ((com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfig) request_).toBuilder();
              }
              request_ =
                  input.readMessage(com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfig.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfig) request_);
                request_ = subBuilder.buildPartial();
              }
              requestCase_ = 1;
              break;
            }
            case 18: {
              com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAudio.Builder subBuilder = null;
              if (requestCase_ == 2) {
                subBuilder = ((com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAudio) request_).toBuilder();
              }
              request_ =
                  input.readMessage(com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAudio.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAudio) request_);
                request_ = subBuilder.buildPartial();
              }
              requestCase_ = 2;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.cobaltspeech.cubic.sdk.CubicOuterClass.internal_static_cobaltspeech_cubic_StreamingRecognizeRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.cobaltspeech.cubic.sdk.CubicOuterClass.internal_static_cobaltspeech_cubic_StreamingRecognizeRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.cobaltspeech.cubic.sdk.CubicOuterClass.StreamingRecognizeRequest.class, com.cobaltspeech.cubic.sdk.CubicOuterClass.StreamingRecognizeRequest.Builder.class);
    }

    private int requestCase_ = 0;
    private java.lang.Object request_;
    public enum RequestCase
        implements com.google.protobuf.Internal.EnumLite {
      CONFIG(1),
      AUDIO(2),
      REQUEST_NOT_SET(0);
      private final int value;
      private RequestCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static RequestCase valueOf(int value) {
        return forNumber(value);
      }

      public static RequestCase forNumber(int value) {
        switch (value) {
          case 1: return CONFIG;
          case 2: return AUDIO;
          case 0: return REQUEST_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public RequestCase
    getRequestCase() {
      return RequestCase.forNumber(
          requestCase_);
    }

    public static final int CONFIG_FIELD_NUMBER = 1;
    /**
     * <code>.cobaltspeech.cubic.RecognitionConfig config = 1;</code>
     */
    public boolean hasConfig() {
      return requestCase_ == 1;
    }
    /**
     * <code>.cobaltspeech.cubic.RecognitionConfig config = 1;</code>
     */
    public com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfig getConfig() {
      if (requestCase_ == 1) {
         return (com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfig) request_;
      }
      return com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfig.getDefaultInstance();
    }
    /**
     * <code>.cobaltspeech.cubic.RecognitionConfig config = 1;</code>
     */
    public com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfigOrBuilder getConfigOrBuilder() {
      if (requestCase_ == 1) {
         return (com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfig) request_;
      }
      return com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfig.getDefaultInstance();
    }

    public static final int AUDIO_FIELD_NUMBER = 2;
    /**
     * <code>.cobaltspeech.cubic.RecognitionAudio audio = 2;</code>
     */
    public boolean hasAudio() {
      return requestCase_ == 2;
    }
    /**
     * <code>.cobaltspeech.cubic.RecognitionAudio audio = 2;</code>
     */
    public com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAudio getAudio() {
      if (requestCase_ == 2) {
         return (com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAudio) request_;
      }
      return com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAudio.getDefaultInstance();
    }
    /**
     * <code>.cobaltspeech.cubic.RecognitionAudio audio = 2;</code>
     */
    public com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAudioOrBuilder getAudioOrBuilder() {
      if (requestCase_ == 2) {
         return (com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAudio) request_;
      }
      return com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAudio.getDefaultInstance();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (requestCase_ == 1) {
        output.writeMessage(1, (com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfig) request_);
      }
      if (requestCase_ == 2) {
        output.writeMessage(2, (com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAudio) request_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (requestCase_ == 1) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, (com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfig) request_);
      }
      if (requestCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, (com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAudio) request_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.cobaltspeech.cubic.sdk.CubicOuterClass.StreamingRecognizeRequest)) {
        return super.equals(obj);
      }
      com.cobaltspeech.cubic.sdk.CubicOuterClass.StreamingRecognizeRequest other = (com.cobaltspeech.cubic.sdk.CubicOuterClass.StreamingRecognizeRequest) obj;

      if (!getRequestCase().equals(other.getRequestCase())) return false;
      switch (requestCase_) {
        case 1:
          if (!getConfig()
              .equals(other.getConfig())) return false;
          break;
        case 2:
          if (!getAudio()
              .equals(other.getAudio())) return false;
          break;
        case 0:
        default:
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      switch (requestCase_) {
        case 1:
          hash = (37 * hash) + CONFIG_FIELD_NUMBER;
          hash = (53 * hash) + getConfig().hashCode();
          break;
        case 2:
          hash = (37 * hash) + AUDIO_FIELD_NUMBER;
          hash = (53 * hash) + getAudio().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.StreamingRecognizeRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.StreamingRecognizeRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.StreamingRecognizeRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.StreamingRecognizeRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.StreamingRecognizeRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.StreamingRecognizeRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.StreamingRecognizeRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.StreamingRecognizeRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.StreamingRecognizeRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.StreamingRecognizeRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.StreamingRecognizeRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.StreamingRecognizeRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.cobaltspeech.cubic.sdk.CubicOuterClass.StreamingRecognizeRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * The top-level message sent by the client for the `StreamingRecognize`
     * request.  Multiple `StreamingRecognizeRequest` messages are sent. The first
     * message must contain a `RecognitionConfig` message only, and all subsequent
     * messages must contain `RecognitionAudio` only.  All `RecognitionAudio`
     * messages must contain non-empty audio.  If audio content is empty, the server
     * may interpret it as end of stream and stop accepting any further messages.
     * </pre>
     *
     * Protobuf type {@code cobaltspeech.cubic.StreamingRecognizeRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:cobaltspeech.cubic.StreamingRecognizeRequest)
        com.cobaltspeech.cubic.sdk.CubicOuterClass.StreamingRecognizeRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.cobaltspeech.cubic.sdk.CubicOuterClass.internal_static_cobaltspeech_cubic_StreamingRecognizeRequest_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.cobaltspeech.cubic.sdk.CubicOuterClass.internal_static_cobaltspeech_cubic_StreamingRecognizeRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.cobaltspeech.cubic.sdk.CubicOuterClass.StreamingRecognizeRequest.class, com.cobaltspeech.cubic.sdk.CubicOuterClass.StreamingRecognizeRequest.Builder.class);
      }

      // Construct using com.cobaltspeech.cubic.sdk.CubicOuterClass.StreamingRecognizeRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        requestCase_ = 0;
        request_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.cobaltspeech.cubic.sdk.CubicOuterClass.internal_static_cobaltspeech_cubic_StreamingRecognizeRequest_descriptor;
      }

      @java.lang.Override
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.StreamingRecognizeRequest getDefaultInstanceForType() {
        return com.cobaltspeech.cubic.sdk.CubicOuterClass.StreamingRecognizeRequest.getDefaultInstance();
      }

      @java.lang.Override
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.StreamingRecognizeRequest build() {
        com.cobaltspeech.cubic.sdk.CubicOuterClass.StreamingRecognizeRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.StreamingRecognizeRequest buildPartial() {
        com.cobaltspeech.cubic.sdk.CubicOuterClass.StreamingRecognizeRequest result = new com.cobaltspeech.cubic.sdk.CubicOuterClass.StreamingRecognizeRequest(this);
        if (requestCase_ == 1) {
          if (configBuilder_ == null) {
            result.request_ = request_;
          } else {
            result.request_ = configBuilder_.build();
          }
        }
        if (requestCase_ == 2) {
          if (audioBuilder_ == null) {
            result.request_ = request_;
          } else {
            result.request_ = audioBuilder_.build();
          }
        }
        result.requestCase_ = requestCase_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.cobaltspeech.cubic.sdk.CubicOuterClass.StreamingRecognizeRequest) {
          return mergeFrom((com.cobaltspeech.cubic.sdk.CubicOuterClass.StreamingRecognizeRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.cobaltspeech.cubic.sdk.CubicOuterClass.StreamingRecognizeRequest other) {
        if (other == com.cobaltspeech.cubic.sdk.CubicOuterClass.StreamingRecognizeRequest.getDefaultInstance()) return this;
        switch (other.getRequestCase()) {
          case CONFIG: {
            mergeConfig(other.getConfig());
            break;
          }
          case AUDIO: {
            mergeAudio(other.getAudio());
            break;
          }
          case REQUEST_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.cobaltspeech.cubic.sdk.CubicOuterClass.StreamingRecognizeRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.cobaltspeech.cubic.sdk.CubicOuterClass.StreamingRecognizeRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int requestCase_ = 0;
      private java.lang.Object request_;
      public RequestCase
          getRequestCase() {
        return RequestCase.forNumber(
            requestCase_);
      }

      public Builder clearRequest() {
        requestCase_ = 0;
        request_ = null;
        onChanged();
        return this;
      }


      private com.google.protobuf.SingleFieldBuilderV3<
          com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfig, com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfig.Builder, com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfigOrBuilder> configBuilder_;
      /**
       * <code>.cobaltspeech.cubic.RecognitionConfig config = 1;</code>
       */
      public boolean hasConfig() {
        return requestCase_ == 1;
      }
      /**
       * <code>.cobaltspeech.cubic.RecognitionConfig config = 1;</code>
       */
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfig getConfig() {
        if (configBuilder_ == null) {
          if (requestCase_ == 1) {
            return (com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfig) request_;
          }
          return com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfig.getDefaultInstance();
        } else {
          if (requestCase_ == 1) {
            return configBuilder_.getMessage();
          }
          return com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfig.getDefaultInstance();
        }
      }
      /**
       * <code>.cobaltspeech.cubic.RecognitionConfig config = 1;</code>
       */
      public Builder setConfig(com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfig value) {
        if (configBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          request_ = value;
          onChanged();
        } else {
          configBuilder_.setMessage(value);
        }
        requestCase_ = 1;
        return this;
      }
      /**
       * <code>.cobaltspeech.cubic.RecognitionConfig config = 1;</code>
       */
      public Builder setConfig(
          com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfig.Builder builderForValue) {
        if (configBuilder_ == null) {
          request_ = builderForValue.build();
          onChanged();
        } else {
          configBuilder_.setMessage(builderForValue.build());
        }
        requestCase_ = 1;
        return this;
      }
      /**
       * <code>.cobaltspeech.cubic.RecognitionConfig config = 1;</code>
       */
      public Builder mergeConfig(com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfig value) {
        if (configBuilder_ == null) {
          if (requestCase_ == 1 &&
              request_ != com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfig.getDefaultInstance()) {
            request_ = com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfig.newBuilder((com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfig) request_)
                .mergeFrom(value).buildPartial();
          } else {
            request_ = value;
          }
          onChanged();
        } else {
          if (requestCase_ == 1) {
            configBuilder_.mergeFrom(value);
          }
          configBuilder_.setMessage(value);
        }
        requestCase_ = 1;
        return this;
      }
      /**
       * <code>.cobaltspeech.cubic.RecognitionConfig config = 1;</code>
       */
      public Builder clearConfig() {
        if (configBuilder_ == null) {
          if (requestCase_ == 1) {
            requestCase_ = 0;
            request_ = null;
            onChanged();
          }
        } else {
          if (requestCase_ == 1) {
            requestCase_ = 0;
            request_ = null;
          }
          configBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.cobaltspeech.cubic.RecognitionConfig config = 1;</code>
       */
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfig.Builder getConfigBuilder() {
        return getConfigFieldBuilder().getBuilder();
      }
      /**
       * <code>.cobaltspeech.cubic.RecognitionConfig config = 1;</code>
       */
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfigOrBuilder getConfigOrBuilder() {
        if ((requestCase_ == 1) && (configBuilder_ != null)) {
          return configBuilder_.getMessageOrBuilder();
        } else {
          if (requestCase_ == 1) {
            return (com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfig) request_;
          }
          return com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfig.getDefaultInstance();
        }
      }
      /**
       * <code>.cobaltspeech.cubic.RecognitionConfig config = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfig, com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfig.Builder, com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfigOrBuilder> 
          getConfigFieldBuilder() {
        if (configBuilder_ == null) {
          if (!(requestCase_ == 1)) {
            request_ = com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfig.getDefaultInstance();
          }
          configBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfig, com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfig.Builder, com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfigOrBuilder>(
                  (com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfig) request_,
                  getParentForChildren(),
                  isClean());
          request_ = null;
        }
        requestCase_ = 1;
        onChanged();;
        return configBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAudio, com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAudio.Builder, com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAudioOrBuilder> audioBuilder_;
      /**
       * <code>.cobaltspeech.cubic.RecognitionAudio audio = 2;</code>
       */
      public boolean hasAudio() {
        return requestCase_ == 2;
      }
      /**
       * <code>.cobaltspeech.cubic.RecognitionAudio audio = 2;</code>
       */
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAudio getAudio() {
        if (audioBuilder_ == null) {
          if (requestCase_ == 2) {
            return (com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAudio) request_;
          }
          return com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAudio.getDefaultInstance();
        } else {
          if (requestCase_ == 2) {
            return audioBuilder_.getMessage();
          }
          return com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAudio.getDefaultInstance();
        }
      }
      /**
       * <code>.cobaltspeech.cubic.RecognitionAudio audio = 2;</code>
       */
      public Builder setAudio(com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAudio value) {
        if (audioBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          request_ = value;
          onChanged();
        } else {
          audioBuilder_.setMessage(value);
        }
        requestCase_ = 2;
        return this;
      }
      /**
       * <code>.cobaltspeech.cubic.RecognitionAudio audio = 2;</code>
       */
      public Builder setAudio(
          com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAudio.Builder builderForValue) {
        if (audioBuilder_ == null) {
          request_ = builderForValue.build();
          onChanged();
        } else {
          audioBuilder_.setMessage(builderForValue.build());
        }
        requestCase_ = 2;
        return this;
      }
      /**
       * <code>.cobaltspeech.cubic.RecognitionAudio audio = 2;</code>
       */
      public Builder mergeAudio(com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAudio value) {
        if (audioBuilder_ == null) {
          if (requestCase_ == 2 &&
              request_ != com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAudio.getDefaultInstance()) {
            request_ = com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAudio.newBuilder((com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAudio) request_)
                .mergeFrom(value).buildPartial();
          } else {
            request_ = value;
          }
          onChanged();
        } else {
          if (requestCase_ == 2) {
            audioBuilder_.mergeFrom(value);
          }
          audioBuilder_.setMessage(value);
        }
        requestCase_ = 2;
        return this;
      }
      /**
       * <code>.cobaltspeech.cubic.RecognitionAudio audio = 2;</code>
       */
      public Builder clearAudio() {
        if (audioBuilder_ == null) {
          if (requestCase_ == 2) {
            requestCase_ = 0;
            request_ = null;
            onChanged();
          }
        } else {
          if (requestCase_ == 2) {
            requestCase_ = 0;
            request_ = null;
          }
          audioBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.cobaltspeech.cubic.RecognitionAudio audio = 2;</code>
       */
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAudio.Builder getAudioBuilder() {
        return getAudioFieldBuilder().getBuilder();
      }
      /**
       * <code>.cobaltspeech.cubic.RecognitionAudio audio = 2;</code>
       */
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAudioOrBuilder getAudioOrBuilder() {
        if ((requestCase_ == 2) && (audioBuilder_ != null)) {
          return audioBuilder_.getMessageOrBuilder();
        } else {
          if (requestCase_ == 2) {
            return (com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAudio) request_;
          }
          return com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAudio.getDefaultInstance();
        }
      }
      /**
       * <code>.cobaltspeech.cubic.RecognitionAudio audio = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAudio, com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAudio.Builder, com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAudioOrBuilder> 
          getAudioFieldBuilder() {
        if (audioBuilder_ == null) {
          if (!(requestCase_ == 2)) {
            request_ = com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAudio.getDefaultInstance();
          }
          audioBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAudio, com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAudio.Builder, com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAudioOrBuilder>(
                  (com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAudio) request_,
                  getParentForChildren(),
                  isClean());
          request_ = null;
        }
        requestCase_ = 2;
        onChanged();;
        return audioBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:cobaltspeech.cubic.StreamingRecognizeRequest)
    }

    // @@protoc_insertion_point(class_scope:cobaltspeech.cubic.StreamingRecognizeRequest)
    private static final com.cobaltspeech.cubic.sdk.CubicOuterClass.StreamingRecognizeRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.cobaltspeech.cubic.sdk.CubicOuterClass.StreamingRecognizeRequest();
    }

    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.StreamingRecognizeRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<StreamingRecognizeRequest>
        PARSER = new com.google.protobuf.AbstractParser<StreamingRecognizeRequest>() {
      @java.lang.Override
      public StreamingRecognizeRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new StreamingRecognizeRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<StreamingRecognizeRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<StreamingRecognizeRequest> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.cobaltspeech.cubic.sdk.CubicOuterClass.StreamingRecognizeRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CompileContextRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:cobaltspeech.cubic.CompileContextRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Unique identifier of the model to compile the context information for. The
     * model chosen needs to support context which can be verified by checking its
     * `ModelAttributes.ContextInfo` obtained via `ListModels`.
     * </pre>
     *
     * <code>string model_id = 1;</code>
     */
    java.lang.String getModelId();
    /**
     * <pre>
     * Unique identifier of the model to compile the context information for. The
     * model chosen needs to support context which can be verified by checking its
     * `ModelAttributes.ContextInfo` obtained via `ListModels`.
     * </pre>
     *
     * <code>string model_id = 1;</code>
     */
    com.google.protobuf.ByteString
        getModelIdBytes();

    /**
     * <pre>
     * The token that is associated with the provided list of phrases or words
     * (e.g "menu_item", "airport" etc.). Must be one of the tokens included in
     * the model being used, which can be retrieved by calling the `ListModels`
     * method.
     * </pre>
     *
     * <code>string token = 2;</code>
     */
    java.lang.String getToken();
    /**
     * <pre>
     * The token that is associated with the provided list of phrases or words
     * (e.g "menu_item", "airport" etc.). Must be one of the tokens included in
     * the model being used, which can be retrieved by calling the `ListModels`
     * method.
     * </pre>
     *
     * <code>string token = 2;</code>
     */
    com.google.protobuf.ByteString
        getTokenBytes();

    /**
     * <pre>
     * List of phrases and/or words to be compiled.
     * </pre>
     *
     * <code>repeated .cobaltspeech.cubic.ContextPhrase phrases = 3;</code>
     */
    java.util.List<com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextPhrase> 
        getPhrasesList();
    /**
     * <pre>
     * List of phrases and/or words to be compiled.
     * </pre>
     *
     * <code>repeated .cobaltspeech.cubic.ContextPhrase phrases = 3;</code>
     */
    com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextPhrase getPhrases(int index);
    /**
     * <pre>
     * List of phrases and/or words to be compiled.
     * </pre>
     *
     * <code>repeated .cobaltspeech.cubic.ContextPhrase phrases = 3;</code>
     */
    int getPhrasesCount();
    /**
     * <pre>
     * List of phrases and/or words to be compiled.
     * </pre>
     *
     * <code>repeated .cobaltspeech.cubic.ContextPhrase phrases = 3;</code>
     */
    java.util.List<? extends com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextPhraseOrBuilder> 
        getPhrasesOrBuilderList();
    /**
     * <pre>
     * List of phrases and/or words to be compiled.
     * </pre>
     *
     * <code>repeated .cobaltspeech.cubic.ContextPhrase phrases = 3;</code>
     */
    com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextPhraseOrBuilder getPhrasesOrBuilder(
        int index);
  }
  /**
   * <pre>
   * The top-level message sent by the client for the `CompileContext` request. It
   * contains a list of phrases or words, paired with a context token included in
   * the model being used. The token specifies a category such as "menu_item",
   * "airport", "contact", "product_name" etc. The context token is used to
   * determine the places in the recognition output where the provided list of
   * phrases or words may appear. The allowed context tokens for a given model can
   * be found in its `ModelAttributes.ContextInfo` obtained via the `ListModels`
   * method.
   * </pre>
   *
   * Protobuf type {@code cobaltspeech.cubic.CompileContextRequest}
   */
  public  static final class CompileContextRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:cobaltspeech.cubic.CompileContextRequest)
      CompileContextRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CompileContextRequest.newBuilder() to construct.
    private CompileContextRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CompileContextRequest() {
      modelId_ = "";
      token_ = "";
      phrases_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CompileContextRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              modelId_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              token_ = s;
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) != 0)) {
                phrases_ = new java.util.ArrayList<com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextPhrase>();
                mutable_bitField0_ |= 0x00000004;
              }
              phrases_.add(
                  input.readMessage(com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextPhrase.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) != 0)) {
          phrases_ = java.util.Collections.unmodifiableList(phrases_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.cobaltspeech.cubic.sdk.CubicOuterClass.internal_static_cobaltspeech_cubic_CompileContextRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.cobaltspeech.cubic.sdk.CubicOuterClass.internal_static_cobaltspeech_cubic_CompileContextRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.cobaltspeech.cubic.sdk.CubicOuterClass.CompileContextRequest.class, com.cobaltspeech.cubic.sdk.CubicOuterClass.CompileContextRequest.Builder.class);
    }

    private int bitField0_;
    public static final int MODEL_ID_FIELD_NUMBER = 1;
    private volatile java.lang.Object modelId_;
    /**
     * <pre>
     * Unique identifier of the model to compile the context information for. The
     * model chosen needs to support context which can be verified by checking its
     * `ModelAttributes.ContextInfo` obtained via `ListModels`.
     * </pre>
     *
     * <code>string model_id = 1;</code>
     */
    public java.lang.String getModelId() {
      java.lang.Object ref = modelId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        modelId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Unique identifier of the model to compile the context information for. The
     * model chosen needs to support context which can be verified by checking its
     * `ModelAttributes.ContextInfo` obtained via `ListModels`.
     * </pre>
     *
     * <code>string model_id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getModelIdBytes() {
      java.lang.Object ref = modelId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        modelId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TOKEN_FIELD_NUMBER = 2;
    private volatile java.lang.Object token_;
    /**
     * <pre>
     * The token that is associated with the provided list of phrases or words
     * (e.g "menu_item", "airport" etc.). Must be one of the tokens included in
     * the model being used, which can be retrieved by calling the `ListModels`
     * method.
     * </pre>
     *
     * <code>string token = 2;</code>
     */
    public java.lang.String getToken() {
      java.lang.Object ref = token_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        token_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The token that is associated with the provided list of phrases or words
     * (e.g "menu_item", "airport" etc.). Must be one of the tokens included in
     * the model being used, which can be retrieved by calling the `ListModels`
     * method.
     * </pre>
     *
     * <code>string token = 2;</code>
     */
    public com.google.protobuf.ByteString
        getTokenBytes() {
      java.lang.Object ref = token_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        token_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PHRASES_FIELD_NUMBER = 3;
    private java.util.List<com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextPhrase> phrases_;
    /**
     * <pre>
     * List of phrases and/or words to be compiled.
     * </pre>
     *
     * <code>repeated .cobaltspeech.cubic.ContextPhrase phrases = 3;</code>
     */
    public java.util.List<com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextPhrase> getPhrasesList() {
      return phrases_;
    }
    /**
     * <pre>
     * List of phrases and/or words to be compiled.
     * </pre>
     *
     * <code>repeated .cobaltspeech.cubic.ContextPhrase phrases = 3;</code>
     */
    public java.util.List<? extends com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextPhraseOrBuilder> 
        getPhrasesOrBuilderList() {
      return phrases_;
    }
    /**
     * <pre>
     * List of phrases and/or words to be compiled.
     * </pre>
     *
     * <code>repeated .cobaltspeech.cubic.ContextPhrase phrases = 3;</code>
     */
    public int getPhrasesCount() {
      return phrases_.size();
    }
    /**
     * <pre>
     * List of phrases and/or words to be compiled.
     * </pre>
     *
     * <code>repeated .cobaltspeech.cubic.ContextPhrase phrases = 3;</code>
     */
    public com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextPhrase getPhrases(int index) {
      return phrases_.get(index);
    }
    /**
     * <pre>
     * List of phrases and/or words to be compiled.
     * </pre>
     *
     * <code>repeated .cobaltspeech.cubic.ContextPhrase phrases = 3;</code>
     */
    public com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextPhraseOrBuilder getPhrasesOrBuilder(
        int index) {
      return phrases_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getModelIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, modelId_);
      }
      if (!getTokenBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, token_);
      }
      for (int i = 0; i < phrases_.size(); i++) {
        output.writeMessage(3, phrases_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getModelIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, modelId_);
      }
      if (!getTokenBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, token_);
      }
      for (int i = 0; i < phrases_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, phrases_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.cobaltspeech.cubic.sdk.CubicOuterClass.CompileContextRequest)) {
        return super.equals(obj);
      }
      com.cobaltspeech.cubic.sdk.CubicOuterClass.CompileContextRequest other = (com.cobaltspeech.cubic.sdk.CubicOuterClass.CompileContextRequest) obj;

      if (!getModelId()
          .equals(other.getModelId())) return false;
      if (!getToken()
          .equals(other.getToken())) return false;
      if (!getPhrasesList()
          .equals(other.getPhrasesList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + MODEL_ID_FIELD_NUMBER;
      hash = (53 * hash) + getModelId().hashCode();
      hash = (37 * hash) + TOKEN_FIELD_NUMBER;
      hash = (53 * hash) + getToken().hashCode();
      if (getPhrasesCount() > 0) {
        hash = (37 * hash) + PHRASES_FIELD_NUMBER;
        hash = (53 * hash) + getPhrasesList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.CompileContextRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.CompileContextRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.CompileContextRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.CompileContextRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.CompileContextRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.CompileContextRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.CompileContextRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.CompileContextRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.CompileContextRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.CompileContextRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.CompileContextRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.CompileContextRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.cobaltspeech.cubic.sdk.CubicOuterClass.CompileContextRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * The top-level message sent by the client for the `CompileContext` request. It
     * contains a list of phrases or words, paired with a context token included in
     * the model being used. The token specifies a category such as "menu_item",
     * "airport", "contact", "product_name" etc. The context token is used to
     * determine the places in the recognition output where the provided list of
     * phrases or words may appear. The allowed context tokens for a given model can
     * be found in its `ModelAttributes.ContextInfo` obtained via the `ListModels`
     * method.
     * </pre>
     *
     * Protobuf type {@code cobaltspeech.cubic.CompileContextRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:cobaltspeech.cubic.CompileContextRequest)
        com.cobaltspeech.cubic.sdk.CubicOuterClass.CompileContextRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.cobaltspeech.cubic.sdk.CubicOuterClass.internal_static_cobaltspeech_cubic_CompileContextRequest_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.cobaltspeech.cubic.sdk.CubicOuterClass.internal_static_cobaltspeech_cubic_CompileContextRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.cobaltspeech.cubic.sdk.CubicOuterClass.CompileContextRequest.class, com.cobaltspeech.cubic.sdk.CubicOuterClass.CompileContextRequest.Builder.class);
      }

      // Construct using com.cobaltspeech.cubic.sdk.CubicOuterClass.CompileContextRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getPhrasesFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        modelId_ = "";

        token_ = "";

        if (phrasesBuilder_ == null) {
          phrases_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          phrasesBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.cobaltspeech.cubic.sdk.CubicOuterClass.internal_static_cobaltspeech_cubic_CompileContextRequest_descriptor;
      }

      @java.lang.Override
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.CompileContextRequest getDefaultInstanceForType() {
        return com.cobaltspeech.cubic.sdk.CubicOuterClass.CompileContextRequest.getDefaultInstance();
      }

      @java.lang.Override
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.CompileContextRequest build() {
        com.cobaltspeech.cubic.sdk.CubicOuterClass.CompileContextRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.CompileContextRequest buildPartial() {
        com.cobaltspeech.cubic.sdk.CubicOuterClass.CompileContextRequest result = new com.cobaltspeech.cubic.sdk.CubicOuterClass.CompileContextRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.modelId_ = modelId_;
        result.token_ = token_;
        if (phrasesBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0)) {
            phrases_ = java.util.Collections.unmodifiableList(phrases_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.phrases_ = phrases_;
        } else {
          result.phrases_ = phrasesBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.cobaltspeech.cubic.sdk.CubicOuterClass.CompileContextRequest) {
          return mergeFrom((com.cobaltspeech.cubic.sdk.CubicOuterClass.CompileContextRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.cobaltspeech.cubic.sdk.CubicOuterClass.CompileContextRequest other) {
        if (other == com.cobaltspeech.cubic.sdk.CubicOuterClass.CompileContextRequest.getDefaultInstance()) return this;
        if (!other.getModelId().isEmpty()) {
          modelId_ = other.modelId_;
          onChanged();
        }
        if (!other.getToken().isEmpty()) {
          token_ = other.token_;
          onChanged();
        }
        if (phrasesBuilder_ == null) {
          if (!other.phrases_.isEmpty()) {
            if (phrases_.isEmpty()) {
              phrases_ = other.phrases_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensurePhrasesIsMutable();
              phrases_.addAll(other.phrases_);
            }
            onChanged();
          }
        } else {
          if (!other.phrases_.isEmpty()) {
            if (phrasesBuilder_.isEmpty()) {
              phrasesBuilder_.dispose();
              phrasesBuilder_ = null;
              phrases_ = other.phrases_;
              bitField0_ = (bitField0_ & ~0x00000004);
              phrasesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getPhrasesFieldBuilder() : null;
            } else {
              phrasesBuilder_.addAllMessages(other.phrases_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.cobaltspeech.cubic.sdk.CubicOuterClass.CompileContextRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.cobaltspeech.cubic.sdk.CubicOuterClass.CompileContextRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object modelId_ = "";
      /**
       * <pre>
       * Unique identifier of the model to compile the context information for. The
       * model chosen needs to support context which can be verified by checking its
       * `ModelAttributes.ContextInfo` obtained via `ListModels`.
       * </pre>
       *
       * <code>string model_id = 1;</code>
       */
      public java.lang.String getModelId() {
        java.lang.Object ref = modelId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          modelId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Unique identifier of the model to compile the context information for. The
       * model chosen needs to support context which can be verified by checking its
       * `ModelAttributes.ContextInfo` obtained via `ListModels`.
       * </pre>
       *
       * <code>string model_id = 1;</code>
       */
      public com.google.protobuf.ByteString
          getModelIdBytes() {
        java.lang.Object ref = modelId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          modelId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Unique identifier of the model to compile the context information for. The
       * model chosen needs to support context which can be verified by checking its
       * `ModelAttributes.ContextInfo` obtained via `ListModels`.
       * </pre>
       *
       * <code>string model_id = 1;</code>
       */
      public Builder setModelId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        modelId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Unique identifier of the model to compile the context information for. The
       * model chosen needs to support context which can be verified by checking its
       * `ModelAttributes.ContextInfo` obtained via `ListModels`.
       * </pre>
       *
       * <code>string model_id = 1;</code>
       */
      public Builder clearModelId() {
        
        modelId_ = getDefaultInstance().getModelId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Unique identifier of the model to compile the context information for. The
       * model chosen needs to support context which can be verified by checking its
       * `ModelAttributes.ContextInfo` obtained via `ListModels`.
       * </pre>
       *
       * <code>string model_id = 1;</code>
       */
      public Builder setModelIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        modelId_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object token_ = "";
      /**
       * <pre>
       * The token that is associated with the provided list of phrases or words
       * (e.g "menu_item", "airport" etc.). Must be one of the tokens included in
       * the model being used, which can be retrieved by calling the `ListModels`
       * method.
       * </pre>
       *
       * <code>string token = 2;</code>
       */
      public java.lang.String getToken() {
        java.lang.Object ref = token_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          token_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The token that is associated with the provided list of phrases or words
       * (e.g "menu_item", "airport" etc.). Must be one of the tokens included in
       * the model being used, which can be retrieved by calling the `ListModels`
       * method.
       * </pre>
       *
       * <code>string token = 2;</code>
       */
      public com.google.protobuf.ByteString
          getTokenBytes() {
        java.lang.Object ref = token_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          token_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The token that is associated with the provided list of phrases or words
       * (e.g "menu_item", "airport" etc.). Must be one of the tokens included in
       * the model being used, which can be retrieved by calling the `ListModels`
       * method.
       * </pre>
       *
       * <code>string token = 2;</code>
       */
      public Builder setToken(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        token_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The token that is associated with the provided list of phrases or words
       * (e.g "menu_item", "airport" etc.). Must be one of the tokens included in
       * the model being used, which can be retrieved by calling the `ListModels`
       * method.
       * </pre>
       *
       * <code>string token = 2;</code>
       */
      public Builder clearToken() {
        
        token_ = getDefaultInstance().getToken();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The token that is associated with the provided list of phrases or words
       * (e.g "menu_item", "airport" etc.). Must be one of the tokens included in
       * the model being used, which can be retrieved by calling the `ListModels`
       * method.
       * </pre>
       *
       * <code>string token = 2;</code>
       */
      public Builder setTokenBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        token_ = value;
        onChanged();
        return this;
      }

      private java.util.List<com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextPhrase> phrases_ =
        java.util.Collections.emptyList();
      private void ensurePhrasesIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          phrases_ = new java.util.ArrayList<com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextPhrase>(phrases_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextPhrase, com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextPhrase.Builder, com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextPhraseOrBuilder> phrasesBuilder_;

      /**
       * <pre>
       * List of phrases and/or words to be compiled.
       * </pre>
       *
       * <code>repeated .cobaltspeech.cubic.ContextPhrase phrases = 3;</code>
       */
      public java.util.List<com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextPhrase> getPhrasesList() {
        if (phrasesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(phrases_);
        } else {
          return phrasesBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * List of phrases and/or words to be compiled.
       * </pre>
       *
       * <code>repeated .cobaltspeech.cubic.ContextPhrase phrases = 3;</code>
       */
      public int getPhrasesCount() {
        if (phrasesBuilder_ == null) {
          return phrases_.size();
        } else {
          return phrasesBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * List of phrases and/or words to be compiled.
       * </pre>
       *
       * <code>repeated .cobaltspeech.cubic.ContextPhrase phrases = 3;</code>
       */
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextPhrase getPhrases(int index) {
        if (phrasesBuilder_ == null) {
          return phrases_.get(index);
        } else {
          return phrasesBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * List of phrases and/or words to be compiled.
       * </pre>
       *
       * <code>repeated .cobaltspeech.cubic.ContextPhrase phrases = 3;</code>
       */
      public Builder setPhrases(
          int index, com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextPhrase value) {
        if (phrasesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePhrasesIsMutable();
          phrases_.set(index, value);
          onChanged();
        } else {
          phrasesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * List of phrases and/or words to be compiled.
       * </pre>
       *
       * <code>repeated .cobaltspeech.cubic.ContextPhrase phrases = 3;</code>
       */
      public Builder setPhrases(
          int index, com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextPhrase.Builder builderForValue) {
        if (phrasesBuilder_ == null) {
          ensurePhrasesIsMutable();
          phrases_.set(index, builderForValue.build());
          onChanged();
        } else {
          phrasesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * List of phrases and/or words to be compiled.
       * </pre>
       *
       * <code>repeated .cobaltspeech.cubic.ContextPhrase phrases = 3;</code>
       */
      public Builder addPhrases(com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextPhrase value) {
        if (phrasesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePhrasesIsMutable();
          phrases_.add(value);
          onChanged();
        } else {
          phrasesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * List of phrases and/or words to be compiled.
       * </pre>
       *
       * <code>repeated .cobaltspeech.cubic.ContextPhrase phrases = 3;</code>
       */
      public Builder addPhrases(
          int index, com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextPhrase value) {
        if (phrasesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePhrasesIsMutable();
          phrases_.add(index, value);
          onChanged();
        } else {
          phrasesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * List of phrases and/or words to be compiled.
       * </pre>
       *
       * <code>repeated .cobaltspeech.cubic.ContextPhrase phrases = 3;</code>
       */
      public Builder addPhrases(
          com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextPhrase.Builder builderForValue) {
        if (phrasesBuilder_ == null) {
          ensurePhrasesIsMutable();
          phrases_.add(builderForValue.build());
          onChanged();
        } else {
          phrasesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * List of phrases and/or words to be compiled.
       * </pre>
       *
       * <code>repeated .cobaltspeech.cubic.ContextPhrase phrases = 3;</code>
       */
      public Builder addPhrases(
          int index, com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextPhrase.Builder builderForValue) {
        if (phrasesBuilder_ == null) {
          ensurePhrasesIsMutable();
          phrases_.add(index, builderForValue.build());
          onChanged();
        } else {
          phrasesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * List of phrases and/or words to be compiled.
       * </pre>
       *
       * <code>repeated .cobaltspeech.cubic.ContextPhrase phrases = 3;</code>
       */
      public Builder addAllPhrases(
          java.lang.Iterable<? extends com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextPhrase> values) {
        if (phrasesBuilder_ == null) {
          ensurePhrasesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, phrases_);
          onChanged();
        } else {
          phrasesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * List of phrases and/or words to be compiled.
       * </pre>
       *
       * <code>repeated .cobaltspeech.cubic.ContextPhrase phrases = 3;</code>
       */
      public Builder clearPhrases() {
        if (phrasesBuilder_ == null) {
          phrases_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          phrasesBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * List of phrases and/or words to be compiled.
       * </pre>
       *
       * <code>repeated .cobaltspeech.cubic.ContextPhrase phrases = 3;</code>
       */
      public Builder removePhrases(int index) {
        if (phrasesBuilder_ == null) {
          ensurePhrasesIsMutable();
          phrases_.remove(index);
          onChanged();
        } else {
          phrasesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * List of phrases and/or words to be compiled.
       * </pre>
       *
       * <code>repeated .cobaltspeech.cubic.ContextPhrase phrases = 3;</code>
       */
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextPhrase.Builder getPhrasesBuilder(
          int index) {
        return getPhrasesFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * List of phrases and/or words to be compiled.
       * </pre>
       *
       * <code>repeated .cobaltspeech.cubic.ContextPhrase phrases = 3;</code>
       */
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextPhraseOrBuilder getPhrasesOrBuilder(
          int index) {
        if (phrasesBuilder_ == null) {
          return phrases_.get(index);  } else {
          return phrasesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * List of phrases and/or words to be compiled.
       * </pre>
       *
       * <code>repeated .cobaltspeech.cubic.ContextPhrase phrases = 3;</code>
       */
      public java.util.List<? extends com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextPhraseOrBuilder> 
           getPhrasesOrBuilderList() {
        if (phrasesBuilder_ != null) {
          return phrasesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(phrases_);
        }
      }
      /**
       * <pre>
       * List of phrases and/or words to be compiled.
       * </pre>
       *
       * <code>repeated .cobaltspeech.cubic.ContextPhrase phrases = 3;</code>
       */
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextPhrase.Builder addPhrasesBuilder() {
        return getPhrasesFieldBuilder().addBuilder(
            com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextPhrase.getDefaultInstance());
      }
      /**
       * <pre>
       * List of phrases and/or words to be compiled.
       * </pre>
       *
       * <code>repeated .cobaltspeech.cubic.ContextPhrase phrases = 3;</code>
       */
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextPhrase.Builder addPhrasesBuilder(
          int index) {
        return getPhrasesFieldBuilder().addBuilder(
            index, com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextPhrase.getDefaultInstance());
      }
      /**
       * <pre>
       * List of phrases and/or words to be compiled.
       * </pre>
       *
       * <code>repeated .cobaltspeech.cubic.ContextPhrase phrases = 3;</code>
       */
      public java.util.List<com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextPhrase.Builder> 
           getPhrasesBuilderList() {
        return getPhrasesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextPhrase, com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextPhrase.Builder, com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextPhraseOrBuilder> 
          getPhrasesFieldBuilder() {
        if (phrasesBuilder_ == null) {
          phrasesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextPhrase, com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextPhrase.Builder, com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextPhraseOrBuilder>(
                  phrases_,
                  ((bitField0_ & 0x00000004) != 0),
                  getParentForChildren(),
                  isClean());
          phrases_ = null;
        }
        return phrasesBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:cobaltspeech.cubic.CompileContextRequest)
    }

    // @@protoc_insertion_point(class_scope:cobaltspeech.cubic.CompileContextRequest)
    private static final com.cobaltspeech.cubic.sdk.CubicOuterClass.CompileContextRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.cobaltspeech.cubic.sdk.CubicOuterClass.CompileContextRequest();
    }

    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.CompileContextRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CompileContextRequest>
        PARSER = new com.google.protobuf.AbstractParser<CompileContextRequest>() {
      @java.lang.Override
      public CompileContextRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CompileContextRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CompileContextRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CompileContextRequest> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.cobaltspeech.cubic.sdk.CubicOuterClass.CompileContextRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface VersionResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:cobaltspeech.cubic.VersionResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * version of the cubic library handling the recognition
     * </pre>
     *
     * <code>string cubic = 1;</code>
     */
    java.lang.String getCubic();
    /**
     * <pre>
     * version of the cubic library handling the recognition
     * </pre>
     *
     * <code>string cubic = 1;</code>
     */
    com.google.protobuf.ByteString
        getCubicBytes();

    /**
     * <pre>
     * version of the server handling these requests
     * </pre>
     *
     * <code>string server = 2;</code>
     */
    java.lang.String getServer();
    /**
     * <pre>
     * version of the server handling these requests
     * </pre>
     *
     * <code>string server = 2;</code>
     */
    com.google.protobuf.ByteString
        getServerBytes();
  }
  /**
   * <pre>
   * The message sent by the server for the `Version` method.
   * </pre>
   *
   * Protobuf type {@code cobaltspeech.cubic.VersionResponse}
   */
  public  static final class VersionResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:cobaltspeech.cubic.VersionResponse)
      VersionResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use VersionResponse.newBuilder() to construct.
    private VersionResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private VersionResponse() {
      cubic_ = "";
      server_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private VersionResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              cubic_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              server_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.cobaltspeech.cubic.sdk.CubicOuterClass.internal_static_cobaltspeech_cubic_VersionResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.cobaltspeech.cubic.sdk.CubicOuterClass.internal_static_cobaltspeech_cubic_VersionResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.cobaltspeech.cubic.sdk.CubicOuterClass.VersionResponse.class, com.cobaltspeech.cubic.sdk.CubicOuterClass.VersionResponse.Builder.class);
    }

    public static final int CUBIC_FIELD_NUMBER = 1;
    private volatile java.lang.Object cubic_;
    /**
     * <pre>
     * version of the cubic library handling the recognition
     * </pre>
     *
     * <code>string cubic = 1;</code>
     */
    public java.lang.String getCubic() {
      java.lang.Object ref = cubic_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        cubic_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * version of the cubic library handling the recognition
     * </pre>
     *
     * <code>string cubic = 1;</code>
     */
    public com.google.protobuf.ByteString
        getCubicBytes() {
      java.lang.Object ref = cubic_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        cubic_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SERVER_FIELD_NUMBER = 2;
    private volatile java.lang.Object server_;
    /**
     * <pre>
     * version of the server handling these requests
     * </pre>
     *
     * <code>string server = 2;</code>
     */
    public java.lang.String getServer() {
      java.lang.Object ref = server_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        server_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * version of the server handling these requests
     * </pre>
     *
     * <code>string server = 2;</code>
     */
    public com.google.protobuf.ByteString
        getServerBytes() {
      java.lang.Object ref = server_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        server_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getCubicBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, cubic_);
      }
      if (!getServerBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, server_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getCubicBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, cubic_);
      }
      if (!getServerBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, server_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.cobaltspeech.cubic.sdk.CubicOuterClass.VersionResponse)) {
        return super.equals(obj);
      }
      com.cobaltspeech.cubic.sdk.CubicOuterClass.VersionResponse other = (com.cobaltspeech.cubic.sdk.CubicOuterClass.VersionResponse) obj;

      if (!getCubic()
          .equals(other.getCubic())) return false;
      if (!getServer()
          .equals(other.getServer())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + CUBIC_FIELD_NUMBER;
      hash = (53 * hash) + getCubic().hashCode();
      hash = (37 * hash) + SERVER_FIELD_NUMBER;
      hash = (53 * hash) + getServer().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.VersionResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.VersionResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.VersionResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.VersionResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.VersionResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.VersionResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.VersionResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.VersionResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.VersionResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.VersionResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.VersionResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.VersionResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.cobaltspeech.cubic.sdk.CubicOuterClass.VersionResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * The message sent by the server for the `Version` method.
     * </pre>
     *
     * Protobuf type {@code cobaltspeech.cubic.VersionResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:cobaltspeech.cubic.VersionResponse)
        com.cobaltspeech.cubic.sdk.CubicOuterClass.VersionResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.cobaltspeech.cubic.sdk.CubicOuterClass.internal_static_cobaltspeech_cubic_VersionResponse_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.cobaltspeech.cubic.sdk.CubicOuterClass.internal_static_cobaltspeech_cubic_VersionResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.cobaltspeech.cubic.sdk.CubicOuterClass.VersionResponse.class, com.cobaltspeech.cubic.sdk.CubicOuterClass.VersionResponse.Builder.class);
      }

      // Construct using com.cobaltspeech.cubic.sdk.CubicOuterClass.VersionResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        cubic_ = "";

        server_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.cobaltspeech.cubic.sdk.CubicOuterClass.internal_static_cobaltspeech_cubic_VersionResponse_descriptor;
      }

      @java.lang.Override
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.VersionResponse getDefaultInstanceForType() {
        return com.cobaltspeech.cubic.sdk.CubicOuterClass.VersionResponse.getDefaultInstance();
      }

      @java.lang.Override
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.VersionResponse build() {
        com.cobaltspeech.cubic.sdk.CubicOuterClass.VersionResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.VersionResponse buildPartial() {
        com.cobaltspeech.cubic.sdk.CubicOuterClass.VersionResponse result = new com.cobaltspeech.cubic.sdk.CubicOuterClass.VersionResponse(this);
        result.cubic_ = cubic_;
        result.server_ = server_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.cobaltspeech.cubic.sdk.CubicOuterClass.VersionResponse) {
          return mergeFrom((com.cobaltspeech.cubic.sdk.CubicOuterClass.VersionResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.cobaltspeech.cubic.sdk.CubicOuterClass.VersionResponse other) {
        if (other == com.cobaltspeech.cubic.sdk.CubicOuterClass.VersionResponse.getDefaultInstance()) return this;
        if (!other.getCubic().isEmpty()) {
          cubic_ = other.cubic_;
          onChanged();
        }
        if (!other.getServer().isEmpty()) {
          server_ = other.server_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.cobaltspeech.cubic.sdk.CubicOuterClass.VersionResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.cobaltspeech.cubic.sdk.CubicOuterClass.VersionResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object cubic_ = "";
      /**
       * <pre>
       * version of the cubic library handling the recognition
       * </pre>
       *
       * <code>string cubic = 1;</code>
       */
      public java.lang.String getCubic() {
        java.lang.Object ref = cubic_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          cubic_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * version of the cubic library handling the recognition
       * </pre>
       *
       * <code>string cubic = 1;</code>
       */
      public com.google.protobuf.ByteString
          getCubicBytes() {
        java.lang.Object ref = cubic_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          cubic_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * version of the cubic library handling the recognition
       * </pre>
       *
       * <code>string cubic = 1;</code>
       */
      public Builder setCubic(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        cubic_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * version of the cubic library handling the recognition
       * </pre>
       *
       * <code>string cubic = 1;</code>
       */
      public Builder clearCubic() {
        
        cubic_ = getDefaultInstance().getCubic();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * version of the cubic library handling the recognition
       * </pre>
       *
       * <code>string cubic = 1;</code>
       */
      public Builder setCubicBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        cubic_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object server_ = "";
      /**
       * <pre>
       * version of the server handling these requests
       * </pre>
       *
       * <code>string server = 2;</code>
       */
      public java.lang.String getServer() {
        java.lang.Object ref = server_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          server_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * version of the server handling these requests
       * </pre>
       *
       * <code>string server = 2;</code>
       */
      public com.google.protobuf.ByteString
          getServerBytes() {
        java.lang.Object ref = server_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          server_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * version of the server handling these requests
       * </pre>
       *
       * <code>string server = 2;</code>
       */
      public Builder setServer(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        server_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * version of the server handling these requests
       * </pre>
       *
       * <code>string server = 2;</code>
       */
      public Builder clearServer() {
        
        server_ = getDefaultInstance().getServer();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * version of the server handling these requests
       * </pre>
       *
       * <code>string server = 2;</code>
       */
      public Builder setServerBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        server_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:cobaltspeech.cubic.VersionResponse)
    }

    // @@protoc_insertion_point(class_scope:cobaltspeech.cubic.VersionResponse)
    private static final com.cobaltspeech.cubic.sdk.CubicOuterClass.VersionResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.cobaltspeech.cubic.sdk.CubicOuterClass.VersionResponse();
    }

    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.VersionResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<VersionResponse>
        PARSER = new com.google.protobuf.AbstractParser<VersionResponse>() {
      @java.lang.Override
      public VersionResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new VersionResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<VersionResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<VersionResponse> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.cobaltspeech.cubic.sdk.CubicOuterClass.VersionResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ListModelsResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:cobaltspeech.cubic.ListModelsResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * List of models available for use that match the request.
     * </pre>
     *
     * <code>repeated .cobaltspeech.cubic.Model models = 1;</code>
     */
    java.util.List<com.cobaltspeech.cubic.sdk.CubicOuterClass.Model> 
        getModelsList();
    /**
     * <pre>
     * List of models available for use that match the request.
     * </pre>
     *
     * <code>repeated .cobaltspeech.cubic.Model models = 1;</code>
     */
    com.cobaltspeech.cubic.sdk.CubicOuterClass.Model getModels(int index);
    /**
     * <pre>
     * List of models available for use that match the request.
     * </pre>
     *
     * <code>repeated .cobaltspeech.cubic.Model models = 1;</code>
     */
    int getModelsCount();
    /**
     * <pre>
     * List of models available for use that match the request.
     * </pre>
     *
     * <code>repeated .cobaltspeech.cubic.Model models = 1;</code>
     */
    java.util.List<? extends com.cobaltspeech.cubic.sdk.CubicOuterClass.ModelOrBuilder> 
        getModelsOrBuilderList();
    /**
     * <pre>
     * List of models available for use that match the request.
     * </pre>
     *
     * <code>repeated .cobaltspeech.cubic.Model models = 1;</code>
     */
    com.cobaltspeech.cubic.sdk.CubicOuterClass.ModelOrBuilder getModelsOrBuilder(
        int index);
  }
  /**
   * <pre>
   * The message returned to the client by the `ListModels` method.
   * </pre>
   *
   * Protobuf type {@code cobaltspeech.cubic.ListModelsResponse}
   */
  public  static final class ListModelsResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:cobaltspeech.cubic.ListModelsResponse)
      ListModelsResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ListModelsResponse.newBuilder() to construct.
    private ListModelsResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ListModelsResponse() {
      models_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ListModelsResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                models_ = new java.util.ArrayList<com.cobaltspeech.cubic.sdk.CubicOuterClass.Model>();
                mutable_bitField0_ |= 0x00000001;
              }
              models_.add(
                  input.readMessage(com.cobaltspeech.cubic.sdk.CubicOuterClass.Model.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          models_ = java.util.Collections.unmodifiableList(models_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.cobaltspeech.cubic.sdk.CubicOuterClass.internal_static_cobaltspeech_cubic_ListModelsResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.cobaltspeech.cubic.sdk.CubicOuterClass.internal_static_cobaltspeech_cubic_ListModelsResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.cobaltspeech.cubic.sdk.CubicOuterClass.ListModelsResponse.class, com.cobaltspeech.cubic.sdk.CubicOuterClass.ListModelsResponse.Builder.class);
    }

    public static final int MODELS_FIELD_NUMBER = 1;
    private java.util.List<com.cobaltspeech.cubic.sdk.CubicOuterClass.Model> models_;
    /**
     * <pre>
     * List of models available for use that match the request.
     * </pre>
     *
     * <code>repeated .cobaltspeech.cubic.Model models = 1;</code>
     */
    public java.util.List<com.cobaltspeech.cubic.sdk.CubicOuterClass.Model> getModelsList() {
      return models_;
    }
    /**
     * <pre>
     * List of models available for use that match the request.
     * </pre>
     *
     * <code>repeated .cobaltspeech.cubic.Model models = 1;</code>
     */
    public java.util.List<? extends com.cobaltspeech.cubic.sdk.CubicOuterClass.ModelOrBuilder> 
        getModelsOrBuilderList() {
      return models_;
    }
    /**
     * <pre>
     * List of models available for use that match the request.
     * </pre>
     *
     * <code>repeated .cobaltspeech.cubic.Model models = 1;</code>
     */
    public int getModelsCount() {
      return models_.size();
    }
    /**
     * <pre>
     * List of models available for use that match the request.
     * </pre>
     *
     * <code>repeated .cobaltspeech.cubic.Model models = 1;</code>
     */
    public com.cobaltspeech.cubic.sdk.CubicOuterClass.Model getModels(int index) {
      return models_.get(index);
    }
    /**
     * <pre>
     * List of models available for use that match the request.
     * </pre>
     *
     * <code>repeated .cobaltspeech.cubic.Model models = 1;</code>
     */
    public com.cobaltspeech.cubic.sdk.CubicOuterClass.ModelOrBuilder getModelsOrBuilder(
        int index) {
      return models_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < models_.size(); i++) {
        output.writeMessage(1, models_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < models_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, models_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.cobaltspeech.cubic.sdk.CubicOuterClass.ListModelsResponse)) {
        return super.equals(obj);
      }
      com.cobaltspeech.cubic.sdk.CubicOuterClass.ListModelsResponse other = (com.cobaltspeech.cubic.sdk.CubicOuterClass.ListModelsResponse) obj;

      if (!getModelsList()
          .equals(other.getModelsList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getModelsCount() > 0) {
        hash = (37 * hash) + MODELS_FIELD_NUMBER;
        hash = (53 * hash) + getModelsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.ListModelsResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.ListModelsResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.ListModelsResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.ListModelsResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.ListModelsResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.ListModelsResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.ListModelsResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.ListModelsResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.ListModelsResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.ListModelsResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.ListModelsResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.ListModelsResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.cobaltspeech.cubic.sdk.CubicOuterClass.ListModelsResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * The message returned to the client by the `ListModels` method.
     * </pre>
     *
     * Protobuf type {@code cobaltspeech.cubic.ListModelsResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:cobaltspeech.cubic.ListModelsResponse)
        com.cobaltspeech.cubic.sdk.CubicOuterClass.ListModelsResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.cobaltspeech.cubic.sdk.CubicOuterClass.internal_static_cobaltspeech_cubic_ListModelsResponse_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.cobaltspeech.cubic.sdk.CubicOuterClass.internal_static_cobaltspeech_cubic_ListModelsResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.cobaltspeech.cubic.sdk.CubicOuterClass.ListModelsResponse.class, com.cobaltspeech.cubic.sdk.CubicOuterClass.ListModelsResponse.Builder.class);
      }

      // Construct using com.cobaltspeech.cubic.sdk.CubicOuterClass.ListModelsResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getModelsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (modelsBuilder_ == null) {
          models_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          modelsBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.cobaltspeech.cubic.sdk.CubicOuterClass.internal_static_cobaltspeech_cubic_ListModelsResponse_descriptor;
      }

      @java.lang.Override
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.ListModelsResponse getDefaultInstanceForType() {
        return com.cobaltspeech.cubic.sdk.CubicOuterClass.ListModelsResponse.getDefaultInstance();
      }

      @java.lang.Override
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.ListModelsResponse build() {
        com.cobaltspeech.cubic.sdk.CubicOuterClass.ListModelsResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.ListModelsResponse buildPartial() {
        com.cobaltspeech.cubic.sdk.CubicOuterClass.ListModelsResponse result = new com.cobaltspeech.cubic.sdk.CubicOuterClass.ListModelsResponse(this);
        int from_bitField0_ = bitField0_;
        if (modelsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            models_ = java.util.Collections.unmodifiableList(models_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.models_ = models_;
        } else {
          result.models_ = modelsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.cobaltspeech.cubic.sdk.CubicOuterClass.ListModelsResponse) {
          return mergeFrom((com.cobaltspeech.cubic.sdk.CubicOuterClass.ListModelsResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.cobaltspeech.cubic.sdk.CubicOuterClass.ListModelsResponse other) {
        if (other == com.cobaltspeech.cubic.sdk.CubicOuterClass.ListModelsResponse.getDefaultInstance()) return this;
        if (modelsBuilder_ == null) {
          if (!other.models_.isEmpty()) {
            if (models_.isEmpty()) {
              models_ = other.models_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureModelsIsMutable();
              models_.addAll(other.models_);
            }
            onChanged();
          }
        } else {
          if (!other.models_.isEmpty()) {
            if (modelsBuilder_.isEmpty()) {
              modelsBuilder_.dispose();
              modelsBuilder_ = null;
              models_ = other.models_;
              bitField0_ = (bitField0_ & ~0x00000001);
              modelsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getModelsFieldBuilder() : null;
            } else {
              modelsBuilder_.addAllMessages(other.models_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.cobaltspeech.cubic.sdk.CubicOuterClass.ListModelsResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.cobaltspeech.cubic.sdk.CubicOuterClass.ListModelsResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<com.cobaltspeech.cubic.sdk.CubicOuterClass.Model> models_ =
        java.util.Collections.emptyList();
      private void ensureModelsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          models_ = new java.util.ArrayList<com.cobaltspeech.cubic.sdk.CubicOuterClass.Model>(models_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.cobaltspeech.cubic.sdk.CubicOuterClass.Model, com.cobaltspeech.cubic.sdk.CubicOuterClass.Model.Builder, com.cobaltspeech.cubic.sdk.CubicOuterClass.ModelOrBuilder> modelsBuilder_;

      /**
       * <pre>
       * List of models available for use that match the request.
       * </pre>
       *
       * <code>repeated .cobaltspeech.cubic.Model models = 1;</code>
       */
      public java.util.List<com.cobaltspeech.cubic.sdk.CubicOuterClass.Model> getModelsList() {
        if (modelsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(models_);
        } else {
          return modelsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * List of models available for use that match the request.
       * </pre>
       *
       * <code>repeated .cobaltspeech.cubic.Model models = 1;</code>
       */
      public int getModelsCount() {
        if (modelsBuilder_ == null) {
          return models_.size();
        } else {
          return modelsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * List of models available for use that match the request.
       * </pre>
       *
       * <code>repeated .cobaltspeech.cubic.Model models = 1;</code>
       */
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.Model getModels(int index) {
        if (modelsBuilder_ == null) {
          return models_.get(index);
        } else {
          return modelsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * List of models available for use that match the request.
       * </pre>
       *
       * <code>repeated .cobaltspeech.cubic.Model models = 1;</code>
       */
      public Builder setModels(
          int index, com.cobaltspeech.cubic.sdk.CubicOuterClass.Model value) {
        if (modelsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureModelsIsMutable();
          models_.set(index, value);
          onChanged();
        } else {
          modelsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * List of models available for use that match the request.
       * </pre>
       *
       * <code>repeated .cobaltspeech.cubic.Model models = 1;</code>
       */
      public Builder setModels(
          int index, com.cobaltspeech.cubic.sdk.CubicOuterClass.Model.Builder builderForValue) {
        if (modelsBuilder_ == null) {
          ensureModelsIsMutable();
          models_.set(index, builderForValue.build());
          onChanged();
        } else {
          modelsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * List of models available for use that match the request.
       * </pre>
       *
       * <code>repeated .cobaltspeech.cubic.Model models = 1;</code>
       */
      public Builder addModels(com.cobaltspeech.cubic.sdk.CubicOuterClass.Model value) {
        if (modelsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureModelsIsMutable();
          models_.add(value);
          onChanged();
        } else {
          modelsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * List of models available for use that match the request.
       * </pre>
       *
       * <code>repeated .cobaltspeech.cubic.Model models = 1;</code>
       */
      public Builder addModels(
          int index, com.cobaltspeech.cubic.sdk.CubicOuterClass.Model value) {
        if (modelsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureModelsIsMutable();
          models_.add(index, value);
          onChanged();
        } else {
          modelsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * List of models available for use that match the request.
       * </pre>
       *
       * <code>repeated .cobaltspeech.cubic.Model models = 1;</code>
       */
      public Builder addModels(
          com.cobaltspeech.cubic.sdk.CubicOuterClass.Model.Builder builderForValue) {
        if (modelsBuilder_ == null) {
          ensureModelsIsMutable();
          models_.add(builderForValue.build());
          onChanged();
        } else {
          modelsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * List of models available for use that match the request.
       * </pre>
       *
       * <code>repeated .cobaltspeech.cubic.Model models = 1;</code>
       */
      public Builder addModels(
          int index, com.cobaltspeech.cubic.sdk.CubicOuterClass.Model.Builder builderForValue) {
        if (modelsBuilder_ == null) {
          ensureModelsIsMutable();
          models_.add(index, builderForValue.build());
          onChanged();
        } else {
          modelsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * List of models available for use that match the request.
       * </pre>
       *
       * <code>repeated .cobaltspeech.cubic.Model models = 1;</code>
       */
      public Builder addAllModels(
          java.lang.Iterable<? extends com.cobaltspeech.cubic.sdk.CubicOuterClass.Model> values) {
        if (modelsBuilder_ == null) {
          ensureModelsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, models_);
          onChanged();
        } else {
          modelsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * List of models available for use that match the request.
       * </pre>
       *
       * <code>repeated .cobaltspeech.cubic.Model models = 1;</code>
       */
      public Builder clearModels() {
        if (modelsBuilder_ == null) {
          models_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          modelsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * List of models available for use that match the request.
       * </pre>
       *
       * <code>repeated .cobaltspeech.cubic.Model models = 1;</code>
       */
      public Builder removeModels(int index) {
        if (modelsBuilder_ == null) {
          ensureModelsIsMutable();
          models_.remove(index);
          onChanged();
        } else {
          modelsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * List of models available for use that match the request.
       * </pre>
       *
       * <code>repeated .cobaltspeech.cubic.Model models = 1;</code>
       */
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.Model.Builder getModelsBuilder(
          int index) {
        return getModelsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * List of models available for use that match the request.
       * </pre>
       *
       * <code>repeated .cobaltspeech.cubic.Model models = 1;</code>
       */
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.ModelOrBuilder getModelsOrBuilder(
          int index) {
        if (modelsBuilder_ == null) {
          return models_.get(index);  } else {
          return modelsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * List of models available for use that match the request.
       * </pre>
       *
       * <code>repeated .cobaltspeech.cubic.Model models = 1;</code>
       */
      public java.util.List<? extends com.cobaltspeech.cubic.sdk.CubicOuterClass.ModelOrBuilder> 
           getModelsOrBuilderList() {
        if (modelsBuilder_ != null) {
          return modelsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(models_);
        }
      }
      /**
       * <pre>
       * List of models available for use that match the request.
       * </pre>
       *
       * <code>repeated .cobaltspeech.cubic.Model models = 1;</code>
       */
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.Model.Builder addModelsBuilder() {
        return getModelsFieldBuilder().addBuilder(
            com.cobaltspeech.cubic.sdk.CubicOuterClass.Model.getDefaultInstance());
      }
      /**
       * <pre>
       * List of models available for use that match the request.
       * </pre>
       *
       * <code>repeated .cobaltspeech.cubic.Model models = 1;</code>
       */
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.Model.Builder addModelsBuilder(
          int index) {
        return getModelsFieldBuilder().addBuilder(
            index, com.cobaltspeech.cubic.sdk.CubicOuterClass.Model.getDefaultInstance());
      }
      /**
       * <pre>
       * List of models available for use that match the request.
       * </pre>
       *
       * <code>repeated .cobaltspeech.cubic.Model models = 1;</code>
       */
      public java.util.List<com.cobaltspeech.cubic.sdk.CubicOuterClass.Model.Builder> 
           getModelsBuilderList() {
        return getModelsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.cobaltspeech.cubic.sdk.CubicOuterClass.Model, com.cobaltspeech.cubic.sdk.CubicOuterClass.Model.Builder, com.cobaltspeech.cubic.sdk.CubicOuterClass.ModelOrBuilder> 
          getModelsFieldBuilder() {
        if (modelsBuilder_ == null) {
          modelsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.cobaltspeech.cubic.sdk.CubicOuterClass.Model, com.cobaltspeech.cubic.sdk.CubicOuterClass.Model.Builder, com.cobaltspeech.cubic.sdk.CubicOuterClass.ModelOrBuilder>(
                  models_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          models_ = null;
        }
        return modelsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:cobaltspeech.cubic.ListModelsResponse)
    }

    // @@protoc_insertion_point(class_scope:cobaltspeech.cubic.ListModelsResponse)
    private static final com.cobaltspeech.cubic.sdk.CubicOuterClass.ListModelsResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.cobaltspeech.cubic.sdk.CubicOuterClass.ListModelsResponse();
    }

    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.ListModelsResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ListModelsResponse>
        PARSER = new com.google.protobuf.AbstractParser<ListModelsResponse>() {
      @java.lang.Override
      public ListModelsResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ListModelsResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ListModelsResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ListModelsResponse> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.cobaltspeech.cubic.sdk.CubicOuterClass.ListModelsResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RecognitionResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:cobaltspeech.cubic.RecognitionResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .cobaltspeech.cubic.RecognitionResult results = 1;</code>
     */
    java.util.List<com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionResult> 
        getResultsList();
    /**
     * <code>repeated .cobaltspeech.cubic.RecognitionResult results = 1;</code>
     */
    com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionResult getResults(int index);
    /**
     * <code>repeated .cobaltspeech.cubic.RecognitionResult results = 1;</code>
     */
    int getResultsCount();
    /**
     * <code>repeated .cobaltspeech.cubic.RecognitionResult results = 1;</code>
     */
    java.util.List<? extends com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionResultOrBuilder> 
        getResultsOrBuilderList();
    /**
     * <code>repeated .cobaltspeech.cubic.RecognitionResult results = 1;</code>
     */
    com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionResultOrBuilder getResultsOrBuilder(
        int index);
  }
  /**
   * <pre>
   * Collection of sequence of recognition results in a portion of audio.  When
   * transcribing a single audio channel (e.g. RAW_LINEAR16 input, or a mono
   * file), results will be ordered chronologically.  When transcribing multiple
   * channels, the results of all channels will be interleaved.  Results of each
   * individual channel will be chronological.  No such promise is made for the
   * ordering of results of different channels, as results are returned for each
   * channel individually as soon as they are ready.
   * </pre>
   *
   * Protobuf type {@code cobaltspeech.cubic.RecognitionResponse}
   */
  public  static final class RecognitionResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:cobaltspeech.cubic.RecognitionResponse)
      RecognitionResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use RecognitionResponse.newBuilder() to construct.
    private RecognitionResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RecognitionResponse() {
      results_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private RecognitionResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                results_ = new java.util.ArrayList<com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionResult>();
                mutable_bitField0_ |= 0x00000001;
              }
              results_.add(
                  input.readMessage(com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionResult.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          results_ = java.util.Collections.unmodifiableList(results_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.cobaltspeech.cubic.sdk.CubicOuterClass.internal_static_cobaltspeech_cubic_RecognitionResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.cobaltspeech.cubic.sdk.CubicOuterClass.internal_static_cobaltspeech_cubic_RecognitionResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionResponse.class, com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionResponse.Builder.class);
    }

    public static final int RESULTS_FIELD_NUMBER = 1;
    private java.util.List<com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionResult> results_;
    /**
     * <code>repeated .cobaltspeech.cubic.RecognitionResult results = 1;</code>
     */
    public java.util.List<com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionResult> getResultsList() {
      return results_;
    }
    /**
     * <code>repeated .cobaltspeech.cubic.RecognitionResult results = 1;</code>
     */
    public java.util.List<? extends com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionResultOrBuilder> 
        getResultsOrBuilderList() {
      return results_;
    }
    /**
     * <code>repeated .cobaltspeech.cubic.RecognitionResult results = 1;</code>
     */
    public int getResultsCount() {
      return results_.size();
    }
    /**
     * <code>repeated .cobaltspeech.cubic.RecognitionResult results = 1;</code>
     */
    public com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionResult getResults(int index) {
      return results_.get(index);
    }
    /**
     * <code>repeated .cobaltspeech.cubic.RecognitionResult results = 1;</code>
     */
    public com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionResultOrBuilder getResultsOrBuilder(
        int index) {
      return results_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < results_.size(); i++) {
        output.writeMessage(1, results_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < results_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, results_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionResponse)) {
        return super.equals(obj);
      }
      com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionResponse other = (com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionResponse) obj;

      if (!getResultsList()
          .equals(other.getResultsList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getResultsCount() > 0) {
        hash = (37 * hash) + RESULTS_FIELD_NUMBER;
        hash = (53 * hash) + getResultsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Collection of sequence of recognition results in a portion of audio.  When
     * transcribing a single audio channel (e.g. RAW_LINEAR16 input, or a mono
     * file), results will be ordered chronologically.  When transcribing multiple
     * channels, the results of all channels will be interleaved.  Results of each
     * individual channel will be chronological.  No such promise is made for the
     * ordering of results of different channels, as results are returned for each
     * channel individually as soon as they are ready.
     * </pre>
     *
     * Protobuf type {@code cobaltspeech.cubic.RecognitionResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:cobaltspeech.cubic.RecognitionResponse)
        com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.cobaltspeech.cubic.sdk.CubicOuterClass.internal_static_cobaltspeech_cubic_RecognitionResponse_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.cobaltspeech.cubic.sdk.CubicOuterClass.internal_static_cobaltspeech_cubic_RecognitionResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionResponse.class, com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionResponse.Builder.class);
      }

      // Construct using com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getResultsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (resultsBuilder_ == null) {
          results_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          resultsBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.cobaltspeech.cubic.sdk.CubicOuterClass.internal_static_cobaltspeech_cubic_RecognitionResponse_descriptor;
      }

      @java.lang.Override
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionResponse getDefaultInstanceForType() {
        return com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionResponse.getDefaultInstance();
      }

      @java.lang.Override
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionResponse build() {
        com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionResponse buildPartial() {
        com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionResponse result = new com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionResponse(this);
        int from_bitField0_ = bitField0_;
        if (resultsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            results_ = java.util.Collections.unmodifiableList(results_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.results_ = results_;
        } else {
          result.results_ = resultsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionResponse) {
          return mergeFrom((com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionResponse other) {
        if (other == com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionResponse.getDefaultInstance()) return this;
        if (resultsBuilder_ == null) {
          if (!other.results_.isEmpty()) {
            if (results_.isEmpty()) {
              results_ = other.results_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureResultsIsMutable();
              results_.addAll(other.results_);
            }
            onChanged();
          }
        } else {
          if (!other.results_.isEmpty()) {
            if (resultsBuilder_.isEmpty()) {
              resultsBuilder_.dispose();
              resultsBuilder_ = null;
              results_ = other.results_;
              bitField0_ = (bitField0_ & ~0x00000001);
              resultsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getResultsFieldBuilder() : null;
            } else {
              resultsBuilder_.addAllMessages(other.results_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionResult> results_ =
        java.util.Collections.emptyList();
      private void ensureResultsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          results_ = new java.util.ArrayList<com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionResult>(results_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionResult, com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionResult.Builder, com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionResultOrBuilder> resultsBuilder_;

      /**
       * <code>repeated .cobaltspeech.cubic.RecognitionResult results = 1;</code>
       */
      public java.util.List<com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionResult> getResultsList() {
        if (resultsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(results_);
        } else {
          return resultsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .cobaltspeech.cubic.RecognitionResult results = 1;</code>
       */
      public int getResultsCount() {
        if (resultsBuilder_ == null) {
          return results_.size();
        } else {
          return resultsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .cobaltspeech.cubic.RecognitionResult results = 1;</code>
       */
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionResult getResults(int index) {
        if (resultsBuilder_ == null) {
          return results_.get(index);
        } else {
          return resultsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .cobaltspeech.cubic.RecognitionResult results = 1;</code>
       */
      public Builder setResults(
          int index, com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionResult value) {
        if (resultsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureResultsIsMutable();
          results_.set(index, value);
          onChanged();
        } else {
          resultsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .cobaltspeech.cubic.RecognitionResult results = 1;</code>
       */
      public Builder setResults(
          int index, com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionResult.Builder builderForValue) {
        if (resultsBuilder_ == null) {
          ensureResultsIsMutable();
          results_.set(index, builderForValue.build());
          onChanged();
        } else {
          resultsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .cobaltspeech.cubic.RecognitionResult results = 1;</code>
       */
      public Builder addResults(com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionResult value) {
        if (resultsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureResultsIsMutable();
          results_.add(value);
          onChanged();
        } else {
          resultsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .cobaltspeech.cubic.RecognitionResult results = 1;</code>
       */
      public Builder addResults(
          int index, com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionResult value) {
        if (resultsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureResultsIsMutable();
          results_.add(index, value);
          onChanged();
        } else {
          resultsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .cobaltspeech.cubic.RecognitionResult results = 1;</code>
       */
      public Builder addResults(
          com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionResult.Builder builderForValue) {
        if (resultsBuilder_ == null) {
          ensureResultsIsMutable();
          results_.add(builderForValue.build());
          onChanged();
        } else {
          resultsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .cobaltspeech.cubic.RecognitionResult results = 1;</code>
       */
      public Builder addResults(
          int index, com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionResult.Builder builderForValue) {
        if (resultsBuilder_ == null) {
          ensureResultsIsMutable();
          results_.add(index, builderForValue.build());
          onChanged();
        } else {
          resultsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .cobaltspeech.cubic.RecognitionResult results = 1;</code>
       */
      public Builder addAllResults(
          java.lang.Iterable<? extends com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionResult> values) {
        if (resultsBuilder_ == null) {
          ensureResultsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, results_);
          onChanged();
        } else {
          resultsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .cobaltspeech.cubic.RecognitionResult results = 1;</code>
       */
      public Builder clearResults() {
        if (resultsBuilder_ == null) {
          results_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          resultsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .cobaltspeech.cubic.RecognitionResult results = 1;</code>
       */
      public Builder removeResults(int index) {
        if (resultsBuilder_ == null) {
          ensureResultsIsMutable();
          results_.remove(index);
          onChanged();
        } else {
          resultsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .cobaltspeech.cubic.RecognitionResult results = 1;</code>
       */
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionResult.Builder getResultsBuilder(
          int index) {
        return getResultsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .cobaltspeech.cubic.RecognitionResult results = 1;</code>
       */
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionResultOrBuilder getResultsOrBuilder(
          int index) {
        if (resultsBuilder_ == null) {
          return results_.get(index);  } else {
          return resultsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .cobaltspeech.cubic.RecognitionResult results = 1;</code>
       */
      public java.util.List<? extends com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionResultOrBuilder> 
           getResultsOrBuilderList() {
        if (resultsBuilder_ != null) {
          return resultsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(results_);
        }
      }
      /**
       * <code>repeated .cobaltspeech.cubic.RecognitionResult results = 1;</code>
       */
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionResult.Builder addResultsBuilder() {
        return getResultsFieldBuilder().addBuilder(
            com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionResult.getDefaultInstance());
      }
      /**
       * <code>repeated .cobaltspeech.cubic.RecognitionResult results = 1;</code>
       */
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionResult.Builder addResultsBuilder(
          int index) {
        return getResultsFieldBuilder().addBuilder(
            index, com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionResult.getDefaultInstance());
      }
      /**
       * <code>repeated .cobaltspeech.cubic.RecognitionResult results = 1;</code>
       */
      public java.util.List<com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionResult.Builder> 
           getResultsBuilderList() {
        return getResultsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionResult, com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionResult.Builder, com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionResultOrBuilder> 
          getResultsFieldBuilder() {
        if (resultsBuilder_ == null) {
          resultsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionResult, com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionResult.Builder, com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionResultOrBuilder>(
                  results_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          results_ = null;
        }
        return resultsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:cobaltspeech.cubic.RecognitionResponse)
    }

    // @@protoc_insertion_point(class_scope:cobaltspeech.cubic.RecognitionResponse)
    private static final com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionResponse();
    }

    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RecognitionResponse>
        PARSER = new com.google.protobuf.AbstractParser<RecognitionResponse>() {
      @java.lang.Override
      public RecognitionResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RecognitionResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RecognitionResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RecognitionResponse> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CompileContextResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:cobaltspeech.cubic.CompileContextResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Context information in a compact form that is efficient for use in
     * subsequent recognition requests. The size of the compiled form will depend
     * on the amount of text that was sent for compilation. For 1000 words it's
     * generally less than 100 kilobytes.
     * </pre>
     *
     * <code>.cobaltspeech.cubic.CompiledContext context = 1;</code>
     */
    boolean hasContext();
    /**
     * <pre>
     * Context information in a compact form that is efficient for use in
     * subsequent recognition requests. The size of the compiled form will depend
     * on the amount of text that was sent for compilation. For 1000 words it's
     * generally less than 100 kilobytes.
     * </pre>
     *
     * <code>.cobaltspeech.cubic.CompiledContext context = 1;</code>
     */
    com.cobaltspeech.cubic.sdk.CubicOuterClass.CompiledContext getContext();
    /**
     * <pre>
     * Context information in a compact form that is efficient for use in
     * subsequent recognition requests. The size of the compiled form will depend
     * on the amount of text that was sent for compilation. For 1000 words it's
     * generally less than 100 kilobytes.
     * </pre>
     *
     * <code>.cobaltspeech.cubic.CompiledContext context = 1;</code>
     */
    com.cobaltspeech.cubic.sdk.CubicOuterClass.CompiledContextOrBuilder getContextOrBuilder();
  }
  /**
   * <pre>
   * The message returned to the client by the `CompileContext` method.
   * </pre>
   *
   * Protobuf type {@code cobaltspeech.cubic.CompileContextResponse}
   */
  public  static final class CompileContextResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:cobaltspeech.cubic.CompileContextResponse)
      CompileContextResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CompileContextResponse.newBuilder() to construct.
    private CompileContextResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CompileContextResponse() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CompileContextResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.cobaltspeech.cubic.sdk.CubicOuterClass.CompiledContext.Builder subBuilder = null;
              if (context_ != null) {
                subBuilder = context_.toBuilder();
              }
              context_ = input.readMessage(com.cobaltspeech.cubic.sdk.CubicOuterClass.CompiledContext.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(context_);
                context_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.cobaltspeech.cubic.sdk.CubicOuterClass.internal_static_cobaltspeech_cubic_CompileContextResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.cobaltspeech.cubic.sdk.CubicOuterClass.internal_static_cobaltspeech_cubic_CompileContextResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.cobaltspeech.cubic.sdk.CubicOuterClass.CompileContextResponse.class, com.cobaltspeech.cubic.sdk.CubicOuterClass.CompileContextResponse.Builder.class);
    }

    public static final int CONTEXT_FIELD_NUMBER = 1;
    private com.cobaltspeech.cubic.sdk.CubicOuterClass.CompiledContext context_;
    /**
     * <pre>
     * Context information in a compact form that is efficient for use in
     * subsequent recognition requests. The size of the compiled form will depend
     * on the amount of text that was sent for compilation. For 1000 words it's
     * generally less than 100 kilobytes.
     * </pre>
     *
     * <code>.cobaltspeech.cubic.CompiledContext context = 1;</code>
     */
    public boolean hasContext() {
      return context_ != null;
    }
    /**
     * <pre>
     * Context information in a compact form that is efficient for use in
     * subsequent recognition requests. The size of the compiled form will depend
     * on the amount of text that was sent for compilation. For 1000 words it's
     * generally less than 100 kilobytes.
     * </pre>
     *
     * <code>.cobaltspeech.cubic.CompiledContext context = 1;</code>
     */
    public com.cobaltspeech.cubic.sdk.CubicOuterClass.CompiledContext getContext() {
      return context_ == null ? com.cobaltspeech.cubic.sdk.CubicOuterClass.CompiledContext.getDefaultInstance() : context_;
    }
    /**
     * <pre>
     * Context information in a compact form that is efficient for use in
     * subsequent recognition requests. The size of the compiled form will depend
     * on the amount of text that was sent for compilation. For 1000 words it's
     * generally less than 100 kilobytes.
     * </pre>
     *
     * <code>.cobaltspeech.cubic.CompiledContext context = 1;</code>
     */
    public com.cobaltspeech.cubic.sdk.CubicOuterClass.CompiledContextOrBuilder getContextOrBuilder() {
      return getContext();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (context_ != null) {
        output.writeMessage(1, getContext());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (context_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getContext());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.cobaltspeech.cubic.sdk.CubicOuterClass.CompileContextResponse)) {
        return super.equals(obj);
      }
      com.cobaltspeech.cubic.sdk.CubicOuterClass.CompileContextResponse other = (com.cobaltspeech.cubic.sdk.CubicOuterClass.CompileContextResponse) obj;

      if (hasContext() != other.hasContext()) return false;
      if (hasContext()) {
        if (!getContext()
            .equals(other.getContext())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasContext()) {
        hash = (37 * hash) + CONTEXT_FIELD_NUMBER;
        hash = (53 * hash) + getContext().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.CompileContextResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.CompileContextResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.CompileContextResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.CompileContextResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.CompileContextResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.CompileContextResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.CompileContextResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.CompileContextResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.CompileContextResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.CompileContextResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.CompileContextResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.CompileContextResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.cobaltspeech.cubic.sdk.CubicOuterClass.CompileContextResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * The message returned to the client by the `CompileContext` method.
     * </pre>
     *
     * Protobuf type {@code cobaltspeech.cubic.CompileContextResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:cobaltspeech.cubic.CompileContextResponse)
        com.cobaltspeech.cubic.sdk.CubicOuterClass.CompileContextResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.cobaltspeech.cubic.sdk.CubicOuterClass.internal_static_cobaltspeech_cubic_CompileContextResponse_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.cobaltspeech.cubic.sdk.CubicOuterClass.internal_static_cobaltspeech_cubic_CompileContextResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.cobaltspeech.cubic.sdk.CubicOuterClass.CompileContextResponse.class, com.cobaltspeech.cubic.sdk.CubicOuterClass.CompileContextResponse.Builder.class);
      }

      // Construct using com.cobaltspeech.cubic.sdk.CubicOuterClass.CompileContextResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (contextBuilder_ == null) {
          context_ = null;
        } else {
          context_ = null;
          contextBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.cobaltspeech.cubic.sdk.CubicOuterClass.internal_static_cobaltspeech_cubic_CompileContextResponse_descriptor;
      }

      @java.lang.Override
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.CompileContextResponse getDefaultInstanceForType() {
        return com.cobaltspeech.cubic.sdk.CubicOuterClass.CompileContextResponse.getDefaultInstance();
      }

      @java.lang.Override
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.CompileContextResponse build() {
        com.cobaltspeech.cubic.sdk.CubicOuterClass.CompileContextResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.CompileContextResponse buildPartial() {
        com.cobaltspeech.cubic.sdk.CubicOuterClass.CompileContextResponse result = new com.cobaltspeech.cubic.sdk.CubicOuterClass.CompileContextResponse(this);
        if (contextBuilder_ == null) {
          result.context_ = context_;
        } else {
          result.context_ = contextBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.cobaltspeech.cubic.sdk.CubicOuterClass.CompileContextResponse) {
          return mergeFrom((com.cobaltspeech.cubic.sdk.CubicOuterClass.CompileContextResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.cobaltspeech.cubic.sdk.CubicOuterClass.CompileContextResponse other) {
        if (other == com.cobaltspeech.cubic.sdk.CubicOuterClass.CompileContextResponse.getDefaultInstance()) return this;
        if (other.hasContext()) {
          mergeContext(other.getContext());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.cobaltspeech.cubic.sdk.CubicOuterClass.CompileContextResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.cobaltspeech.cubic.sdk.CubicOuterClass.CompileContextResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private com.cobaltspeech.cubic.sdk.CubicOuterClass.CompiledContext context_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.cobaltspeech.cubic.sdk.CubicOuterClass.CompiledContext, com.cobaltspeech.cubic.sdk.CubicOuterClass.CompiledContext.Builder, com.cobaltspeech.cubic.sdk.CubicOuterClass.CompiledContextOrBuilder> contextBuilder_;
      /**
       * <pre>
       * Context information in a compact form that is efficient for use in
       * subsequent recognition requests. The size of the compiled form will depend
       * on the amount of text that was sent for compilation. For 1000 words it's
       * generally less than 100 kilobytes.
       * </pre>
       *
       * <code>.cobaltspeech.cubic.CompiledContext context = 1;</code>
       */
      public boolean hasContext() {
        return contextBuilder_ != null || context_ != null;
      }
      /**
       * <pre>
       * Context information in a compact form that is efficient for use in
       * subsequent recognition requests. The size of the compiled form will depend
       * on the amount of text that was sent for compilation. For 1000 words it's
       * generally less than 100 kilobytes.
       * </pre>
       *
       * <code>.cobaltspeech.cubic.CompiledContext context = 1;</code>
       */
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.CompiledContext getContext() {
        if (contextBuilder_ == null) {
          return context_ == null ? com.cobaltspeech.cubic.sdk.CubicOuterClass.CompiledContext.getDefaultInstance() : context_;
        } else {
          return contextBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Context information in a compact form that is efficient for use in
       * subsequent recognition requests. The size of the compiled form will depend
       * on the amount of text that was sent for compilation. For 1000 words it's
       * generally less than 100 kilobytes.
       * </pre>
       *
       * <code>.cobaltspeech.cubic.CompiledContext context = 1;</code>
       */
      public Builder setContext(com.cobaltspeech.cubic.sdk.CubicOuterClass.CompiledContext value) {
        if (contextBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          context_ = value;
          onChanged();
        } else {
          contextBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Context information in a compact form that is efficient for use in
       * subsequent recognition requests. The size of the compiled form will depend
       * on the amount of text that was sent for compilation. For 1000 words it's
       * generally less than 100 kilobytes.
       * </pre>
       *
       * <code>.cobaltspeech.cubic.CompiledContext context = 1;</code>
       */
      public Builder setContext(
          com.cobaltspeech.cubic.sdk.CubicOuterClass.CompiledContext.Builder builderForValue) {
        if (contextBuilder_ == null) {
          context_ = builderForValue.build();
          onChanged();
        } else {
          contextBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Context information in a compact form that is efficient for use in
       * subsequent recognition requests. The size of the compiled form will depend
       * on the amount of text that was sent for compilation. For 1000 words it's
       * generally less than 100 kilobytes.
       * </pre>
       *
       * <code>.cobaltspeech.cubic.CompiledContext context = 1;</code>
       */
      public Builder mergeContext(com.cobaltspeech.cubic.sdk.CubicOuterClass.CompiledContext value) {
        if (contextBuilder_ == null) {
          if (context_ != null) {
            context_ =
              com.cobaltspeech.cubic.sdk.CubicOuterClass.CompiledContext.newBuilder(context_).mergeFrom(value).buildPartial();
          } else {
            context_ = value;
          }
          onChanged();
        } else {
          contextBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Context information in a compact form that is efficient for use in
       * subsequent recognition requests. The size of the compiled form will depend
       * on the amount of text that was sent for compilation. For 1000 words it's
       * generally less than 100 kilobytes.
       * </pre>
       *
       * <code>.cobaltspeech.cubic.CompiledContext context = 1;</code>
       */
      public Builder clearContext() {
        if (contextBuilder_ == null) {
          context_ = null;
          onChanged();
        } else {
          context_ = null;
          contextBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Context information in a compact form that is efficient for use in
       * subsequent recognition requests. The size of the compiled form will depend
       * on the amount of text that was sent for compilation. For 1000 words it's
       * generally less than 100 kilobytes.
       * </pre>
       *
       * <code>.cobaltspeech.cubic.CompiledContext context = 1;</code>
       */
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.CompiledContext.Builder getContextBuilder() {
        
        onChanged();
        return getContextFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Context information in a compact form that is efficient for use in
       * subsequent recognition requests. The size of the compiled form will depend
       * on the amount of text that was sent for compilation. For 1000 words it's
       * generally less than 100 kilobytes.
       * </pre>
       *
       * <code>.cobaltspeech.cubic.CompiledContext context = 1;</code>
       */
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.CompiledContextOrBuilder getContextOrBuilder() {
        if (contextBuilder_ != null) {
          return contextBuilder_.getMessageOrBuilder();
        } else {
          return context_ == null ?
              com.cobaltspeech.cubic.sdk.CubicOuterClass.CompiledContext.getDefaultInstance() : context_;
        }
      }
      /**
       * <pre>
       * Context information in a compact form that is efficient for use in
       * subsequent recognition requests. The size of the compiled form will depend
       * on the amount of text that was sent for compilation. For 1000 words it's
       * generally less than 100 kilobytes.
       * </pre>
       *
       * <code>.cobaltspeech.cubic.CompiledContext context = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.cobaltspeech.cubic.sdk.CubicOuterClass.CompiledContext, com.cobaltspeech.cubic.sdk.CubicOuterClass.CompiledContext.Builder, com.cobaltspeech.cubic.sdk.CubicOuterClass.CompiledContextOrBuilder> 
          getContextFieldBuilder() {
        if (contextBuilder_ == null) {
          contextBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.cobaltspeech.cubic.sdk.CubicOuterClass.CompiledContext, com.cobaltspeech.cubic.sdk.CubicOuterClass.CompiledContext.Builder, com.cobaltspeech.cubic.sdk.CubicOuterClass.CompiledContextOrBuilder>(
                  getContext(),
                  getParentForChildren(),
                  isClean());
          context_ = null;
        }
        return contextBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:cobaltspeech.cubic.CompileContextResponse)
    }

    // @@protoc_insertion_point(class_scope:cobaltspeech.cubic.CompileContextResponse)
    private static final com.cobaltspeech.cubic.sdk.CubicOuterClass.CompileContextResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.cobaltspeech.cubic.sdk.CubicOuterClass.CompileContextResponse();
    }

    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.CompileContextResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CompileContextResponse>
        PARSER = new com.google.protobuf.AbstractParser<CompileContextResponse>() {
      @java.lang.Override
      public CompileContextResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CompileContextResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CompileContextResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CompileContextResponse> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.cobaltspeech.cubic.sdk.CubicOuterClass.CompileContextResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RecognitionConfigOrBuilder extends
      // @@protoc_insertion_point(interface_extends:cobaltspeech.cubic.RecognitionConfig)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Unique identifier of the model to use, as obtained from a `Model` message.
     * </pre>
     *
     * <code>string model_id = 1;</code>
     */
    java.lang.String getModelId();
    /**
     * <pre>
     * Unique identifier of the model to use, as obtained from a `Model` message.
     * </pre>
     *
     * <code>string model_id = 1;</code>
     */
    com.google.protobuf.ByteString
        getModelIdBytes();

    /**
     * <pre>
     * Encoding of audio data sent/streamed through the `RecognitionAudio`
     * messages.  For encodings like WAV/MP3 that have headers, the headers are
     * expected to be sent at the beginning of the stream, not in every
     * `RecognitionAudio` message.
     * If not specified, the default encoding is RAW_LINEAR16.
     * Depending on how they are configured, server instances of this service may
     * not support all the encodings enumerated above. They are always required to
     * accept RAW_LINEAR16.  If any other `Encoding` is specified, and it is not
     * available on the server being used, the recognition request will result in
     * an appropriate error message.
     * </pre>
     *
     * <code>.cobaltspeech.cubic.RecognitionConfig.Encoding audio_encoding = 2;</code>
     */
    int getAudioEncodingValue();
    /**
     * <pre>
     * Encoding of audio data sent/streamed through the `RecognitionAudio`
     * messages.  For encodings like WAV/MP3 that have headers, the headers are
     * expected to be sent at the beginning of the stream, not in every
     * `RecognitionAudio` message.
     * If not specified, the default encoding is RAW_LINEAR16.
     * Depending on how they are configured, server instances of this service may
     * not support all the encodings enumerated above. They are always required to
     * accept RAW_LINEAR16.  If any other `Encoding` is specified, and it is not
     * available on the server being used, the recognition request will result in
     * an appropriate error message.
     * </pre>
     *
     * <code>.cobaltspeech.cubic.RecognitionConfig.Encoding audio_encoding = 2;</code>
     */
    com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfig.Encoding getAudioEncoding();

    /**
     * <pre>
     * Idle Timeout of the created Recognizer.  If no audio data is received by
     * the recognizer for this duration, ongoing rpc calls will result in an
     * error, the recognizer will be destroyed and thus more audio may not be sent
     * to the same recognizer.  The server may impose a limit on the maximum idle
     * timeout that can be specified, and if the value in this message exceeds
     * that serverside value, creating of the recognizer will fail with an error.
     * </pre>
     *
     * <code>.google.protobuf.Duration idle_timeout = 3;</code>
     */
    boolean hasIdleTimeout();
    /**
     * <pre>
     * Idle Timeout of the created Recognizer.  If no audio data is received by
     * the recognizer for this duration, ongoing rpc calls will result in an
     * error, the recognizer will be destroyed and thus more audio may not be sent
     * to the same recognizer.  The server may impose a limit on the maximum idle
     * timeout that can be specified, and if the value in this message exceeds
     * that serverside value, creating of the recognizer will fail with an error.
     * </pre>
     *
     * <code>.google.protobuf.Duration idle_timeout = 3;</code>
     */
    com.google.protobuf.Duration getIdleTimeout();
    /**
     * <pre>
     * Idle Timeout of the created Recognizer.  If no audio data is received by
     * the recognizer for this duration, ongoing rpc calls will result in an
     * error, the recognizer will be destroyed and thus more audio may not be sent
     * to the same recognizer.  The server may impose a limit on the maximum idle
     * timeout that can be specified, and if the value in this message exceeds
     * that serverside value, creating of the recognizer will fail with an error.
     * </pre>
     *
     * <code>.google.protobuf.Duration idle_timeout = 3;</code>
     */
    com.google.protobuf.DurationOrBuilder getIdleTimeoutOrBuilder();

    /**
     * <pre>
     * This is an optional field.  If this is set to true, each result will
     * include a list of words and the start time offset (timestamp) and the
     * duration for each of those words.  If set to `false`, no word-level
     * timestamps will be returned.  The default is `false`.
     * </pre>
     *
     * <code>bool enable_word_time_offsets = 4;</code>
     */
    boolean getEnableWordTimeOffsets();

    /**
     * <pre>
     * This is an optional field.  If this is set to true, each result will
     * include a list of words and the confidence for those words.  If `false`, no
     * word-level confidence information is returned.  The default is `false`.
     * </pre>
     *
     * <code>bool enable_word_confidence = 5;</code>
     */
    boolean getEnableWordConfidence();

    /**
     * <pre>
     * This is an optional field.  If this is set to true, the field
     * `RecognitionAlternative.raw_transcript` will be populated with the raw
     * transcripts output from the recognizer will be exposed without any
     * formatting rules applied.  If this is set to false, that field will not
     * be set in the results.  The RecognitionAlternative.transcript will
     * always be populated with text formatted according to the server's settings.
     * </pre>
     *
     * <code>bool enable_raw_transcript = 6;</code>
     */
    boolean getEnableRawTranscript();

    /**
     * <pre>
     * This is an optional field.  If this is set to true, the results will
     * include a confusion network.  If set to `false`, no confusion network will
     * be returned.  The default is `false`.  If the model being used does not
     * support a confusion network, results may be returned without a confusion
     * network available.  If this field is set to `true`, then
     * `enable_raw_transcript` is also forced to be true.
     * </pre>
     *
     * <code>bool enable_confusion_network = 7;</code>
     */
    boolean getEnableConfusionNetwork();

    /**
     * <pre>
     * This is an optional field.  If the audio has multiple channels, this field
     * should be configured with the list of channel indices that should be
     * transcribed.  Channels are 0-indexed.
     * Example: `[0]` for a mono file, `[0, 1]` for a stereo file.
     * If this field is not set, a mono file will be assumed by default and only
     * channel-0 will be transcribed even if the file actually has additional
     * channels.
     * Channels that are present in the audio may be omitted, but it is an error
     * to include a channel index in this field that is not present in the audio.
     * Channels may be listed in any order but the same index may not be repeated
     * in this list.
     * BAD: `[0, 2]` for a stereo file; BAD: `[0, 0]` for a mono file.
     * </pre>
     *
     * <code>repeated uint32 audio_channels = 8;</code>
     */
    java.util.List<java.lang.Integer> getAudioChannelsList();
    /**
     * <pre>
     * This is an optional field.  If the audio has multiple channels, this field
     * should be configured with the list of channel indices that should be
     * transcribed.  Channels are 0-indexed.
     * Example: `[0]` for a mono file, `[0, 1]` for a stereo file.
     * If this field is not set, a mono file will be assumed by default and only
     * channel-0 will be transcribed even if the file actually has additional
     * channels.
     * Channels that are present in the audio may be omitted, but it is an error
     * to include a channel index in this field that is not present in the audio.
     * Channels may be listed in any order but the same index may not be repeated
     * in this list.
     * BAD: `[0, 2]` for a stereo file; BAD: `[0, 0]` for a mono file.
     * </pre>
     *
     * <code>repeated uint32 audio_channels = 8;</code>
     */
    int getAudioChannelsCount();
    /**
     * <pre>
     * This is an optional field.  If the audio has multiple channels, this field
     * should be configured with the list of channel indices that should be
     * transcribed.  Channels are 0-indexed.
     * Example: `[0]` for a mono file, `[0, 1]` for a stereo file.
     * If this field is not set, a mono file will be assumed by default and only
     * channel-0 will be transcribed even if the file actually has additional
     * channels.
     * Channels that are present in the audio may be omitted, but it is an error
     * to include a channel index in this field that is not present in the audio.
     * Channels may be listed in any order but the same index may not be repeated
     * in this list.
     * BAD: `[0, 2]` for a stereo file; BAD: `[0, 0]` for a mono file.
     * </pre>
     *
     * <code>repeated uint32 audio_channels = 8;</code>
     */
    int getAudioChannels(int index);

    /**
     * <pre>
     * This is an optional field.  If there is any metadata associated with the
     * audio being sent, use this field to provide it to cubic.  The server may
     * record this metadata when processing the request.  The server does not use
     * this field for any other purpose.
     * </pre>
     *
     * <code>.cobaltspeech.cubic.RecognitionMetadata metadata = 9;</code>
     */
    boolean hasMetadata();
    /**
     * <pre>
     * This is an optional field.  If there is any metadata associated with the
     * audio being sent, use this field to provide it to cubic.  The server may
     * record this metadata when processing the request.  The server does not use
     * this field for any other purpose.
     * </pre>
     *
     * <code>.cobaltspeech.cubic.RecognitionMetadata metadata = 9;</code>
     */
    com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionMetadata getMetadata();
    /**
     * <pre>
     * This is an optional field.  If there is any metadata associated with the
     * audio being sent, use this field to provide it to cubic.  The server may
     * record this metadata when processing the request.  The server does not use
     * this field for any other purpose.
     * </pre>
     *
     * <code>.cobaltspeech.cubic.RecognitionMetadata metadata = 9;</code>
     */
    com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionMetadataOrBuilder getMetadataOrBuilder();

    /**
     * <pre>
     * This is an optional field for providing any additional context information
     * that may aid speech recognition.  This can also be used to add
     * out-of-vocabulary words to the model or boost recognition of specific
     * proper names or commands. Context information must be pre-compiled via the
     * `CompileContext()` method.
     * </pre>
     *
     * <code>.cobaltspeech.cubic.RecognitionContext context = 10;</code>
     */
    boolean hasContext();
    /**
     * <pre>
     * This is an optional field for providing any additional context information
     * that may aid speech recognition.  This can also be used to add
     * out-of-vocabulary words to the model or boost recognition of specific
     * proper names or commands. Context information must be pre-compiled via the
     * `CompileContext()` method.
     * </pre>
     *
     * <code>.cobaltspeech.cubic.RecognitionContext context = 10;</code>
     */
    com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionContext getContext();
    /**
     * <pre>
     * This is an optional field for providing any additional context information
     * that may aid speech recognition.  This can also be used to add
     * out-of-vocabulary words to the model or boost recognition of specific
     * proper names or commands. Context information must be pre-compiled via the
     * `CompileContext()` method.
     * </pre>
     *
     * <code>.cobaltspeech.cubic.RecognitionContext context = 10;</code>
     */
    com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionContextOrBuilder getContextOrBuilder();
  }
  /**
   * <pre>
   * Configuration for setting up a Recognizer
   * </pre>
   *
   * Protobuf type {@code cobaltspeech.cubic.RecognitionConfig}
   */
  public  static final class RecognitionConfig extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:cobaltspeech.cubic.RecognitionConfig)
      RecognitionConfigOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use RecognitionConfig.newBuilder() to construct.
    private RecognitionConfig(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RecognitionConfig() {
      modelId_ = "";
      audioEncoding_ = 0;
      audioChannels_ = emptyIntList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private RecognitionConfig(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              modelId_ = s;
              break;
            }
            case 16: {
              int rawValue = input.readEnum();

              audioEncoding_ = rawValue;
              break;
            }
            case 26: {
              com.google.protobuf.Duration.Builder subBuilder = null;
              if (idleTimeout_ != null) {
                subBuilder = idleTimeout_.toBuilder();
              }
              idleTimeout_ = input.readMessage(com.google.protobuf.Duration.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(idleTimeout_);
                idleTimeout_ = subBuilder.buildPartial();
              }

              break;
            }
            case 32: {

              enableWordTimeOffsets_ = input.readBool();
              break;
            }
            case 40: {

              enableWordConfidence_ = input.readBool();
              break;
            }
            case 48: {

              enableRawTranscript_ = input.readBool();
              break;
            }
            case 56: {

              enableConfusionNetwork_ = input.readBool();
              break;
            }
            case 64: {
              if (!((mutable_bitField0_ & 0x00000080) != 0)) {
                audioChannels_ = newIntList();
                mutable_bitField0_ |= 0x00000080;
              }
              audioChannels_.addInt(input.readUInt32());
              break;
            }
            case 66: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000080) != 0) && input.getBytesUntilLimit() > 0) {
                audioChannels_ = newIntList();
                mutable_bitField0_ |= 0x00000080;
              }
              while (input.getBytesUntilLimit() > 0) {
                audioChannels_.addInt(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 74: {
              com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionMetadata.Builder subBuilder = null;
              if (metadata_ != null) {
                subBuilder = metadata_.toBuilder();
              }
              metadata_ = input.readMessage(com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionMetadata.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(metadata_);
                metadata_ = subBuilder.buildPartial();
              }

              break;
            }
            case 82: {
              com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionContext.Builder subBuilder = null;
              if (context_ != null) {
                subBuilder = context_.toBuilder();
              }
              context_ = input.readMessage(com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionContext.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(context_);
                context_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000080) != 0)) {
          audioChannels_.makeImmutable(); // C
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.cobaltspeech.cubic.sdk.CubicOuterClass.internal_static_cobaltspeech_cubic_RecognitionConfig_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.cobaltspeech.cubic.sdk.CubicOuterClass.internal_static_cobaltspeech_cubic_RecognitionConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfig.class, com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfig.Builder.class);
    }

    /**
     * <pre>
     * The encoding of the audio data to be sent for recognition.
     * For best results, the audio source should be captured and transmitted using
     * the RAW_LINEAR16 encoding.
     * </pre>
     *
     * Protobuf enum {@code cobaltspeech.cubic.RecognitionConfig.Encoding}
     */
    public enum Encoding
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <pre>
       * Raw (headerless) Uncompressed 16-bit signed little endian samples (linear
       * PCM), single channel, sampled at the rate expected by the chosen `Model`.
       * </pre>
       *
       * <code>RAW_LINEAR16 = 0;</code>
       */
      RAW_LINEAR16(0),
      /**
       * <pre>
       * WAV (data with RIFF headers), with data sampled at a rate equal to or
       * higher than the sample rate expected by the chosen Model.
       * </pre>
       *
       * <code>WAV = 1;</code>
       */
      WAV(1),
      /**
       * <pre>
       * MP3 data, sampled at a rate equal to or higher than the sampling rate
       * expected by the chosen Model.
       * </pre>
       *
       * <code>MP3 = 2;</code>
       */
      MP3(2),
      /**
       * <pre>
       * FLAC data, sampled at a rate equal to or higher than the sample rate
       * expected by the chosen Model.
       * </pre>
       *
       * <code>FLAC = 3;</code>
       */
      FLAC(3),
      /**
       * <pre>
       * VOX data (Dialogic ADPCM), sampled at 8 KHz.
       * </pre>
       *
       * <code>VOX8000 = 4;</code>
       */
      VOX8000(4),
      /**
       * <pre>
       * μ-law (8-bit) encoded RAW data, single channel, sampled at 8 KHz.
       * </pre>
       *
       * <code>ULAW8000 = 5;</code>
       */
      ULAW8000(5),
      UNRECOGNIZED(-1),
      ;

      /**
       * <pre>
       * Raw (headerless) Uncompressed 16-bit signed little endian samples (linear
       * PCM), single channel, sampled at the rate expected by the chosen `Model`.
       * </pre>
       *
       * <code>RAW_LINEAR16 = 0;</code>
       */
      public static final int RAW_LINEAR16_VALUE = 0;
      /**
       * <pre>
       * WAV (data with RIFF headers), with data sampled at a rate equal to or
       * higher than the sample rate expected by the chosen Model.
       * </pre>
       *
       * <code>WAV = 1;</code>
       */
      public static final int WAV_VALUE = 1;
      /**
       * <pre>
       * MP3 data, sampled at a rate equal to or higher than the sampling rate
       * expected by the chosen Model.
       * </pre>
       *
       * <code>MP3 = 2;</code>
       */
      public static final int MP3_VALUE = 2;
      /**
       * <pre>
       * FLAC data, sampled at a rate equal to or higher than the sample rate
       * expected by the chosen Model.
       * </pre>
       *
       * <code>FLAC = 3;</code>
       */
      public static final int FLAC_VALUE = 3;
      /**
       * <pre>
       * VOX data (Dialogic ADPCM), sampled at 8 KHz.
       * </pre>
       *
       * <code>VOX8000 = 4;</code>
       */
      public static final int VOX8000_VALUE = 4;
      /**
       * <pre>
       * μ-law (8-bit) encoded RAW data, single channel, sampled at 8 KHz.
       * </pre>
       *
       * <code>ULAW8000 = 5;</code>
       */
      public static final int ULAW8000_VALUE = 5;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Encoding valueOf(int value) {
        return forNumber(value);
      }

      public static Encoding forNumber(int value) {
        switch (value) {
          case 0: return RAW_LINEAR16;
          case 1: return WAV;
          case 2: return MP3;
          case 3: return FLAC;
          case 4: return VOX8000;
          case 5: return ULAW8000;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Encoding>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Encoding> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Encoding>() {
              public Encoding findValueByNumber(int number) {
                return Encoding.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfig.getDescriptor().getEnumTypes().get(0);
      }

      private static final Encoding[] VALUES = values();

      public static Encoding valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Encoding(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:cobaltspeech.cubic.RecognitionConfig.Encoding)
    }

    private int bitField0_;
    public static final int MODEL_ID_FIELD_NUMBER = 1;
    private volatile java.lang.Object modelId_;
    /**
     * <pre>
     * Unique identifier of the model to use, as obtained from a `Model` message.
     * </pre>
     *
     * <code>string model_id = 1;</code>
     */
    public java.lang.String getModelId() {
      java.lang.Object ref = modelId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        modelId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Unique identifier of the model to use, as obtained from a `Model` message.
     * </pre>
     *
     * <code>string model_id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getModelIdBytes() {
      java.lang.Object ref = modelId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        modelId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int AUDIO_ENCODING_FIELD_NUMBER = 2;
    private int audioEncoding_;
    /**
     * <pre>
     * Encoding of audio data sent/streamed through the `RecognitionAudio`
     * messages.  For encodings like WAV/MP3 that have headers, the headers are
     * expected to be sent at the beginning of the stream, not in every
     * `RecognitionAudio` message.
     * If not specified, the default encoding is RAW_LINEAR16.
     * Depending on how they are configured, server instances of this service may
     * not support all the encodings enumerated above. They are always required to
     * accept RAW_LINEAR16.  If any other `Encoding` is specified, and it is not
     * available on the server being used, the recognition request will result in
     * an appropriate error message.
     * </pre>
     *
     * <code>.cobaltspeech.cubic.RecognitionConfig.Encoding audio_encoding = 2;</code>
     */
    public int getAudioEncodingValue() {
      return audioEncoding_;
    }
    /**
     * <pre>
     * Encoding of audio data sent/streamed through the `RecognitionAudio`
     * messages.  For encodings like WAV/MP3 that have headers, the headers are
     * expected to be sent at the beginning of the stream, not in every
     * `RecognitionAudio` message.
     * If not specified, the default encoding is RAW_LINEAR16.
     * Depending on how they are configured, server instances of this service may
     * not support all the encodings enumerated above. They are always required to
     * accept RAW_LINEAR16.  If any other `Encoding` is specified, and it is not
     * available on the server being used, the recognition request will result in
     * an appropriate error message.
     * </pre>
     *
     * <code>.cobaltspeech.cubic.RecognitionConfig.Encoding audio_encoding = 2;</code>
     */
    public com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfig.Encoding getAudioEncoding() {
      @SuppressWarnings("deprecation")
      com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfig.Encoding result = com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfig.Encoding.valueOf(audioEncoding_);
      return result == null ? com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfig.Encoding.UNRECOGNIZED : result;
    }

    public static final int IDLE_TIMEOUT_FIELD_NUMBER = 3;
    private com.google.protobuf.Duration idleTimeout_;
    /**
     * <pre>
     * Idle Timeout of the created Recognizer.  If no audio data is received by
     * the recognizer for this duration, ongoing rpc calls will result in an
     * error, the recognizer will be destroyed and thus more audio may not be sent
     * to the same recognizer.  The server may impose a limit on the maximum idle
     * timeout that can be specified, and if the value in this message exceeds
     * that serverside value, creating of the recognizer will fail with an error.
     * </pre>
     *
     * <code>.google.protobuf.Duration idle_timeout = 3;</code>
     */
    public boolean hasIdleTimeout() {
      return idleTimeout_ != null;
    }
    /**
     * <pre>
     * Idle Timeout of the created Recognizer.  If no audio data is received by
     * the recognizer for this duration, ongoing rpc calls will result in an
     * error, the recognizer will be destroyed and thus more audio may not be sent
     * to the same recognizer.  The server may impose a limit on the maximum idle
     * timeout that can be specified, and if the value in this message exceeds
     * that serverside value, creating of the recognizer will fail with an error.
     * </pre>
     *
     * <code>.google.protobuf.Duration idle_timeout = 3;</code>
     */
    public com.google.protobuf.Duration getIdleTimeout() {
      return idleTimeout_ == null ? com.google.protobuf.Duration.getDefaultInstance() : idleTimeout_;
    }
    /**
     * <pre>
     * Idle Timeout of the created Recognizer.  If no audio data is received by
     * the recognizer for this duration, ongoing rpc calls will result in an
     * error, the recognizer will be destroyed and thus more audio may not be sent
     * to the same recognizer.  The server may impose a limit on the maximum idle
     * timeout that can be specified, and if the value in this message exceeds
     * that serverside value, creating of the recognizer will fail with an error.
     * </pre>
     *
     * <code>.google.protobuf.Duration idle_timeout = 3;</code>
     */
    public com.google.protobuf.DurationOrBuilder getIdleTimeoutOrBuilder() {
      return getIdleTimeout();
    }

    public static final int ENABLE_WORD_TIME_OFFSETS_FIELD_NUMBER = 4;
    private boolean enableWordTimeOffsets_;
    /**
     * <pre>
     * This is an optional field.  If this is set to true, each result will
     * include a list of words and the start time offset (timestamp) and the
     * duration for each of those words.  If set to `false`, no word-level
     * timestamps will be returned.  The default is `false`.
     * </pre>
     *
     * <code>bool enable_word_time_offsets = 4;</code>
     */
    public boolean getEnableWordTimeOffsets() {
      return enableWordTimeOffsets_;
    }

    public static final int ENABLE_WORD_CONFIDENCE_FIELD_NUMBER = 5;
    private boolean enableWordConfidence_;
    /**
     * <pre>
     * This is an optional field.  If this is set to true, each result will
     * include a list of words and the confidence for those words.  If `false`, no
     * word-level confidence information is returned.  The default is `false`.
     * </pre>
     *
     * <code>bool enable_word_confidence = 5;</code>
     */
    public boolean getEnableWordConfidence() {
      return enableWordConfidence_;
    }

    public static final int ENABLE_RAW_TRANSCRIPT_FIELD_NUMBER = 6;
    private boolean enableRawTranscript_;
    /**
     * <pre>
     * This is an optional field.  If this is set to true, the field
     * `RecognitionAlternative.raw_transcript` will be populated with the raw
     * transcripts output from the recognizer will be exposed without any
     * formatting rules applied.  If this is set to false, that field will not
     * be set in the results.  The RecognitionAlternative.transcript will
     * always be populated with text formatted according to the server's settings.
     * </pre>
     *
     * <code>bool enable_raw_transcript = 6;</code>
     */
    public boolean getEnableRawTranscript() {
      return enableRawTranscript_;
    }

    public static final int ENABLE_CONFUSION_NETWORK_FIELD_NUMBER = 7;
    private boolean enableConfusionNetwork_;
    /**
     * <pre>
     * This is an optional field.  If this is set to true, the results will
     * include a confusion network.  If set to `false`, no confusion network will
     * be returned.  The default is `false`.  If the model being used does not
     * support a confusion network, results may be returned without a confusion
     * network available.  If this field is set to `true`, then
     * `enable_raw_transcript` is also forced to be true.
     * </pre>
     *
     * <code>bool enable_confusion_network = 7;</code>
     */
    public boolean getEnableConfusionNetwork() {
      return enableConfusionNetwork_;
    }

    public static final int AUDIO_CHANNELS_FIELD_NUMBER = 8;
    private com.google.protobuf.Internal.IntList audioChannels_;
    /**
     * <pre>
     * This is an optional field.  If the audio has multiple channels, this field
     * should be configured with the list of channel indices that should be
     * transcribed.  Channels are 0-indexed.
     * Example: `[0]` for a mono file, `[0, 1]` for a stereo file.
     * If this field is not set, a mono file will be assumed by default and only
     * channel-0 will be transcribed even if the file actually has additional
     * channels.
     * Channels that are present in the audio may be omitted, but it is an error
     * to include a channel index in this field that is not present in the audio.
     * Channels may be listed in any order but the same index may not be repeated
     * in this list.
     * BAD: `[0, 2]` for a stereo file; BAD: `[0, 0]` for a mono file.
     * </pre>
     *
     * <code>repeated uint32 audio_channels = 8;</code>
     */
    public java.util.List<java.lang.Integer>
        getAudioChannelsList() {
      return audioChannels_;
    }
    /**
     * <pre>
     * This is an optional field.  If the audio has multiple channels, this field
     * should be configured with the list of channel indices that should be
     * transcribed.  Channels are 0-indexed.
     * Example: `[0]` for a mono file, `[0, 1]` for a stereo file.
     * If this field is not set, a mono file will be assumed by default and only
     * channel-0 will be transcribed even if the file actually has additional
     * channels.
     * Channels that are present in the audio may be omitted, but it is an error
     * to include a channel index in this field that is not present in the audio.
     * Channels may be listed in any order but the same index may not be repeated
     * in this list.
     * BAD: `[0, 2]` for a stereo file; BAD: `[0, 0]` for a mono file.
     * </pre>
     *
     * <code>repeated uint32 audio_channels = 8;</code>
     */
    public int getAudioChannelsCount() {
      return audioChannels_.size();
    }
    /**
     * <pre>
     * This is an optional field.  If the audio has multiple channels, this field
     * should be configured with the list of channel indices that should be
     * transcribed.  Channels are 0-indexed.
     * Example: `[0]` for a mono file, `[0, 1]` for a stereo file.
     * If this field is not set, a mono file will be assumed by default and only
     * channel-0 will be transcribed even if the file actually has additional
     * channels.
     * Channels that are present in the audio may be omitted, but it is an error
     * to include a channel index in this field that is not present in the audio.
     * Channels may be listed in any order but the same index may not be repeated
     * in this list.
     * BAD: `[0, 2]` for a stereo file; BAD: `[0, 0]` for a mono file.
     * </pre>
     *
     * <code>repeated uint32 audio_channels = 8;</code>
     */
    public int getAudioChannels(int index) {
      return audioChannels_.getInt(index);
    }
    private int audioChannelsMemoizedSerializedSize = -1;

    public static final int METADATA_FIELD_NUMBER = 9;
    private com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionMetadata metadata_;
    /**
     * <pre>
     * This is an optional field.  If there is any metadata associated with the
     * audio being sent, use this field to provide it to cubic.  The server may
     * record this metadata when processing the request.  The server does not use
     * this field for any other purpose.
     * </pre>
     *
     * <code>.cobaltspeech.cubic.RecognitionMetadata metadata = 9;</code>
     */
    public boolean hasMetadata() {
      return metadata_ != null;
    }
    /**
     * <pre>
     * This is an optional field.  If there is any metadata associated with the
     * audio being sent, use this field to provide it to cubic.  The server may
     * record this metadata when processing the request.  The server does not use
     * this field for any other purpose.
     * </pre>
     *
     * <code>.cobaltspeech.cubic.RecognitionMetadata metadata = 9;</code>
     */
    public com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionMetadata getMetadata() {
      return metadata_ == null ? com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionMetadata.getDefaultInstance() : metadata_;
    }
    /**
     * <pre>
     * This is an optional field.  If there is any metadata associated with the
     * audio being sent, use this field to provide it to cubic.  The server may
     * record this metadata when processing the request.  The server does not use
     * this field for any other purpose.
     * </pre>
     *
     * <code>.cobaltspeech.cubic.RecognitionMetadata metadata = 9;</code>
     */
    public com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionMetadataOrBuilder getMetadataOrBuilder() {
      return getMetadata();
    }

    public static final int CONTEXT_FIELD_NUMBER = 10;
    private com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionContext context_;
    /**
     * <pre>
     * This is an optional field for providing any additional context information
     * that may aid speech recognition.  This can also be used to add
     * out-of-vocabulary words to the model or boost recognition of specific
     * proper names or commands. Context information must be pre-compiled via the
     * `CompileContext()` method.
     * </pre>
     *
     * <code>.cobaltspeech.cubic.RecognitionContext context = 10;</code>
     */
    public boolean hasContext() {
      return context_ != null;
    }
    /**
     * <pre>
     * This is an optional field for providing any additional context information
     * that may aid speech recognition.  This can also be used to add
     * out-of-vocabulary words to the model or boost recognition of specific
     * proper names or commands. Context information must be pre-compiled via the
     * `CompileContext()` method.
     * </pre>
     *
     * <code>.cobaltspeech.cubic.RecognitionContext context = 10;</code>
     */
    public com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionContext getContext() {
      return context_ == null ? com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionContext.getDefaultInstance() : context_;
    }
    /**
     * <pre>
     * This is an optional field for providing any additional context information
     * that may aid speech recognition.  This can also be used to add
     * out-of-vocabulary words to the model or boost recognition of specific
     * proper names or commands. Context information must be pre-compiled via the
     * `CompileContext()` method.
     * </pre>
     *
     * <code>.cobaltspeech.cubic.RecognitionContext context = 10;</code>
     */
    public com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionContextOrBuilder getContextOrBuilder() {
      return getContext();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (!getModelIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, modelId_);
      }
      if (audioEncoding_ != com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfig.Encoding.RAW_LINEAR16.getNumber()) {
        output.writeEnum(2, audioEncoding_);
      }
      if (idleTimeout_ != null) {
        output.writeMessage(3, getIdleTimeout());
      }
      if (enableWordTimeOffsets_ != false) {
        output.writeBool(4, enableWordTimeOffsets_);
      }
      if (enableWordConfidence_ != false) {
        output.writeBool(5, enableWordConfidence_);
      }
      if (enableRawTranscript_ != false) {
        output.writeBool(6, enableRawTranscript_);
      }
      if (enableConfusionNetwork_ != false) {
        output.writeBool(7, enableConfusionNetwork_);
      }
      if (getAudioChannelsList().size() > 0) {
        output.writeUInt32NoTag(66);
        output.writeUInt32NoTag(audioChannelsMemoizedSerializedSize);
      }
      for (int i = 0; i < audioChannels_.size(); i++) {
        output.writeUInt32NoTag(audioChannels_.getInt(i));
      }
      if (metadata_ != null) {
        output.writeMessage(9, getMetadata());
      }
      if (context_ != null) {
        output.writeMessage(10, getContext());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getModelIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, modelId_);
      }
      if (audioEncoding_ != com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfig.Encoding.RAW_LINEAR16.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, audioEncoding_);
      }
      if (idleTimeout_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getIdleTimeout());
      }
      if (enableWordTimeOffsets_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, enableWordTimeOffsets_);
      }
      if (enableWordConfidence_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(5, enableWordConfidence_);
      }
      if (enableRawTranscript_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(6, enableRawTranscript_);
      }
      if (enableConfusionNetwork_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(7, enableConfusionNetwork_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < audioChannels_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(audioChannels_.getInt(i));
        }
        size += dataSize;
        if (!getAudioChannelsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        audioChannelsMemoizedSerializedSize = dataSize;
      }
      if (metadata_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, getMetadata());
      }
      if (context_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, getContext());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfig)) {
        return super.equals(obj);
      }
      com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfig other = (com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfig) obj;

      if (!getModelId()
          .equals(other.getModelId())) return false;
      if (audioEncoding_ != other.audioEncoding_) return false;
      if (hasIdleTimeout() != other.hasIdleTimeout()) return false;
      if (hasIdleTimeout()) {
        if (!getIdleTimeout()
            .equals(other.getIdleTimeout())) return false;
      }
      if (getEnableWordTimeOffsets()
          != other.getEnableWordTimeOffsets()) return false;
      if (getEnableWordConfidence()
          != other.getEnableWordConfidence()) return false;
      if (getEnableRawTranscript()
          != other.getEnableRawTranscript()) return false;
      if (getEnableConfusionNetwork()
          != other.getEnableConfusionNetwork()) return false;
      if (!getAudioChannelsList()
          .equals(other.getAudioChannelsList())) return false;
      if (hasMetadata() != other.hasMetadata()) return false;
      if (hasMetadata()) {
        if (!getMetadata()
            .equals(other.getMetadata())) return false;
      }
      if (hasContext() != other.hasContext()) return false;
      if (hasContext()) {
        if (!getContext()
            .equals(other.getContext())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + MODEL_ID_FIELD_NUMBER;
      hash = (53 * hash) + getModelId().hashCode();
      hash = (37 * hash) + AUDIO_ENCODING_FIELD_NUMBER;
      hash = (53 * hash) + audioEncoding_;
      if (hasIdleTimeout()) {
        hash = (37 * hash) + IDLE_TIMEOUT_FIELD_NUMBER;
        hash = (53 * hash) + getIdleTimeout().hashCode();
      }
      hash = (37 * hash) + ENABLE_WORD_TIME_OFFSETS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getEnableWordTimeOffsets());
      hash = (37 * hash) + ENABLE_WORD_CONFIDENCE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getEnableWordConfidence());
      hash = (37 * hash) + ENABLE_RAW_TRANSCRIPT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getEnableRawTranscript());
      hash = (37 * hash) + ENABLE_CONFUSION_NETWORK_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getEnableConfusionNetwork());
      if (getAudioChannelsCount() > 0) {
        hash = (37 * hash) + AUDIO_CHANNELS_FIELD_NUMBER;
        hash = (53 * hash) + getAudioChannelsList().hashCode();
      }
      if (hasMetadata()) {
        hash = (37 * hash) + METADATA_FIELD_NUMBER;
        hash = (53 * hash) + getMetadata().hashCode();
      }
      if (hasContext()) {
        hash = (37 * hash) + CONTEXT_FIELD_NUMBER;
        hash = (53 * hash) + getContext().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfig parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfig parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfig prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Configuration for setting up a Recognizer
     * </pre>
     *
     * Protobuf type {@code cobaltspeech.cubic.RecognitionConfig}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:cobaltspeech.cubic.RecognitionConfig)
        com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfigOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.cobaltspeech.cubic.sdk.CubicOuterClass.internal_static_cobaltspeech_cubic_RecognitionConfig_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.cobaltspeech.cubic.sdk.CubicOuterClass.internal_static_cobaltspeech_cubic_RecognitionConfig_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfig.class, com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfig.Builder.class);
      }

      // Construct using com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfig.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        modelId_ = "";

        audioEncoding_ = 0;

        if (idleTimeoutBuilder_ == null) {
          idleTimeout_ = null;
        } else {
          idleTimeout_ = null;
          idleTimeoutBuilder_ = null;
        }
        enableWordTimeOffsets_ = false;

        enableWordConfidence_ = false;

        enableRawTranscript_ = false;

        enableConfusionNetwork_ = false;

        audioChannels_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000080);
        if (metadataBuilder_ == null) {
          metadata_ = null;
        } else {
          metadata_ = null;
          metadataBuilder_ = null;
        }
        if (contextBuilder_ == null) {
          context_ = null;
        } else {
          context_ = null;
          contextBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.cobaltspeech.cubic.sdk.CubicOuterClass.internal_static_cobaltspeech_cubic_RecognitionConfig_descriptor;
      }

      @java.lang.Override
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfig getDefaultInstanceForType() {
        return com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfig.getDefaultInstance();
      }

      @java.lang.Override
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfig build() {
        com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfig result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfig buildPartial() {
        com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfig result = new com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfig(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.modelId_ = modelId_;
        result.audioEncoding_ = audioEncoding_;
        if (idleTimeoutBuilder_ == null) {
          result.idleTimeout_ = idleTimeout_;
        } else {
          result.idleTimeout_ = idleTimeoutBuilder_.build();
        }
        result.enableWordTimeOffsets_ = enableWordTimeOffsets_;
        result.enableWordConfidence_ = enableWordConfidence_;
        result.enableRawTranscript_ = enableRawTranscript_;
        result.enableConfusionNetwork_ = enableConfusionNetwork_;
        if (((bitField0_ & 0x00000080) != 0)) {
          audioChannels_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000080);
        }
        result.audioChannels_ = audioChannels_;
        if (metadataBuilder_ == null) {
          result.metadata_ = metadata_;
        } else {
          result.metadata_ = metadataBuilder_.build();
        }
        if (contextBuilder_ == null) {
          result.context_ = context_;
        } else {
          result.context_ = contextBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfig) {
          return mergeFrom((com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfig)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfig other) {
        if (other == com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfig.getDefaultInstance()) return this;
        if (!other.getModelId().isEmpty()) {
          modelId_ = other.modelId_;
          onChanged();
        }
        if (other.audioEncoding_ != 0) {
          setAudioEncodingValue(other.getAudioEncodingValue());
        }
        if (other.hasIdleTimeout()) {
          mergeIdleTimeout(other.getIdleTimeout());
        }
        if (other.getEnableWordTimeOffsets() != false) {
          setEnableWordTimeOffsets(other.getEnableWordTimeOffsets());
        }
        if (other.getEnableWordConfidence() != false) {
          setEnableWordConfidence(other.getEnableWordConfidence());
        }
        if (other.getEnableRawTranscript() != false) {
          setEnableRawTranscript(other.getEnableRawTranscript());
        }
        if (other.getEnableConfusionNetwork() != false) {
          setEnableConfusionNetwork(other.getEnableConfusionNetwork());
        }
        if (!other.audioChannels_.isEmpty()) {
          if (audioChannels_.isEmpty()) {
            audioChannels_ = other.audioChannels_;
            bitField0_ = (bitField0_ & ~0x00000080);
          } else {
            ensureAudioChannelsIsMutable();
            audioChannels_.addAll(other.audioChannels_);
          }
          onChanged();
        }
        if (other.hasMetadata()) {
          mergeMetadata(other.getMetadata());
        }
        if (other.hasContext()) {
          mergeContext(other.getContext());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfig parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfig) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object modelId_ = "";
      /**
       * <pre>
       * Unique identifier of the model to use, as obtained from a `Model` message.
       * </pre>
       *
       * <code>string model_id = 1;</code>
       */
      public java.lang.String getModelId() {
        java.lang.Object ref = modelId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          modelId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Unique identifier of the model to use, as obtained from a `Model` message.
       * </pre>
       *
       * <code>string model_id = 1;</code>
       */
      public com.google.protobuf.ByteString
          getModelIdBytes() {
        java.lang.Object ref = modelId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          modelId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Unique identifier of the model to use, as obtained from a `Model` message.
       * </pre>
       *
       * <code>string model_id = 1;</code>
       */
      public Builder setModelId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        modelId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Unique identifier of the model to use, as obtained from a `Model` message.
       * </pre>
       *
       * <code>string model_id = 1;</code>
       */
      public Builder clearModelId() {
        
        modelId_ = getDefaultInstance().getModelId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Unique identifier of the model to use, as obtained from a `Model` message.
       * </pre>
       *
       * <code>string model_id = 1;</code>
       */
      public Builder setModelIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        modelId_ = value;
        onChanged();
        return this;
      }

      private int audioEncoding_ = 0;
      /**
       * <pre>
       * Encoding of audio data sent/streamed through the `RecognitionAudio`
       * messages.  For encodings like WAV/MP3 that have headers, the headers are
       * expected to be sent at the beginning of the stream, not in every
       * `RecognitionAudio` message.
       * If not specified, the default encoding is RAW_LINEAR16.
       * Depending on how they are configured, server instances of this service may
       * not support all the encodings enumerated above. They are always required to
       * accept RAW_LINEAR16.  If any other `Encoding` is specified, and it is not
       * available on the server being used, the recognition request will result in
       * an appropriate error message.
       * </pre>
       *
       * <code>.cobaltspeech.cubic.RecognitionConfig.Encoding audio_encoding = 2;</code>
       */
      public int getAudioEncodingValue() {
        return audioEncoding_;
      }
      /**
       * <pre>
       * Encoding of audio data sent/streamed through the `RecognitionAudio`
       * messages.  For encodings like WAV/MP3 that have headers, the headers are
       * expected to be sent at the beginning of the stream, not in every
       * `RecognitionAudio` message.
       * If not specified, the default encoding is RAW_LINEAR16.
       * Depending on how they are configured, server instances of this service may
       * not support all the encodings enumerated above. They are always required to
       * accept RAW_LINEAR16.  If any other `Encoding` is specified, and it is not
       * available on the server being used, the recognition request will result in
       * an appropriate error message.
       * </pre>
       *
       * <code>.cobaltspeech.cubic.RecognitionConfig.Encoding audio_encoding = 2;</code>
       */
      public Builder setAudioEncodingValue(int value) {
        audioEncoding_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Encoding of audio data sent/streamed through the `RecognitionAudio`
       * messages.  For encodings like WAV/MP3 that have headers, the headers are
       * expected to be sent at the beginning of the stream, not in every
       * `RecognitionAudio` message.
       * If not specified, the default encoding is RAW_LINEAR16.
       * Depending on how they are configured, server instances of this service may
       * not support all the encodings enumerated above. They are always required to
       * accept RAW_LINEAR16.  If any other `Encoding` is specified, and it is not
       * available on the server being used, the recognition request will result in
       * an appropriate error message.
       * </pre>
       *
       * <code>.cobaltspeech.cubic.RecognitionConfig.Encoding audio_encoding = 2;</code>
       */
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfig.Encoding getAudioEncoding() {
        @SuppressWarnings("deprecation")
        com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfig.Encoding result = com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfig.Encoding.valueOf(audioEncoding_);
        return result == null ? com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfig.Encoding.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * Encoding of audio data sent/streamed through the `RecognitionAudio`
       * messages.  For encodings like WAV/MP3 that have headers, the headers are
       * expected to be sent at the beginning of the stream, not in every
       * `RecognitionAudio` message.
       * If not specified, the default encoding is RAW_LINEAR16.
       * Depending on how they are configured, server instances of this service may
       * not support all the encodings enumerated above. They are always required to
       * accept RAW_LINEAR16.  If any other `Encoding` is specified, and it is not
       * available on the server being used, the recognition request will result in
       * an appropriate error message.
       * </pre>
       *
       * <code>.cobaltspeech.cubic.RecognitionConfig.Encoding audio_encoding = 2;</code>
       */
      public Builder setAudioEncoding(com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfig.Encoding value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        audioEncoding_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Encoding of audio data sent/streamed through the `RecognitionAudio`
       * messages.  For encodings like WAV/MP3 that have headers, the headers are
       * expected to be sent at the beginning of the stream, not in every
       * `RecognitionAudio` message.
       * If not specified, the default encoding is RAW_LINEAR16.
       * Depending on how they are configured, server instances of this service may
       * not support all the encodings enumerated above. They are always required to
       * accept RAW_LINEAR16.  If any other `Encoding` is specified, and it is not
       * available on the server being used, the recognition request will result in
       * an appropriate error message.
       * </pre>
       *
       * <code>.cobaltspeech.cubic.RecognitionConfig.Encoding audio_encoding = 2;</code>
       */
      public Builder clearAudioEncoding() {
        
        audioEncoding_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.Duration idleTimeout_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> idleTimeoutBuilder_;
      /**
       * <pre>
       * Idle Timeout of the created Recognizer.  If no audio data is received by
       * the recognizer for this duration, ongoing rpc calls will result in an
       * error, the recognizer will be destroyed and thus more audio may not be sent
       * to the same recognizer.  The server may impose a limit on the maximum idle
       * timeout that can be specified, and if the value in this message exceeds
       * that serverside value, creating of the recognizer will fail with an error.
       * </pre>
       *
       * <code>.google.protobuf.Duration idle_timeout = 3;</code>
       */
      public boolean hasIdleTimeout() {
        return idleTimeoutBuilder_ != null || idleTimeout_ != null;
      }
      /**
       * <pre>
       * Idle Timeout of the created Recognizer.  If no audio data is received by
       * the recognizer for this duration, ongoing rpc calls will result in an
       * error, the recognizer will be destroyed and thus more audio may not be sent
       * to the same recognizer.  The server may impose a limit on the maximum idle
       * timeout that can be specified, and if the value in this message exceeds
       * that serverside value, creating of the recognizer will fail with an error.
       * </pre>
       *
       * <code>.google.protobuf.Duration idle_timeout = 3;</code>
       */
      public com.google.protobuf.Duration getIdleTimeout() {
        if (idleTimeoutBuilder_ == null) {
          return idleTimeout_ == null ? com.google.protobuf.Duration.getDefaultInstance() : idleTimeout_;
        } else {
          return idleTimeoutBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Idle Timeout of the created Recognizer.  If no audio data is received by
       * the recognizer for this duration, ongoing rpc calls will result in an
       * error, the recognizer will be destroyed and thus more audio may not be sent
       * to the same recognizer.  The server may impose a limit on the maximum idle
       * timeout that can be specified, and if the value in this message exceeds
       * that serverside value, creating of the recognizer will fail with an error.
       * </pre>
       *
       * <code>.google.protobuf.Duration idle_timeout = 3;</code>
       */
      public Builder setIdleTimeout(com.google.protobuf.Duration value) {
        if (idleTimeoutBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          idleTimeout_ = value;
          onChanged();
        } else {
          idleTimeoutBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Idle Timeout of the created Recognizer.  If no audio data is received by
       * the recognizer for this duration, ongoing rpc calls will result in an
       * error, the recognizer will be destroyed and thus more audio may not be sent
       * to the same recognizer.  The server may impose a limit on the maximum idle
       * timeout that can be specified, and if the value in this message exceeds
       * that serverside value, creating of the recognizer will fail with an error.
       * </pre>
       *
       * <code>.google.protobuf.Duration idle_timeout = 3;</code>
       */
      public Builder setIdleTimeout(
          com.google.protobuf.Duration.Builder builderForValue) {
        if (idleTimeoutBuilder_ == null) {
          idleTimeout_ = builderForValue.build();
          onChanged();
        } else {
          idleTimeoutBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Idle Timeout of the created Recognizer.  If no audio data is received by
       * the recognizer for this duration, ongoing rpc calls will result in an
       * error, the recognizer will be destroyed and thus more audio may not be sent
       * to the same recognizer.  The server may impose a limit on the maximum idle
       * timeout that can be specified, and if the value in this message exceeds
       * that serverside value, creating of the recognizer will fail with an error.
       * </pre>
       *
       * <code>.google.protobuf.Duration idle_timeout = 3;</code>
       */
      public Builder mergeIdleTimeout(com.google.protobuf.Duration value) {
        if (idleTimeoutBuilder_ == null) {
          if (idleTimeout_ != null) {
            idleTimeout_ =
              com.google.protobuf.Duration.newBuilder(idleTimeout_).mergeFrom(value).buildPartial();
          } else {
            idleTimeout_ = value;
          }
          onChanged();
        } else {
          idleTimeoutBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Idle Timeout of the created Recognizer.  If no audio data is received by
       * the recognizer for this duration, ongoing rpc calls will result in an
       * error, the recognizer will be destroyed and thus more audio may not be sent
       * to the same recognizer.  The server may impose a limit on the maximum idle
       * timeout that can be specified, and if the value in this message exceeds
       * that serverside value, creating of the recognizer will fail with an error.
       * </pre>
       *
       * <code>.google.protobuf.Duration idle_timeout = 3;</code>
       */
      public Builder clearIdleTimeout() {
        if (idleTimeoutBuilder_ == null) {
          idleTimeout_ = null;
          onChanged();
        } else {
          idleTimeout_ = null;
          idleTimeoutBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Idle Timeout of the created Recognizer.  If no audio data is received by
       * the recognizer for this duration, ongoing rpc calls will result in an
       * error, the recognizer will be destroyed and thus more audio may not be sent
       * to the same recognizer.  The server may impose a limit on the maximum idle
       * timeout that can be specified, and if the value in this message exceeds
       * that serverside value, creating of the recognizer will fail with an error.
       * </pre>
       *
       * <code>.google.protobuf.Duration idle_timeout = 3;</code>
       */
      public com.google.protobuf.Duration.Builder getIdleTimeoutBuilder() {
        
        onChanged();
        return getIdleTimeoutFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Idle Timeout of the created Recognizer.  If no audio data is received by
       * the recognizer for this duration, ongoing rpc calls will result in an
       * error, the recognizer will be destroyed and thus more audio may not be sent
       * to the same recognizer.  The server may impose a limit on the maximum idle
       * timeout that can be specified, and if the value in this message exceeds
       * that serverside value, creating of the recognizer will fail with an error.
       * </pre>
       *
       * <code>.google.protobuf.Duration idle_timeout = 3;</code>
       */
      public com.google.protobuf.DurationOrBuilder getIdleTimeoutOrBuilder() {
        if (idleTimeoutBuilder_ != null) {
          return idleTimeoutBuilder_.getMessageOrBuilder();
        } else {
          return idleTimeout_ == null ?
              com.google.protobuf.Duration.getDefaultInstance() : idleTimeout_;
        }
      }
      /**
       * <pre>
       * Idle Timeout of the created Recognizer.  If no audio data is received by
       * the recognizer for this duration, ongoing rpc calls will result in an
       * error, the recognizer will be destroyed and thus more audio may not be sent
       * to the same recognizer.  The server may impose a limit on the maximum idle
       * timeout that can be specified, and if the value in this message exceeds
       * that serverside value, creating of the recognizer will fail with an error.
       * </pre>
       *
       * <code>.google.protobuf.Duration idle_timeout = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> 
          getIdleTimeoutFieldBuilder() {
        if (idleTimeoutBuilder_ == null) {
          idleTimeoutBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>(
                  getIdleTimeout(),
                  getParentForChildren(),
                  isClean());
          idleTimeout_ = null;
        }
        return idleTimeoutBuilder_;
      }

      private boolean enableWordTimeOffsets_ ;
      /**
       * <pre>
       * This is an optional field.  If this is set to true, each result will
       * include a list of words and the start time offset (timestamp) and the
       * duration for each of those words.  If set to `false`, no word-level
       * timestamps will be returned.  The default is `false`.
       * </pre>
       *
       * <code>bool enable_word_time_offsets = 4;</code>
       */
      public boolean getEnableWordTimeOffsets() {
        return enableWordTimeOffsets_;
      }
      /**
       * <pre>
       * This is an optional field.  If this is set to true, each result will
       * include a list of words and the start time offset (timestamp) and the
       * duration for each of those words.  If set to `false`, no word-level
       * timestamps will be returned.  The default is `false`.
       * </pre>
       *
       * <code>bool enable_word_time_offsets = 4;</code>
       */
      public Builder setEnableWordTimeOffsets(boolean value) {
        
        enableWordTimeOffsets_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * This is an optional field.  If this is set to true, each result will
       * include a list of words and the start time offset (timestamp) and the
       * duration for each of those words.  If set to `false`, no word-level
       * timestamps will be returned.  The default is `false`.
       * </pre>
       *
       * <code>bool enable_word_time_offsets = 4;</code>
       */
      public Builder clearEnableWordTimeOffsets() {
        
        enableWordTimeOffsets_ = false;
        onChanged();
        return this;
      }

      private boolean enableWordConfidence_ ;
      /**
       * <pre>
       * This is an optional field.  If this is set to true, each result will
       * include a list of words and the confidence for those words.  If `false`, no
       * word-level confidence information is returned.  The default is `false`.
       * </pre>
       *
       * <code>bool enable_word_confidence = 5;</code>
       */
      public boolean getEnableWordConfidence() {
        return enableWordConfidence_;
      }
      /**
       * <pre>
       * This is an optional field.  If this is set to true, each result will
       * include a list of words and the confidence for those words.  If `false`, no
       * word-level confidence information is returned.  The default is `false`.
       * </pre>
       *
       * <code>bool enable_word_confidence = 5;</code>
       */
      public Builder setEnableWordConfidence(boolean value) {
        
        enableWordConfidence_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * This is an optional field.  If this is set to true, each result will
       * include a list of words and the confidence for those words.  If `false`, no
       * word-level confidence information is returned.  The default is `false`.
       * </pre>
       *
       * <code>bool enable_word_confidence = 5;</code>
       */
      public Builder clearEnableWordConfidence() {
        
        enableWordConfidence_ = false;
        onChanged();
        return this;
      }

      private boolean enableRawTranscript_ ;
      /**
       * <pre>
       * This is an optional field.  If this is set to true, the field
       * `RecognitionAlternative.raw_transcript` will be populated with the raw
       * transcripts output from the recognizer will be exposed without any
       * formatting rules applied.  If this is set to false, that field will not
       * be set in the results.  The RecognitionAlternative.transcript will
       * always be populated with text formatted according to the server's settings.
       * </pre>
       *
       * <code>bool enable_raw_transcript = 6;</code>
       */
      public boolean getEnableRawTranscript() {
        return enableRawTranscript_;
      }
      /**
       * <pre>
       * This is an optional field.  If this is set to true, the field
       * `RecognitionAlternative.raw_transcript` will be populated with the raw
       * transcripts output from the recognizer will be exposed without any
       * formatting rules applied.  If this is set to false, that field will not
       * be set in the results.  The RecognitionAlternative.transcript will
       * always be populated with text formatted according to the server's settings.
       * </pre>
       *
       * <code>bool enable_raw_transcript = 6;</code>
       */
      public Builder setEnableRawTranscript(boolean value) {
        
        enableRawTranscript_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * This is an optional field.  If this is set to true, the field
       * `RecognitionAlternative.raw_transcript` will be populated with the raw
       * transcripts output from the recognizer will be exposed without any
       * formatting rules applied.  If this is set to false, that field will not
       * be set in the results.  The RecognitionAlternative.transcript will
       * always be populated with text formatted according to the server's settings.
       * </pre>
       *
       * <code>bool enable_raw_transcript = 6;</code>
       */
      public Builder clearEnableRawTranscript() {
        
        enableRawTranscript_ = false;
        onChanged();
        return this;
      }

      private boolean enableConfusionNetwork_ ;
      /**
       * <pre>
       * This is an optional field.  If this is set to true, the results will
       * include a confusion network.  If set to `false`, no confusion network will
       * be returned.  The default is `false`.  If the model being used does not
       * support a confusion network, results may be returned without a confusion
       * network available.  If this field is set to `true`, then
       * `enable_raw_transcript` is also forced to be true.
       * </pre>
       *
       * <code>bool enable_confusion_network = 7;</code>
       */
      public boolean getEnableConfusionNetwork() {
        return enableConfusionNetwork_;
      }
      /**
       * <pre>
       * This is an optional field.  If this is set to true, the results will
       * include a confusion network.  If set to `false`, no confusion network will
       * be returned.  The default is `false`.  If the model being used does not
       * support a confusion network, results may be returned without a confusion
       * network available.  If this field is set to `true`, then
       * `enable_raw_transcript` is also forced to be true.
       * </pre>
       *
       * <code>bool enable_confusion_network = 7;</code>
       */
      public Builder setEnableConfusionNetwork(boolean value) {
        
        enableConfusionNetwork_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * This is an optional field.  If this is set to true, the results will
       * include a confusion network.  If set to `false`, no confusion network will
       * be returned.  The default is `false`.  If the model being used does not
       * support a confusion network, results may be returned without a confusion
       * network available.  If this field is set to `true`, then
       * `enable_raw_transcript` is also forced to be true.
       * </pre>
       *
       * <code>bool enable_confusion_network = 7;</code>
       */
      public Builder clearEnableConfusionNetwork() {
        
        enableConfusionNetwork_ = false;
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList audioChannels_ = emptyIntList();
      private void ensureAudioChannelsIsMutable() {
        if (!((bitField0_ & 0x00000080) != 0)) {
          audioChannels_ = mutableCopy(audioChannels_);
          bitField0_ |= 0x00000080;
         }
      }
      /**
       * <pre>
       * This is an optional field.  If the audio has multiple channels, this field
       * should be configured with the list of channel indices that should be
       * transcribed.  Channels are 0-indexed.
       * Example: `[0]` for a mono file, `[0, 1]` for a stereo file.
       * If this field is not set, a mono file will be assumed by default and only
       * channel-0 will be transcribed even if the file actually has additional
       * channels.
       * Channels that are present in the audio may be omitted, but it is an error
       * to include a channel index in this field that is not present in the audio.
       * Channels may be listed in any order but the same index may not be repeated
       * in this list.
       * BAD: `[0, 2]` for a stereo file; BAD: `[0, 0]` for a mono file.
       * </pre>
       *
       * <code>repeated uint32 audio_channels = 8;</code>
       */
      public java.util.List<java.lang.Integer>
          getAudioChannelsList() {
        return ((bitField0_ & 0x00000080) != 0) ?
                 java.util.Collections.unmodifiableList(audioChannels_) : audioChannels_;
      }
      /**
       * <pre>
       * This is an optional field.  If the audio has multiple channels, this field
       * should be configured with the list of channel indices that should be
       * transcribed.  Channels are 0-indexed.
       * Example: `[0]` for a mono file, `[0, 1]` for a stereo file.
       * If this field is not set, a mono file will be assumed by default and only
       * channel-0 will be transcribed even if the file actually has additional
       * channels.
       * Channels that are present in the audio may be omitted, but it is an error
       * to include a channel index in this field that is not present in the audio.
       * Channels may be listed in any order but the same index may not be repeated
       * in this list.
       * BAD: `[0, 2]` for a stereo file; BAD: `[0, 0]` for a mono file.
       * </pre>
       *
       * <code>repeated uint32 audio_channels = 8;</code>
       */
      public int getAudioChannelsCount() {
        return audioChannels_.size();
      }
      /**
       * <pre>
       * This is an optional field.  If the audio has multiple channels, this field
       * should be configured with the list of channel indices that should be
       * transcribed.  Channels are 0-indexed.
       * Example: `[0]` for a mono file, `[0, 1]` for a stereo file.
       * If this field is not set, a mono file will be assumed by default and only
       * channel-0 will be transcribed even if the file actually has additional
       * channels.
       * Channels that are present in the audio may be omitted, but it is an error
       * to include a channel index in this field that is not present in the audio.
       * Channels may be listed in any order but the same index may not be repeated
       * in this list.
       * BAD: `[0, 2]` for a stereo file; BAD: `[0, 0]` for a mono file.
       * </pre>
       *
       * <code>repeated uint32 audio_channels = 8;</code>
       */
      public int getAudioChannels(int index) {
        return audioChannels_.getInt(index);
      }
      /**
       * <pre>
       * This is an optional field.  If the audio has multiple channels, this field
       * should be configured with the list of channel indices that should be
       * transcribed.  Channels are 0-indexed.
       * Example: `[0]` for a mono file, `[0, 1]` for a stereo file.
       * If this field is not set, a mono file will be assumed by default and only
       * channel-0 will be transcribed even if the file actually has additional
       * channels.
       * Channels that are present in the audio may be omitted, but it is an error
       * to include a channel index in this field that is not present in the audio.
       * Channels may be listed in any order but the same index may not be repeated
       * in this list.
       * BAD: `[0, 2]` for a stereo file; BAD: `[0, 0]` for a mono file.
       * </pre>
       *
       * <code>repeated uint32 audio_channels = 8;</code>
       */
      public Builder setAudioChannels(
          int index, int value) {
        ensureAudioChannelsIsMutable();
        audioChannels_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * This is an optional field.  If the audio has multiple channels, this field
       * should be configured with the list of channel indices that should be
       * transcribed.  Channels are 0-indexed.
       * Example: `[0]` for a mono file, `[0, 1]` for a stereo file.
       * If this field is not set, a mono file will be assumed by default and only
       * channel-0 will be transcribed even if the file actually has additional
       * channels.
       * Channels that are present in the audio may be omitted, but it is an error
       * to include a channel index in this field that is not present in the audio.
       * Channels may be listed in any order but the same index may not be repeated
       * in this list.
       * BAD: `[0, 2]` for a stereo file; BAD: `[0, 0]` for a mono file.
       * </pre>
       *
       * <code>repeated uint32 audio_channels = 8;</code>
       */
      public Builder addAudioChannels(int value) {
        ensureAudioChannelsIsMutable();
        audioChannels_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * This is an optional field.  If the audio has multiple channels, this field
       * should be configured with the list of channel indices that should be
       * transcribed.  Channels are 0-indexed.
       * Example: `[0]` for a mono file, `[0, 1]` for a stereo file.
       * If this field is not set, a mono file will be assumed by default and only
       * channel-0 will be transcribed even if the file actually has additional
       * channels.
       * Channels that are present in the audio may be omitted, but it is an error
       * to include a channel index in this field that is not present in the audio.
       * Channels may be listed in any order but the same index may not be repeated
       * in this list.
       * BAD: `[0, 2]` for a stereo file; BAD: `[0, 0]` for a mono file.
       * </pre>
       *
       * <code>repeated uint32 audio_channels = 8;</code>
       */
      public Builder addAllAudioChannels(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureAudioChannelsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, audioChannels_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * This is an optional field.  If the audio has multiple channels, this field
       * should be configured with the list of channel indices that should be
       * transcribed.  Channels are 0-indexed.
       * Example: `[0]` for a mono file, `[0, 1]` for a stereo file.
       * If this field is not set, a mono file will be assumed by default and only
       * channel-0 will be transcribed even if the file actually has additional
       * channels.
       * Channels that are present in the audio may be omitted, but it is an error
       * to include a channel index in this field that is not present in the audio.
       * Channels may be listed in any order but the same index may not be repeated
       * in this list.
       * BAD: `[0, 2]` for a stereo file; BAD: `[0, 0]` for a mono file.
       * </pre>
       *
       * <code>repeated uint32 audio_channels = 8;</code>
       */
      public Builder clearAudioChannels() {
        audioChannels_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000080);
        onChanged();
        return this;
      }

      private com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionMetadata metadata_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionMetadata, com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionMetadata.Builder, com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionMetadataOrBuilder> metadataBuilder_;
      /**
       * <pre>
       * This is an optional field.  If there is any metadata associated with the
       * audio being sent, use this field to provide it to cubic.  The server may
       * record this metadata when processing the request.  The server does not use
       * this field for any other purpose.
       * </pre>
       *
       * <code>.cobaltspeech.cubic.RecognitionMetadata metadata = 9;</code>
       */
      public boolean hasMetadata() {
        return metadataBuilder_ != null || metadata_ != null;
      }
      /**
       * <pre>
       * This is an optional field.  If there is any metadata associated with the
       * audio being sent, use this field to provide it to cubic.  The server may
       * record this metadata when processing the request.  The server does not use
       * this field for any other purpose.
       * </pre>
       *
       * <code>.cobaltspeech.cubic.RecognitionMetadata metadata = 9;</code>
       */
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionMetadata getMetadata() {
        if (metadataBuilder_ == null) {
          return metadata_ == null ? com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionMetadata.getDefaultInstance() : metadata_;
        } else {
          return metadataBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * This is an optional field.  If there is any metadata associated with the
       * audio being sent, use this field to provide it to cubic.  The server may
       * record this metadata when processing the request.  The server does not use
       * this field for any other purpose.
       * </pre>
       *
       * <code>.cobaltspeech.cubic.RecognitionMetadata metadata = 9;</code>
       */
      public Builder setMetadata(com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionMetadata value) {
        if (metadataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          metadata_ = value;
          onChanged();
        } else {
          metadataBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * This is an optional field.  If there is any metadata associated with the
       * audio being sent, use this field to provide it to cubic.  The server may
       * record this metadata when processing the request.  The server does not use
       * this field for any other purpose.
       * </pre>
       *
       * <code>.cobaltspeech.cubic.RecognitionMetadata metadata = 9;</code>
       */
      public Builder setMetadata(
          com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionMetadata.Builder builderForValue) {
        if (metadataBuilder_ == null) {
          metadata_ = builderForValue.build();
          onChanged();
        } else {
          metadataBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * This is an optional field.  If there is any metadata associated with the
       * audio being sent, use this field to provide it to cubic.  The server may
       * record this metadata when processing the request.  The server does not use
       * this field for any other purpose.
       * </pre>
       *
       * <code>.cobaltspeech.cubic.RecognitionMetadata metadata = 9;</code>
       */
      public Builder mergeMetadata(com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionMetadata value) {
        if (metadataBuilder_ == null) {
          if (metadata_ != null) {
            metadata_ =
              com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionMetadata.newBuilder(metadata_).mergeFrom(value).buildPartial();
          } else {
            metadata_ = value;
          }
          onChanged();
        } else {
          metadataBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * This is an optional field.  If there is any metadata associated with the
       * audio being sent, use this field to provide it to cubic.  The server may
       * record this metadata when processing the request.  The server does not use
       * this field for any other purpose.
       * </pre>
       *
       * <code>.cobaltspeech.cubic.RecognitionMetadata metadata = 9;</code>
       */
      public Builder clearMetadata() {
        if (metadataBuilder_ == null) {
          metadata_ = null;
          onChanged();
        } else {
          metadata_ = null;
          metadataBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * This is an optional field.  If there is any metadata associated with the
       * audio being sent, use this field to provide it to cubic.  The server may
       * record this metadata when processing the request.  The server does not use
       * this field for any other purpose.
       * </pre>
       *
       * <code>.cobaltspeech.cubic.RecognitionMetadata metadata = 9;</code>
       */
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionMetadata.Builder getMetadataBuilder() {
        
        onChanged();
        return getMetadataFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * This is an optional field.  If there is any metadata associated with the
       * audio being sent, use this field to provide it to cubic.  The server may
       * record this metadata when processing the request.  The server does not use
       * this field for any other purpose.
       * </pre>
       *
       * <code>.cobaltspeech.cubic.RecognitionMetadata metadata = 9;</code>
       */
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionMetadataOrBuilder getMetadataOrBuilder() {
        if (metadataBuilder_ != null) {
          return metadataBuilder_.getMessageOrBuilder();
        } else {
          return metadata_ == null ?
              com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionMetadata.getDefaultInstance() : metadata_;
        }
      }
      /**
       * <pre>
       * This is an optional field.  If there is any metadata associated with the
       * audio being sent, use this field to provide it to cubic.  The server may
       * record this metadata when processing the request.  The server does not use
       * this field for any other purpose.
       * </pre>
       *
       * <code>.cobaltspeech.cubic.RecognitionMetadata metadata = 9;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionMetadata, com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionMetadata.Builder, com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionMetadataOrBuilder> 
          getMetadataFieldBuilder() {
        if (metadataBuilder_ == null) {
          metadataBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionMetadata, com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionMetadata.Builder, com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionMetadataOrBuilder>(
                  getMetadata(),
                  getParentForChildren(),
                  isClean());
          metadata_ = null;
        }
        return metadataBuilder_;
      }

      private com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionContext context_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionContext, com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionContext.Builder, com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionContextOrBuilder> contextBuilder_;
      /**
       * <pre>
       * This is an optional field for providing any additional context information
       * that may aid speech recognition.  This can also be used to add
       * out-of-vocabulary words to the model or boost recognition of specific
       * proper names or commands. Context information must be pre-compiled via the
       * `CompileContext()` method.
       * </pre>
       *
       * <code>.cobaltspeech.cubic.RecognitionContext context = 10;</code>
       */
      public boolean hasContext() {
        return contextBuilder_ != null || context_ != null;
      }
      /**
       * <pre>
       * This is an optional field for providing any additional context information
       * that may aid speech recognition.  This can also be used to add
       * out-of-vocabulary words to the model or boost recognition of specific
       * proper names or commands. Context information must be pre-compiled via the
       * `CompileContext()` method.
       * </pre>
       *
       * <code>.cobaltspeech.cubic.RecognitionContext context = 10;</code>
       */
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionContext getContext() {
        if (contextBuilder_ == null) {
          return context_ == null ? com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionContext.getDefaultInstance() : context_;
        } else {
          return contextBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * This is an optional field for providing any additional context information
       * that may aid speech recognition.  This can also be used to add
       * out-of-vocabulary words to the model or boost recognition of specific
       * proper names or commands. Context information must be pre-compiled via the
       * `CompileContext()` method.
       * </pre>
       *
       * <code>.cobaltspeech.cubic.RecognitionContext context = 10;</code>
       */
      public Builder setContext(com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionContext value) {
        if (contextBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          context_ = value;
          onChanged();
        } else {
          contextBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * This is an optional field for providing any additional context information
       * that may aid speech recognition.  This can also be used to add
       * out-of-vocabulary words to the model or boost recognition of specific
       * proper names or commands. Context information must be pre-compiled via the
       * `CompileContext()` method.
       * </pre>
       *
       * <code>.cobaltspeech.cubic.RecognitionContext context = 10;</code>
       */
      public Builder setContext(
          com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionContext.Builder builderForValue) {
        if (contextBuilder_ == null) {
          context_ = builderForValue.build();
          onChanged();
        } else {
          contextBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * This is an optional field for providing any additional context information
       * that may aid speech recognition.  This can also be used to add
       * out-of-vocabulary words to the model or boost recognition of specific
       * proper names or commands. Context information must be pre-compiled via the
       * `CompileContext()` method.
       * </pre>
       *
       * <code>.cobaltspeech.cubic.RecognitionContext context = 10;</code>
       */
      public Builder mergeContext(com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionContext value) {
        if (contextBuilder_ == null) {
          if (context_ != null) {
            context_ =
              com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionContext.newBuilder(context_).mergeFrom(value).buildPartial();
          } else {
            context_ = value;
          }
          onChanged();
        } else {
          contextBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * This is an optional field for providing any additional context information
       * that may aid speech recognition.  This can also be used to add
       * out-of-vocabulary words to the model or boost recognition of specific
       * proper names or commands. Context information must be pre-compiled via the
       * `CompileContext()` method.
       * </pre>
       *
       * <code>.cobaltspeech.cubic.RecognitionContext context = 10;</code>
       */
      public Builder clearContext() {
        if (contextBuilder_ == null) {
          context_ = null;
          onChanged();
        } else {
          context_ = null;
          contextBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * This is an optional field for providing any additional context information
       * that may aid speech recognition.  This can also be used to add
       * out-of-vocabulary words to the model or boost recognition of specific
       * proper names or commands. Context information must be pre-compiled via the
       * `CompileContext()` method.
       * </pre>
       *
       * <code>.cobaltspeech.cubic.RecognitionContext context = 10;</code>
       */
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionContext.Builder getContextBuilder() {
        
        onChanged();
        return getContextFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * This is an optional field for providing any additional context information
       * that may aid speech recognition.  This can also be used to add
       * out-of-vocabulary words to the model or boost recognition of specific
       * proper names or commands. Context information must be pre-compiled via the
       * `CompileContext()` method.
       * </pre>
       *
       * <code>.cobaltspeech.cubic.RecognitionContext context = 10;</code>
       */
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionContextOrBuilder getContextOrBuilder() {
        if (contextBuilder_ != null) {
          return contextBuilder_.getMessageOrBuilder();
        } else {
          return context_ == null ?
              com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionContext.getDefaultInstance() : context_;
        }
      }
      /**
       * <pre>
       * This is an optional field for providing any additional context information
       * that may aid speech recognition.  This can also be used to add
       * out-of-vocabulary words to the model or boost recognition of specific
       * proper names or commands. Context information must be pre-compiled via the
       * `CompileContext()` method.
       * </pre>
       *
       * <code>.cobaltspeech.cubic.RecognitionContext context = 10;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionContext, com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionContext.Builder, com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionContextOrBuilder> 
          getContextFieldBuilder() {
        if (contextBuilder_ == null) {
          contextBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionContext, com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionContext.Builder, com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionContextOrBuilder>(
                  getContext(),
                  getParentForChildren(),
                  isClean());
          context_ = null;
        }
        return contextBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:cobaltspeech.cubic.RecognitionConfig)
    }

    // @@protoc_insertion_point(class_scope:cobaltspeech.cubic.RecognitionConfig)
    private static final com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfig DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfig();
    }

    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfig getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RecognitionConfig>
        PARSER = new com.google.protobuf.AbstractParser<RecognitionConfig>() {
      @java.lang.Override
      public RecognitionConfig parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RecognitionConfig(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RecognitionConfig> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RecognitionConfig> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfig getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RecognitionMetadataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:cobaltspeech.cubic.RecognitionMetadata)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Any custom metadata that the client wants to associate with the recording.
     * This could be a simple string (e.g. a tracing ID) or structured data
     * (e.g. JSON)
     * </pre>
     *
     * <code>string custom_metadata = 1;</code>
     */
    java.lang.String getCustomMetadata();
    /**
     * <pre>
     * Any custom metadata that the client wants to associate with the recording.
     * This could be a simple string (e.g. a tracing ID) or structured data
     * (e.g. JSON)
     * </pre>
     *
     * <code>string custom_metadata = 1;</code>
     */
    com.google.protobuf.ByteString
        getCustomMetadataBytes();
  }
  /**
   * <pre>
   * Metadata associated with the audio to be recognized.
   * </pre>
   *
   * Protobuf type {@code cobaltspeech.cubic.RecognitionMetadata}
   */
  public  static final class RecognitionMetadata extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:cobaltspeech.cubic.RecognitionMetadata)
      RecognitionMetadataOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use RecognitionMetadata.newBuilder() to construct.
    private RecognitionMetadata(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RecognitionMetadata() {
      customMetadata_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private RecognitionMetadata(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              customMetadata_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.cobaltspeech.cubic.sdk.CubicOuterClass.internal_static_cobaltspeech_cubic_RecognitionMetadata_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.cobaltspeech.cubic.sdk.CubicOuterClass.internal_static_cobaltspeech_cubic_RecognitionMetadata_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionMetadata.class, com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionMetadata.Builder.class);
    }

    public static final int CUSTOM_METADATA_FIELD_NUMBER = 1;
    private volatile java.lang.Object customMetadata_;
    /**
     * <pre>
     * Any custom metadata that the client wants to associate with the recording.
     * This could be a simple string (e.g. a tracing ID) or structured data
     * (e.g. JSON)
     * </pre>
     *
     * <code>string custom_metadata = 1;</code>
     */
    public java.lang.String getCustomMetadata() {
      java.lang.Object ref = customMetadata_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        customMetadata_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Any custom metadata that the client wants to associate with the recording.
     * This could be a simple string (e.g. a tracing ID) or structured data
     * (e.g. JSON)
     * </pre>
     *
     * <code>string custom_metadata = 1;</code>
     */
    public com.google.protobuf.ByteString
        getCustomMetadataBytes() {
      java.lang.Object ref = customMetadata_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        customMetadata_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getCustomMetadataBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, customMetadata_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getCustomMetadataBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, customMetadata_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionMetadata)) {
        return super.equals(obj);
      }
      com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionMetadata other = (com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionMetadata) obj;

      if (!getCustomMetadata()
          .equals(other.getCustomMetadata())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + CUSTOM_METADATA_FIELD_NUMBER;
      hash = (53 * hash) + getCustomMetadata().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionMetadata parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionMetadata parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionMetadata parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionMetadata parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionMetadata parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionMetadata parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionMetadata parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionMetadata parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionMetadata parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionMetadata parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionMetadata parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionMetadata parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionMetadata prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Metadata associated with the audio to be recognized.
     * </pre>
     *
     * Protobuf type {@code cobaltspeech.cubic.RecognitionMetadata}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:cobaltspeech.cubic.RecognitionMetadata)
        com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionMetadataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.cobaltspeech.cubic.sdk.CubicOuterClass.internal_static_cobaltspeech_cubic_RecognitionMetadata_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.cobaltspeech.cubic.sdk.CubicOuterClass.internal_static_cobaltspeech_cubic_RecognitionMetadata_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionMetadata.class, com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionMetadata.Builder.class);
      }

      // Construct using com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionMetadata.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        customMetadata_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.cobaltspeech.cubic.sdk.CubicOuterClass.internal_static_cobaltspeech_cubic_RecognitionMetadata_descriptor;
      }

      @java.lang.Override
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionMetadata getDefaultInstanceForType() {
        return com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionMetadata.getDefaultInstance();
      }

      @java.lang.Override
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionMetadata build() {
        com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionMetadata result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionMetadata buildPartial() {
        com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionMetadata result = new com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionMetadata(this);
        result.customMetadata_ = customMetadata_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionMetadata) {
          return mergeFrom((com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionMetadata)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionMetadata other) {
        if (other == com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionMetadata.getDefaultInstance()) return this;
        if (!other.getCustomMetadata().isEmpty()) {
          customMetadata_ = other.customMetadata_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionMetadata parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionMetadata) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object customMetadata_ = "";
      /**
       * <pre>
       * Any custom metadata that the client wants to associate with the recording.
       * This could be a simple string (e.g. a tracing ID) or structured data
       * (e.g. JSON)
       * </pre>
       *
       * <code>string custom_metadata = 1;</code>
       */
      public java.lang.String getCustomMetadata() {
        java.lang.Object ref = customMetadata_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          customMetadata_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Any custom metadata that the client wants to associate with the recording.
       * This could be a simple string (e.g. a tracing ID) or structured data
       * (e.g. JSON)
       * </pre>
       *
       * <code>string custom_metadata = 1;</code>
       */
      public com.google.protobuf.ByteString
          getCustomMetadataBytes() {
        java.lang.Object ref = customMetadata_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          customMetadata_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Any custom metadata that the client wants to associate with the recording.
       * This could be a simple string (e.g. a tracing ID) or structured data
       * (e.g. JSON)
       * </pre>
       *
       * <code>string custom_metadata = 1;</code>
       */
      public Builder setCustomMetadata(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        customMetadata_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Any custom metadata that the client wants to associate with the recording.
       * This could be a simple string (e.g. a tracing ID) or structured data
       * (e.g. JSON)
       * </pre>
       *
       * <code>string custom_metadata = 1;</code>
       */
      public Builder clearCustomMetadata() {
        
        customMetadata_ = getDefaultInstance().getCustomMetadata();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Any custom metadata that the client wants to associate with the recording.
       * This could be a simple string (e.g. a tracing ID) or structured data
       * (e.g. JSON)
       * </pre>
       *
       * <code>string custom_metadata = 1;</code>
       */
      public Builder setCustomMetadataBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        customMetadata_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:cobaltspeech.cubic.RecognitionMetadata)
    }

    // @@protoc_insertion_point(class_scope:cobaltspeech.cubic.RecognitionMetadata)
    private static final com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionMetadata DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionMetadata();
    }

    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionMetadata getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RecognitionMetadata>
        PARSER = new com.google.protobuf.AbstractParser<RecognitionMetadata>() {
      @java.lang.Override
      public RecognitionMetadata parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RecognitionMetadata(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RecognitionMetadata> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RecognitionMetadata> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionMetadata getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RecognitionContextOrBuilder extends
      // @@protoc_insertion_point(interface_extends:cobaltspeech.cubic.RecognitionContext)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * List of compiled context information, with each entry being compiled from a
     * list of words or phrases using the `CompileContext` method.
     * </pre>
     *
     * <code>repeated .cobaltspeech.cubic.CompiledContext compiled = 1;</code>
     */
    java.util.List<com.cobaltspeech.cubic.sdk.CubicOuterClass.CompiledContext> 
        getCompiledList();
    /**
     * <pre>
     * List of compiled context information, with each entry being compiled from a
     * list of words or phrases using the `CompileContext` method.
     * </pre>
     *
     * <code>repeated .cobaltspeech.cubic.CompiledContext compiled = 1;</code>
     */
    com.cobaltspeech.cubic.sdk.CubicOuterClass.CompiledContext getCompiled(int index);
    /**
     * <pre>
     * List of compiled context information, with each entry being compiled from a
     * list of words or phrases using the `CompileContext` method.
     * </pre>
     *
     * <code>repeated .cobaltspeech.cubic.CompiledContext compiled = 1;</code>
     */
    int getCompiledCount();
    /**
     * <pre>
     * List of compiled context information, with each entry being compiled from a
     * list of words or phrases using the `CompileContext` method.
     * </pre>
     *
     * <code>repeated .cobaltspeech.cubic.CompiledContext compiled = 1;</code>
     */
    java.util.List<? extends com.cobaltspeech.cubic.sdk.CubicOuterClass.CompiledContextOrBuilder> 
        getCompiledOrBuilderList();
    /**
     * <pre>
     * List of compiled context information, with each entry being compiled from a
     * list of words or phrases using the `CompileContext` method.
     * </pre>
     *
     * <code>repeated .cobaltspeech.cubic.CompiledContext compiled = 1;</code>
     */
    com.cobaltspeech.cubic.sdk.CubicOuterClass.CompiledContextOrBuilder getCompiledOrBuilder(
        int index);
  }
  /**
   * <pre>
   * A collection of additional context information that may aid speech
   * recognition.  This can be used to add out-of-vocabulary words to  
   * the model or to boost recognition of specific proper names or commands. 
   * </pre>
   *
   * Protobuf type {@code cobaltspeech.cubic.RecognitionContext}
   */
  public  static final class RecognitionContext extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:cobaltspeech.cubic.RecognitionContext)
      RecognitionContextOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use RecognitionContext.newBuilder() to construct.
    private RecognitionContext(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RecognitionContext() {
      compiled_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private RecognitionContext(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                compiled_ = new java.util.ArrayList<com.cobaltspeech.cubic.sdk.CubicOuterClass.CompiledContext>();
                mutable_bitField0_ |= 0x00000001;
              }
              compiled_.add(
                  input.readMessage(com.cobaltspeech.cubic.sdk.CubicOuterClass.CompiledContext.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          compiled_ = java.util.Collections.unmodifiableList(compiled_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.cobaltspeech.cubic.sdk.CubicOuterClass.internal_static_cobaltspeech_cubic_RecognitionContext_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.cobaltspeech.cubic.sdk.CubicOuterClass.internal_static_cobaltspeech_cubic_RecognitionContext_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionContext.class, com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionContext.Builder.class);
    }

    public static final int COMPILED_FIELD_NUMBER = 1;
    private java.util.List<com.cobaltspeech.cubic.sdk.CubicOuterClass.CompiledContext> compiled_;
    /**
     * <pre>
     * List of compiled context information, with each entry being compiled from a
     * list of words or phrases using the `CompileContext` method.
     * </pre>
     *
     * <code>repeated .cobaltspeech.cubic.CompiledContext compiled = 1;</code>
     */
    public java.util.List<com.cobaltspeech.cubic.sdk.CubicOuterClass.CompiledContext> getCompiledList() {
      return compiled_;
    }
    /**
     * <pre>
     * List of compiled context information, with each entry being compiled from a
     * list of words or phrases using the `CompileContext` method.
     * </pre>
     *
     * <code>repeated .cobaltspeech.cubic.CompiledContext compiled = 1;</code>
     */
    public java.util.List<? extends com.cobaltspeech.cubic.sdk.CubicOuterClass.CompiledContextOrBuilder> 
        getCompiledOrBuilderList() {
      return compiled_;
    }
    /**
     * <pre>
     * List of compiled context information, with each entry being compiled from a
     * list of words or phrases using the `CompileContext` method.
     * </pre>
     *
     * <code>repeated .cobaltspeech.cubic.CompiledContext compiled = 1;</code>
     */
    public int getCompiledCount() {
      return compiled_.size();
    }
    /**
     * <pre>
     * List of compiled context information, with each entry being compiled from a
     * list of words or phrases using the `CompileContext` method.
     * </pre>
     *
     * <code>repeated .cobaltspeech.cubic.CompiledContext compiled = 1;</code>
     */
    public com.cobaltspeech.cubic.sdk.CubicOuterClass.CompiledContext getCompiled(int index) {
      return compiled_.get(index);
    }
    /**
     * <pre>
     * List of compiled context information, with each entry being compiled from a
     * list of words or phrases using the `CompileContext` method.
     * </pre>
     *
     * <code>repeated .cobaltspeech.cubic.CompiledContext compiled = 1;</code>
     */
    public com.cobaltspeech.cubic.sdk.CubicOuterClass.CompiledContextOrBuilder getCompiledOrBuilder(
        int index) {
      return compiled_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < compiled_.size(); i++) {
        output.writeMessage(1, compiled_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < compiled_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, compiled_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionContext)) {
        return super.equals(obj);
      }
      com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionContext other = (com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionContext) obj;

      if (!getCompiledList()
          .equals(other.getCompiledList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getCompiledCount() > 0) {
        hash = (37 * hash) + COMPILED_FIELD_NUMBER;
        hash = (53 * hash) + getCompiledList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionContext parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionContext parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionContext parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionContext parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionContext parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionContext parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionContext parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionContext parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionContext parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionContext parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionContext parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionContext parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionContext prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * A collection of additional context information that may aid speech
     * recognition.  This can be used to add out-of-vocabulary words to  
     * the model or to boost recognition of specific proper names or commands. 
     * </pre>
     *
     * Protobuf type {@code cobaltspeech.cubic.RecognitionContext}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:cobaltspeech.cubic.RecognitionContext)
        com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionContextOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.cobaltspeech.cubic.sdk.CubicOuterClass.internal_static_cobaltspeech_cubic_RecognitionContext_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.cobaltspeech.cubic.sdk.CubicOuterClass.internal_static_cobaltspeech_cubic_RecognitionContext_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionContext.class, com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionContext.Builder.class);
      }

      // Construct using com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionContext.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getCompiledFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (compiledBuilder_ == null) {
          compiled_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          compiledBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.cobaltspeech.cubic.sdk.CubicOuterClass.internal_static_cobaltspeech_cubic_RecognitionContext_descriptor;
      }

      @java.lang.Override
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionContext getDefaultInstanceForType() {
        return com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionContext.getDefaultInstance();
      }

      @java.lang.Override
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionContext build() {
        com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionContext result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionContext buildPartial() {
        com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionContext result = new com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionContext(this);
        int from_bitField0_ = bitField0_;
        if (compiledBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            compiled_ = java.util.Collections.unmodifiableList(compiled_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.compiled_ = compiled_;
        } else {
          result.compiled_ = compiledBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionContext) {
          return mergeFrom((com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionContext)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionContext other) {
        if (other == com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionContext.getDefaultInstance()) return this;
        if (compiledBuilder_ == null) {
          if (!other.compiled_.isEmpty()) {
            if (compiled_.isEmpty()) {
              compiled_ = other.compiled_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureCompiledIsMutable();
              compiled_.addAll(other.compiled_);
            }
            onChanged();
          }
        } else {
          if (!other.compiled_.isEmpty()) {
            if (compiledBuilder_.isEmpty()) {
              compiledBuilder_.dispose();
              compiledBuilder_ = null;
              compiled_ = other.compiled_;
              bitField0_ = (bitField0_ & ~0x00000001);
              compiledBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getCompiledFieldBuilder() : null;
            } else {
              compiledBuilder_.addAllMessages(other.compiled_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionContext parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionContext) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<com.cobaltspeech.cubic.sdk.CubicOuterClass.CompiledContext> compiled_ =
        java.util.Collections.emptyList();
      private void ensureCompiledIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          compiled_ = new java.util.ArrayList<com.cobaltspeech.cubic.sdk.CubicOuterClass.CompiledContext>(compiled_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.cobaltspeech.cubic.sdk.CubicOuterClass.CompiledContext, com.cobaltspeech.cubic.sdk.CubicOuterClass.CompiledContext.Builder, com.cobaltspeech.cubic.sdk.CubicOuterClass.CompiledContextOrBuilder> compiledBuilder_;

      /**
       * <pre>
       * List of compiled context information, with each entry being compiled from a
       * list of words or phrases using the `CompileContext` method.
       * </pre>
       *
       * <code>repeated .cobaltspeech.cubic.CompiledContext compiled = 1;</code>
       */
      public java.util.List<com.cobaltspeech.cubic.sdk.CubicOuterClass.CompiledContext> getCompiledList() {
        if (compiledBuilder_ == null) {
          return java.util.Collections.unmodifiableList(compiled_);
        } else {
          return compiledBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * List of compiled context information, with each entry being compiled from a
       * list of words or phrases using the `CompileContext` method.
       * </pre>
       *
       * <code>repeated .cobaltspeech.cubic.CompiledContext compiled = 1;</code>
       */
      public int getCompiledCount() {
        if (compiledBuilder_ == null) {
          return compiled_.size();
        } else {
          return compiledBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * List of compiled context information, with each entry being compiled from a
       * list of words or phrases using the `CompileContext` method.
       * </pre>
       *
       * <code>repeated .cobaltspeech.cubic.CompiledContext compiled = 1;</code>
       */
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.CompiledContext getCompiled(int index) {
        if (compiledBuilder_ == null) {
          return compiled_.get(index);
        } else {
          return compiledBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * List of compiled context information, with each entry being compiled from a
       * list of words or phrases using the `CompileContext` method.
       * </pre>
       *
       * <code>repeated .cobaltspeech.cubic.CompiledContext compiled = 1;</code>
       */
      public Builder setCompiled(
          int index, com.cobaltspeech.cubic.sdk.CubicOuterClass.CompiledContext value) {
        if (compiledBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCompiledIsMutable();
          compiled_.set(index, value);
          onChanged();
        } else {
          compiledBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * List of compiled context information, with each entry being compiled from a
       * list of words or phrases using the `CompileContext` method.
       * </pre>
       *
       * <code>repeated .cobaltspeech.cubic.CompiledContext compiled = 1;</code>
       */
      public Builder setCompiled(
          int index, com.cobaltspeech.cubic.sdk.CubicOuterClass.CompiledContext.Builder builderForValue) {
        if (compiledBuilder_ == null) {
          ensureCompiledIsMutable();
          compiled_.set(index, builderForValue.build());
          onChanged();
        } else {
          compiledBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * List of compiled context information, with each entry being compiled from a
       * list of words or phrases using the `CompileContext` method.
       * </pre>
       *
       * <code>repeated .cobaltspeech.cubic.CompiledContext compiled = 1;</code>
       */
      public Builder addCompiled(com.cobaltspeech.cubic.sdk.CubicOuterClass.CompiledContext value) {
        if (compiledBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCompiledIsMutable();
          compiled_.add(value);
          onChanged();
        } else {
          compiledBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * List of compiled context information, with each entry being compiled from a
       * list of words or phrases using the `CompileContext` method.
       * </pre>
       *
       * <code>repeated .cobaltspeech.cubic.CompiledContext compiled = 1;</code>
       */
      public Builder addCompiled(
          int index, com.cobaltspeech.cubic.sdk.CubicOuterClass.CompiledContext value) {
        if (compiledBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCompiledIsMutable();
          compiled_.add(index, value);
          onChanged();
        } else {
          compiledBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * List of compiled context information, with each entry being compiled from a
       * list of words or phrases using the `CompileContext` method.
       * </pre>
       *
       * <code>repeated .cobaltspeech.cubic.CompiledContext compiled = 1;</code>
       */
      public Builder addCompiled(
          com.cobaltspeech.cubic.sdk.CubicOuterClass.CompiledContext.Builder builderForValue) {
        if (compiledBuilder_ == null) {
          ensureCompiledIsMutable();
          compiled_.add(builderForValue.build());
          onChanged();
        } else {
          compiledBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * List of compiled context information, with each entry being compiled from a
       * list of words or phrases using the `CompileContext` method.
       * </pre>
       *
       * <code>repeated .cobaltspeech.cubic.CompiledContext compiled = 1;</code>
       */
      public Builder addCompiled(
          int index, com.cobaltspeech.cubic.sdk.CubicOuterClass.CompiledContext.Builder builderForValue) {
        if (compiledBuilder_ == null) {
          ensureCompiledIsMutable();
          compiled_.add(index, builderForValue.build());
          onChanged();
        } else {
          compiledBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * List of compiled context information, with each entry being compiled from a
       * list of words or phrases using the `CompileContext` method.
       * </pre>
       *
       * <code>repeated .cobaltspeech.cubic.CompiledContext compiled = 1;</code>
       */
      public Builder addAllCompiled(
          java.lang.Iterable<? extends com.cobaltspeech.cubic.sdk.CubicOuterClass.CompiledContext> values) {
        if (compiledBuilder_ == null) {
          ensureCompiledIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, compiled_);
          onChanged();
        } else {
          compiledBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * List of compiled context information, with each entry being compiled from a
       * list of words or phrases using the `CompileContext` method.
       * </pre>
       *
       * <code>repeated .cobaltspeech.cubic.CompiledContext compiled = 1;</code>
       */
      public Builder clearCompiled() {
        if (compiledBuilder_ == null) {
          compiled_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          compiledBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * List of compiled context information, with each entry being compiled from a
       * list of words or phrases using the `CompileContext` method.
       * </pre>
       *
       * <code>repeated .cobaltspeech.cubic.CompiledContext compiled = 1;</code>
       */
      public Builder removeCompiled(int index) {
        if (compiledBuilder_ == null) {
          ensureCompiledIsMutable();
          compiled_.remove(index);
          onChanged();
        } else {
          compiledBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * List of compiled context information, with each entry being compiled from a
       * list of words or phrases using the `CompileContext` method.
       * </pre>
       *
       * <code>repeated .cobaltspeech.cubic.CompiledContext compiled = 1;</code>
       */
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.CompiledContext.Builder getCompiledBuilder(
          int index) {
        return getCompiledFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * List of compiled context information, with each entry being compiled from a
       * list of words or phrases using the `CompileContext` method.
       * </pre>
       *
       * <code>repeated .cobaltspeech.cubic.CompiledContext compiled = 1;</code>
       */
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.CompiledContextOrBuilder getCompiledOrBuilder(
          int index) {
        if (compiledBuilder_ == null) {
          return compiled_.get(index);  } else {
          return compiledBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * List of compiled context information, with each entry being compiled from a
       * list of words or phrases using the `CompileContext` method.
       * </pre>
       *
       * <code>repeated .cobaltspeech.cubic.CompiledContext compiled = 1;</code>
       */
      public java.util.List<? extends com.cobaltspeech.cubic.sdk.CubicOuterClass.CompiledContextOrBuilder> 
           getCompiledOrBuilderList() {
        if (compiledBuilder_ != null) {
          return compiledBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(compiled_);
        }
      }
      /**
       * <pre>
       * List of compiled context information, with each entry being compiled from a
       * list of words or phrases using the `CompileContext` method.
       * </pre>
       *
       * <code>repeated .cobaltspeech.cubic.CompiledContext compiled = 1;</code>
       */
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.CompiledContext.Builder addCompiledBuilder() {
        return getCompiledFieldBuilder().addBuilder(
            com.cobaltspeech.cubic.sdk.CubicOuterClass.CompiledContext.getDefaultInstance());
      }
      /**
       * <pre>
       * List of compiled context information, with each entry being compiled from a
       * list of words or phrases using the `CompileContext` method.
       * </pre>
       *
       * <code>repeated .cobaltspeech.cubic.CompiledContext compiled = 1;</code>
       */
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.CompiledContext.Builder addCompiledBuilder(
          int index) {
        return getCompiledFieldBuilder().addBuilder(
            index, com.cobaltspeech.cubic.sdk.CubicOuterClass.CompiledContext.getDefaultInstance());
      }
      /**
       * <pre>
       * List of compiled context information, with each entry being compiled from a
       * list of words or phrases using the `CompileContext` method.
       * </pre>
       *
       * <code>repeated .cobaltspeech.cubic.CompiledContext compiled = 1;</code>
       */
      public java.util.List<com.cobaltspeech.cubic.sdk.CubicOuterClass.CompiledContext.Builder> 
           getCompiledBuilderList() {
        return getCompiledFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.cobaltspeech.cubic.sdk.CubicOuterClass.CompiledContext, com.cobaltspeech.cubic.sdk.CubicOuterClass.CompiledContext.Builder, com.cobaltspeech.cubic.sdk.CubicOuterClass.CompiledContextOrBuilder> 
          getCompiledFieldBuilder() {
        if (compiledBuilder_ == null) {
          compiledBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.cobaltspeech.cubic.sdk.CubicOuterClass.CompiledContext, com.cobaltspeech.cubic.sdk.CubicOuterClass.CompiledContext.Builder, com.cobaltspeech.cubic.sdk.CubicOuterClass.CompiledContextOrBuilder>(
                  compiled_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          compiled_ = null;
        }
        return compiledBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:cobaltspeech.cubic.RecognitionContext)
    }

    // @@protoc_insertion_point(class_scope:cobaltspeech.cubic.RecognitionContext)
    private static final com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionContext DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionContext();
    }

    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionContext getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RecognitionContext>
        PARSER = new com.google.protobuf.AbstractParser<RecognitionContext>() {
      @java.lang.Override
      public RecognitionContext parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RecognitionContext(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RecognitionContext> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RecognitionContext> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionContext getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CompiledContextOrBuilder extends
      // @@protoc_insertion_point(interface_extends:cobaltspeech.cubic.CompiledContext)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The context information compiled by the `CompileContext` method. 
     * </pre>
     *
     * <code>bytes data = 1;</code>
     */
    com.google.protobuf.ByteString getData();
  }
  /**
   * <pre>
   * Context information in a compact form that is efficient for use in subsequent
   * recognition requests. The size of the compiled form will depend on the amount
   * of text that was sent for compilation. For 1000 words it's generally less
   * than 100 kilobytes.
   * </pre>
   *
   * Protobuf type {@code cobaltspeech.cubic.CompiledContext}
   */
  public  static final class CompiledContext extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:cobaltspeech.cubic.CompiledContext)
      CompiledContextOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CompiledContext.newBuilder() to construct.
    private CompiledContext(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CompiledContext() {
      data_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CompiledContext(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {

              data_ = input.readBytes();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.cobaltspeech.cubic.sdk.CubicOuterClass.internal_static_cobaltspeech_cubic_CompiledContext_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.cobaltspeech.cubic.sdk.CubicOuterClass.internal_static_cobaltspeech_cubic_CompiledContext_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.cobaltspeech.cubic.sdk.CubicOuterClass.CompiledContext.class, com.cobaltspeech.cubic.sdk.CubicOuterClass.CompiledContext.Builder.class);
    }

    public static final int DATA_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString data_;
    /**
     * <pre>
     * The context information compiled by the `CompileContext` method. 
     * </pre>
     *
     * <code>bytes data = 1;</code>
     */
    public com.google.protobuf.ByteString getData() {
      return data_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!data_.isEmpty()) {
        output.writeBytes(1, data_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!data_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, data_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.cobaltspeech.cubic.sdk.CubicOuterClass.CompiledContext)) {
        return super.equals(obj);
      }
      com.cobaltspeech.cubic.sdk.CubicOuterClass.CompiledContext other = (com.cobaltspeech.cubic.sdk.CubicOuterClass.CompiledContext) obj;

      if (!getData()
          .equals(other.getData())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + DATA_FIELD_NUMBER;
      hash = (53 * hash) + getData().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.CompiledContext parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.CompiledContext parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.CompiledContext parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.CompiledContext parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.CompiledContext parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.CompiledContext parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.CompiledContext parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.CompiledContext parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.CompiledContext parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.CompiledContext parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.CompiledContext parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.CompiledContext parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.cobaltspeech.cubic.sdk.CubicOuterClass.CompiledContext prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Context information in a compact form that is efficient for use in subsequent
     * recognition requests. The size of the compiled form will depend on the amount
     * of text that was sent for compilation. For 1000 words it's generally less
     * than 100 kilobytes.
     * </pre>
     *
     * Protobuf type {@code cobaltspeech.cubic.CompiledContext}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:cobaltspeech.cubic.CompiledContext)
        com.cobaltspeech.cubic.sdk.CubicOuterClass.CompiledContextOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.cobaltspeech.cubic.sdk.CubicOuterClass.internal_static_cobaltspeech_cubic_CompiledContext_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.cobaltspeech.cubic.sdk.CubicOuterClass.internal_static_cobaltspeech_cubic_CompiledContext_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.cobaltspeech.cubic.sdk.CubicOuterClass.CompiledContext.class, com.cobaltspeech.cubic.sdk.CubicOuterClass.CompiledContext.Builder.class);
      }

      // Construct using com.cobaltspeech.cubic.sdk.CubicOuterClass.CompiledContext.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        data_ = com.google.protobuf.ByteString.EMPTY;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.cobaltspeech.cubic.sdk.CubicOuterClass.internal_static_cobaltspeech_cubic_CompiledContext_descriptor;
      }

      @java.lang.Override
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.CompiledContext getDefaultInstanceForType() {
        return com.cobaltspeech.cubic.sdk.CubicOuterClass.CompiledContext.getDefaultInstance();
      }

      @java.lang.Override
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.CompiledContext build() {
        com.cobaltspeech.cubic.sdk.CubicOuterClass.CompiledContext result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.CompiledContext buildPartial() {
        com.cobaltspeech.cubic.sdk.CubicOuterClass.CompiledContext result = new com.cobaltspeech.cubic.sdk.CubicOuterClass.CompiledContext(this);
        result.data_ = data_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.cobaltspeech.cubic.sdk.CubicOuterClass.CompiledContext) {
          return mergeFrom((com.cobaltspeech.cubic.sdk.CubicOuterClass.CompiledContext)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.cobaltspeech.cubic.sdk.CubicOuterClass.CompiledContext other) {
        if (other == com.cobaltspeech.cubic.sdk.CubicOuterClass.CompiledContext.getDefaultInstance()) return this;
        if (other.getData() != com.google.protobuf.ByteString.EMPTY) {
          setData(other.getData());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.cobaltspeech.cubic.sdk.CubicOuterClass.CompiledContext parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.cobaltspeech.cubic.sdk.CubicOuterClass.CompiledContext) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private com.google.protobuf.ByteString data_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * The context information compiled by the `CompileContext` method. 
       * </pre>
       *
       * <code>bytes data = 1;</code>
       */
      public com.google.protobuf.ByteString getData() {
        return data_;
      }
      /**
       * <pre>
       * The context information compiled by the `CompileContext` method. 
       * </pre>
       *
       * <code>bytes data = 1;</code>
       */
      public Builder setData(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        data_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The context information compiled by the `CompileContext` method. 
       * </pre>
       *
       * <code>bytes data = 1;</code>
       */
      public Builder clearData() {
        
        data_ = getDefaultInstance().getData();
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:cobaltspeech.cubic.CompiledContext)
    }

    // @@protoc_insertion_point(class_scope:cobaltspeech.cubic.CompiledContext)
    private static final com.cobaltspeech.cubic.sdk.CubicOuterClass.CompiledContext DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.cobaltspeech.cubic.sdk.CubicOuterClass.CompiledContext();
    }

    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.CompiledContext getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CompiledContext>
        PARSER = new com.google.protobuf.AbstractParser<CompiledContext>() {
      @java.lang.Override
      public CompiledContext parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CompiledContext(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CompiledContext> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CompiledContext> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.cobaltspeech.cubic.sdk.CubicOuterClass.CompiledContext getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ContextPhraseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:cobaltspeech.cubic.ContextPhrase)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The actual phrase or word.
     * </pre>
     *
     * <code>string text = 1;</code>
     */
    java.lang.String getText();
    /**
     * <pre>
     * The actual phrase or word.
     * </pre>
     *
     * <code>string text = 1;</code>
     */
    com.google.protobuf.ByteString
        getTextBytes();

    /**
     * <pre>
     * This is an optional field. The boost value is a positive number which is
     * used to increase the probability of the phrase or word appearing in the
     * output. This setting can be used to differentiate between similar sounding
     * words, with the desired word given a bigger boost value.
     * By default, all phrases or words are given an equal probability of 1/N
     * (where N = total number of phrases or words). If a boost value is provided,
     * the new probability is (boost + 1) * 1/N. We normalize the boosted
     * probabilities for all the phrases or words so that they sum to one. This
     * means that the boost value only has an effect if there are relative
     * differences in the values for different phrases or words. That is, if all
     * phrases or words have the same boost value, after normalization they will
     * all still have the same probability. This also means that the boost value
     * can be any positive value, but it is best to stick between 0 to 20.
     * Negative values are not supported and will be treated as 0 values.
     * </pre>
     *
     * <code>float boost = 2;</code>
     */
    float getBoost();
  }
  /**
   * <pre>
   * A phrase or word that is to be compiled into context information that can be
   * later used to improve speech recognition during a `Recognize` or
   * `StreamingRecognize` call. Along with the phrase or word itself, there is an
   * optional boost parameter that can be used to boost the likelihood of the
   * phrase or word in the recognition output.
   * </pre>
   *
   * Protobuf type {@code cobaltspeech.cubic.ContextPhrase}
   */
  public  static final class ContextPhrase extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:cobaltspeech.cubic.ContextPhrase)
      ContextPhraseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ContextPhrase.newBuilder() to construct.
    private ContextPhrase(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ContextPhrase() {
      text_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ContextPhrase(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              text_ = s;
              break;
            }
            case 21: {

              boost_ = input.readFloat();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.cobaltspeech.cubic.sdk.CubicOuterClass.internal_static_cobaltspeech_cubic_ContextPhrase_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.cobaltspeech.cubic.sdk.CubicOuterClass.internal_static_cobaltspeech_cubic_ContextPhrase_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextPhrase.class, com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextPhrase.Builder.class);
    }

    public static final int TEXT_FIELD_NUMBER = 1;
    private volatile java.lang.Object text_;
    /**
     * <pre>
     * The actual phrase or word.
     * </pre>
     *
     * <code>string text = 1;</code>
     */
    public java.lang.String getText() {
      java.lang.Object ref = text_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        text_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The actual phrase or word.
     * </pre>
     *
     * <code>string text = 1;</code>
     */
    public com.google.protobuf.ByteString
        getTextBytes() {
      java.lang.Object ref = text_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        text_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int BOOST_FIELD_NUMBER = 2;
    private float boost_;
    /**
     * <pre>
     * This is an optional field. The boost value is a positive number which is
     * used to increase the probability of the phrase or word appearing in the
     * output. This setting can be used to differentiate between similar sounding
     * words, with the desired word given a bigger boost value.
     * By default, all phrases or words are given an equal probability of 1/N
     * (where N = total number of phrases or words). If a boost value is provided,
     * the new probability is (boost + 1) * 1/N. We normalize the boosted
     * probabilities for all the phrases or words so that they sum to one. This
     * means that the boost value only has an effect if there are relative
     * differences in the values for different phrases or words. That is, if all
     * phrases or words have the same boost value, after normalization they will
     * all still have the same probability. This also means that the boost value
     * can be any positive value, but it is best to stick between 0 to 20.
     * Negative values are not supported and will be treated as 0 values.
     * </pre>
     *
     * <code>float boost = 2;</code>
     */
    public float getBoost() {
      return boost_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getTextBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, text_);
      }
      if (boost_ != 0F) {
        output.writeFloat(2, boost_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getTextBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, text_);
      }
      if (boost_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, boost_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextPhrase)) {
        return super.equals(obj);
      }
      com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextPhrase other = (com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextPhrase) obj;

      if (!getText()
          .equals(other.getText())) return false;
      if (java.lang.Float.floatToIntBits(getBoost())
          != java.lang.Float.floatToIntBits(
              other.getBoost())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TEXT_FIELD_NUMBER;
      hash = (53 * hash) + getText().hashCode();
      hash = (37 * hash) + BOOST_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getBoost());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextPhrase parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextPhrase parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextPhrase parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextPhrase parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextPhrase parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextPhrase parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextPhrase parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextPhrase parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextPhrase parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextPhrase parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextPhrase parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextPhrase parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextPhrase prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * A phrase or word that is to be compiled into context information that can be
     * later used to improve speech recognition during a `Recognize` or
     * `StreamingRecognize` call. Along with the phrase or word itself, there is an
     * optional boost parameter that can be used to boost the likelihood of the
     * phrase or word in the recognition output.
     * </pre>
     *
     * Protobuf type {@code cobaltspeech.cubic.ContextPhrase}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:cobaltspeech.cubic.ContextPhrase)
        com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextPhraseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.cobaltspeech.cubic.sdk.CubicOuterClass.internal_static_cobaltspeech_cubic_ContextPhrase_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.cobaltspeech.cubic.sdk.CubicOuterClass.internal_static_cobaltspeech_cubic_ContextPhrase_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextPhrase.class, com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextPhrase.Builder.class);
      }

      // Construct using com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextPhrase.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        text_ = "";

        boost_ = 0F;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.cobaltspeech.cubic.sdk.CubicOuterClass.internal_static_cobaltspeech_cubic_ContextPhrase_descriptor;
      }

      @java.lang.Override
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextPhrase getDefaultInstanceForType() {
        return com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextPhrase.getDefaultInstance();
      }

      @java.lang.Override
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextPhrase build() {
        com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextPhrase result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextPhrase buildPartial() {
        com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextPhrase result = new com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextPhrase(this);
        result.text_ = text_;
        result.boost_ = boost_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextPhrase) {
          return mergeFrom((com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextPhrase)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextPhrase other) {
        if (other == com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextPhrase.getDefaultInstance()) return this;
        if (!other.getText().isEmpty()) {
          text_ = other.text_;
          onChanged();
        }
        if (other.getBoost() != 0F) {
          setBoost(other.getBoost());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextPhrase parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextPhrase) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object text_ = "";
      /**
       * <pre>
       * The actual phrase or word.
       * </pre>
       *
       * <code>string text = 1;</code>
       */
      public java.lang.String getText() {
        java.lang.Object ref = text_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          text_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The actual phrase or word.
       * </pre>
       *
       * <code>string text = 1;</code>
       */
      public com.google.protobuf.ByteString
          getTextBytes() {
        java.lang.Object ref = text_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          text_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The actual phrase or word.
       * </pre>
       *
       * <code>string text = 1;</code>
       */
      public Builder setText(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        text_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The actual phrase or word.
       * </pre>
       *
       * <code>string text = 1;</code>
       */
      public Builder clearText() {
        
        text_ = getDefaultInstance().getText();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The actual phrase or word.
       * </pre>
       *
       * <code>string text = 1;</code>
       */
      public Builder setTextBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        text_ = value;
        onChanged();
        return this;
      }

      private float boost_ ;
      /**
       * <pre>
       * This is an optional field. The boost value is a positive number which is
       * used to increase the probability of the phrase or word appearing in the
       * output. This setting can be used to differentiate between similar sounding
       * words, with the desired word given a bigger boost value.
       * By default, all phrases or words are given an equal probability of 1/N
       * (where N = total number of phrases or words). If a boost value is provided,
       * the new probability is (boost + 1) * 1/N. We normalize the boosted
       * probabilities for all the phrases or words so that they sum to one. This
       * means that the boost value only has an effect if there are relative
       * differences in the values for different phrases or words. That is, if all
       * phrases or words have the same boost value, after normalization they will
       * all still have the same probability. This also means that the boost value
       * can be any positive value, but it is best to stick between 0 to 20.
       * Negative values are not supported and will be treated as 0 values.
       * </pre>
       *
       * <code>float boost = 2;</code>
       */
      public float getBoost() {
        return boost_;
      }
      /**
       * <pre>
       * This is an optional field. The boost value is a positive number which is
       * used to increase the probability of the phrase or word appearing in the
       * output. This setting can be used to differentiate between similar sounding
       * words, with the desired word given a bigger boost value.
       * By default, all phrases or words are given an equal probability of 1/N
       * (where N = total number of phrases or words). If a boost value is provided,
       * the new probability is (boost + 1) * 1/N. We normalize the boosted
       * probabilities for all the phrases or words so that they sum to one. This
       * means that the boost value only has an effect if there are relative
       * differences in the values for different phrases or words. That is, if all
       * phrases or words have the same boost value, after normalization they will
       * all still have the same probability. This also means that the boost value
       * can be any positive value, but it is best to stick between 0 to 20.
       * Negative values are not supported and will be treated as 0 values.
       * </pre>
       *
       * <code>float boost = 2;</code>
       */
      public Builder setBoost(float value) {
        
        boost_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * This is an optional field. The boost value is a positive number which is
       * used to increase the probability of the phrase or word appearing in the
       * output. This setting can be used to differentiate between similar sounding
       * words, with the desired word given a bigger boost value.
       * By default, all phrases or words are given an equal probability of 1/N
       * (where N = total number of phrases or words). If a boost value is provided,
       * the new probability is (boost + 1) * 1/N. We normalize the boosted
       * probabilities for all the phrases or words so that they sum to one. This
       * means that the boost value only has an effect if there are relative
       * differences in the values for different phrases or words. That is, if all
       * phrases or words have the same boost value, after normalization they will
       * all still have the same probability. This also means that the boost value
       * can be any positive value, but it is best to stick between 0 to 20.
       * Negative values are not supported and will be treated as 0 values.
       * </pre>
       *
       * <code>float boost = 2;</code>
       */
      public Builder clearBoost() {
        
        boost_ = 0F;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:cobaltspeech.cubic.ContextPhrase)
    }

    // @@protoc_insertion_point(class_scope:cobaltspeech.cubic.ContextPhrase)
    private static final com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextPhrase DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextPhrase();
    }

    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextPhrase getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ContextPhrase>
        PARSER = new com.google.protobuf.AbstractParser<ContextPhrase>() {
      @java.lang.Override
      public ContextPhrase parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ContextPhrase(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ContextPhrase> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ContextPhrase> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextPhrase getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RecognitionAudioOrBuilder extends
      // @@protoc_insertion_point(interface_extends:cobaltspeech.cubic.RecognitionAudio)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>bytes data = 1;</code>
     */
    com.google.protobuf.ByteString getData();
  }
  /**
   * <pre>
   * Audio to be sent to the recognizer
   * </pre>
   *
   * Protobuf type {@code cobaltspeech.cubic.RecognitionAudio}
   */
  public  static final class RecognitionAudio extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:cobaltspeech.cubic.RecognitionAudio)
      RecognitionAudioOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use RecognitionAudio.newBuilder() to construct.
    private RecognitionAudio(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RecognitionAudio() {
      data_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private RecognitionAudio(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {

              data_ = input.readBytes();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.cobaltspeech.cubic.sdk.CubicOuterClass.internal_static_cobaltspeech_cubic_RecognitionAudio_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.cobaltspeech.cubic.sdk.CubicOuterClass.internal_static_cobaltspeech_cubic_RecognitionAudio_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAudio.class, com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAudio.Builder.class);
    }

    public static final int DATA_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString data_;
    /**
     * <code>bytes data = 1;</code>
     */
    public com.google.protobuf.ByteString getData() {
      return data_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!data_.isEmpty()) {
        output.writeBytes(1, data_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!data_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, data_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAudio)) {
        return super.equals(obj);
      }
      com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAudio other = (com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAudio) obj;

      if (!getData()
          .equals(other.getData())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + DATA_FIELD_NUMBER;
      hash = (53 * hash) + getData().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAudio parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAudio parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAudio parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAudio parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAudio parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAudio parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAudio parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAudio parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAudio parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAudio parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAudio parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAudio parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAudio prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Audio to be sent to the recognizer
     * </pre>
     *
     * Protobuf type {@code cobaltspeech.cubic.RecognitionAudio}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:cobaltspeech.cubic.RecognitionAudio)
        com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAudioOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.cobaltspeech.cubic.sdk.CubicOuterClass.internal_static_cobaltspeech_cubic_RecognitionAudio_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.cobaltspeech.cubic.sdk.CubicOuterClass.internal_static_cobaltspeech_cubic_RecognitionAudio_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAudio.class, com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAudio.Builder.class);
      }

      // Construct using com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAudio.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        data_ = com.google.protobuf.ByteString.EMPTY;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.cobaltspeech.cubic.sdk.CubicOuterClass.internal_static_cobaltspeech_cubic_RecognitionAudio_descriptor;
      }

      @java.lang.Override
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAudio getDefaultInstanceForType() {
        return com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAudio.getDefaultInstance();
      }

      @java.lang.Override
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAudio build() {
        com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAudio result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAudio buildPartial() {
        com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAudio result = new com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAudio(this);
        result.data_ = data_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAudio) {
          return mergeFrom((com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAudio)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAudio other) {
        if (other == com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAudio.getDefaultInstance()) return this;
        if (other.getData() != com.google.protobuf.ByteString.EMPTY) {
          setData(other.getData());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAudio parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAudio) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private com.google.protobuf.ByteString data_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>bytes data = 1;</code>
       */
      public com.google.protobuf.ByteString getData() {
        return data_;
      }
      /**
       * <code>bytes data = 1;</code>
       */
      public Builder setData(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        data_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bytes data = 1;</code>
       */
      public Builder clearData() {
        
        data_ = getDefaultInstance().getData();
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:cobaltspeech.cubic.RecognitionAudio)
    }

    // @@protoc_insertion_point(class_scope:cobaltspeech.cubic.RecognitionAudio)
    private static final com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAudio DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAudio();
    }

    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAudio getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RecognitionAudio>
        PARSER = new com.google.protobuf.AbstractParser<RecognitionAudio>() {
      @java.lang.Override
      public RecognitionAudio parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RecognitionAudio(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RecognitionAudio> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RecognitionAudio> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAudio getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ModelOrBuilder extends
      // @@protoc_insertion_point(interface_extends:cobaltspeech.cubic.Model)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Unique identifier of the model.  This identifier is used to choose the
     * model that should be used for recognition, and is specified in the
     * `RecognitionConfig` message.
     * </pre>
     *
     * <code>string id = 1;</code>
     */
    java.lang.String getId();
    /**
     * <pre>
     * Unique identifier of the model.  This identifier is used to choose the
     * model that should be used for recognition, and is specified in the
     * `RecognitionConfig` message.
     * </pre>
     *
     * <code>string id = 1;</code>
     */
    com.google.protobuf.ByteString
        getIdBytes();

    /**
     * <pre>
     * Model name.  This is a concise name describing the model, and maybe
     * presented to the end-user, for example, to help choose which model to use
     * for their recognition task.
     * </pre>
     *
     * <code>string name = 2;</code>
     */
    java.lang.String getName();
    /**
     * <pre>
     * Model name.  This is a concise name describing the model, and maybe
     * presented to the end-user, for example, to help choose which model to use
     * for their recognition task.
     * </pre>
     *
     * <code>string name = 2;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     * Model attributes
     * </pre>
     *
     * <code>.cobaltspeech.cubic.ModelAttributes attributes = 3;</code>
     */
    boolean hasAttributes();
    /**
     * <pre>
     * Model attributes
     * </pre>
     *
     * <code>.cobaltspeech.cubic.ModelAttributes attributes = 3;</code>
     */
    com.cobaltspeech.cubic.sdk.CubicOuterClass.ModelAttributes getAttributes();
    /**
     * <pre>
     * Model attributes
     * </pre>
     *
     * <code>.cobaltspeech.cubic.ModelAttributes attributes = 3;</code>
     */
    com.cobaltspeech.cubic.sdk.CubicOuterClass.ModelAttributesOrBuilder getAttributesOrBuilder();
  }
  /**
   * <pre>
   * Description of a Cubic Model
   * </pre>
   *
   * Protobuf type {@code cobaltspeech.cubic.Model}
   */
  public  static final class Model extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:cobaltspeech.cubic.Model)
      ModelOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Model.newBuilder() to construct.
    private Model(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Model() {
      id_ = "";
      name_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Model(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              id_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 26: {
              com.cobaltspeech.cubic.sdk.CubicOuterClass.ModelAttributes.Builder subBuilder = null;
              if (attributes_ != null) {
                subBuilder = attributes_.toBuilder();
              }
              attributes_ = input.readMessage(com.cobaltspeech.cubic.sdk.CubicOuterClass.ModelAttributes.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(attributes_);
                attributes_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.cobaltspeech.cubic.sdk.CubicOuterClass.internal_static_cobaltspeech_cubic_Model_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.cobaltspeech.cubic.sdk.CubicOuterClass.internal_static_cobaltspeech_cubic_Model_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.cobaltspeech.cubic.sdk.CubicOuterClass.Model.class, com.cobaltspeech.cubic.sdk.CubicOuterClass.Model.Builder.class);
    }

    public static final int ID_FIELD_NUMBER = 1;
    private volatile java.lang.Object id_;
    /**
     * <pre>
     * Unique identifier of the model.  This identifier is used to choose the
     * model that should be used for recognition, and is specified in the
     * `RecognitionConfig` message.
     * </pre>
     *
     * <code>string id = 1;</code>
     */
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Unique identifier of the model.  This identifier is used to choose the
     * model that should be used for recognition, and is specified in the
     * `RecognitionConfig` message.
     * </pre>
     *
     * <code>string id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NAME_FIELD_NUMBER = 2;
    private volatile java.lang.Object name_;
    /**
     * <pre>
     * Model name.  This is a concise name describing the model, and maybe
     * presented to the end-user, for example, to help choose which model to use
     * for their recognition task.
     * </pre>
     *
     * <code>string name = 2;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Model name.  This is a concise name describing the model, and maybe
     * presented to the end-user, for example, to help choose which model to use
     * for their recognition task.
     * </pre>
     *
     * <code>string name = 2;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ATTRIBUTES_FIELD_NUMBER = 3;
    private com.cobaltspeech.cubic.sdk.CubicOuterClass.ModelAttributes attributes_;
    /**
     * <pre>
     * Model attributes
     * </pre>
     *
     * <code>.cobaltspeech.cubic.ModelAttributes attributes = 3;</code>
     */
    public boolean hasAttributes() {
      return attributes_ != null;
    }
    /**
     * <pre>
     * Model attributes
     * </pre>
     *
     * <code>.cobaltspeech.cubic.ModelAttributes attributes = 3;</code>
     */
    public com.cobaltspeech.cubic.sdk.CubicOuterClass.ModelAttributes getAttributes() {
      return attributes_ == null ? com.cobaltspeech.cubic.sdk.CubicOuterClass.ModelAttributes.getDefaultInstance() : attributes_;
    }
    /**
     * <pre>
     * Model attributes
     * </pre>
     *
     * <code>.cobaltspeech.cubic.ModelAttributes attributes = 3;</code>
     */
    public com.cobaltspeech.cubic.sdk.CubicOuterClass.ModelAttributesOrBuilder getAttributesOrBuilder() {
      return getAttributes();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, id_);
      }
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, name_);
      }
      if (attributes_ != null) {
        output.writeMessage(3, getAttributes());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, id_);
      }
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, name_);
      }
      if (attributes_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getAttributes());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.cobaltspeech.cubic.sdk.CubicOuterClass.Model)) {
        return super.equals(obj);
      }
      com.cobaltspeech.cubic.sdk.CubicOuterClass.Model other = (com.cobaltspeech.cubic.sdk.CubicOuterClass.Model) obj;

      if (!getId()
          .equals(other.getId())) return false;
      if (!getName()
          .equals(other.getName())) return false;
      if (hasAttributes() != other.hasAttributes()) return false;
      if (hasAttributes()) {
        if (!getAttributes()
            .equals(other.getAttributes())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      if (hasAttributes()) {
        hash = (37 * hash) + ATTRIBUTES_FIELD_NUMBER;
        hash = (53 * hash) + getAttributes().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.Model parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.Model parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.Model parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.Model parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.Model parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.Model parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.Model parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.Model parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.Model parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.Model parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.Model parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.Model parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.cobaltspeech.cubic.sdk.CubicOuterClass.Model prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Description of a Cubic Model
     * </pre>
     *
     * Protobuf type {@code cobaltspeech.cubic.Model}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:cobaltspeech.cubic.Model)
        com.cobaltspeech.cubic.sdk.CubicOuterClass.ModelOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.cobaltspeech.cubic.sdk.CubicOuterClass.internal_static_cobaltspeech_cubic_Model_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.cobaltspeech.cubic.sdk.CubicOuterClass.internal_static_cobaltspeech_cubic_Model_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.cobaltspeech.cubic.sdk.CubicOuterClass.Model.class, com.cobaltspeech.cubic.sdk.CubicOuterClass.Model.Builder.class);
      }

      // Construct using com.cobaltspeech.cubic.sdk.CubicOuterClass.Model.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        id_ = "";

        name_ = "";

        if (attributesBuilder_ == null) {
          attributes_ = null;
        } else {
          attributes_ = null;
          attributesBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.cobaltspeech.cubic.sdk.CubicOuterClass.internal_static_cobaltspeech_cubic_Model_descriptor;
      }

      @java.lang.Override
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.Model getDefaultInstanceForType() {
        return com.cobaltspeech.cubic.sdk.CubicOuterClass.Model.getDefaultInstance();
      }

      @java.lang.Override
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.Model build() {
        com.cobaltspeech.cubic.sdk.CubicOuterClass.Model result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.Model buildPartial() {
        com.cobaltspeech.cubic.sdk.CubicOuterClass.Model result = new com.cobaltspeech.cubic.sdk.CubicOuterClass.Model(this);
        result.id_ = id_;
        result.name_ = name_;
        if (attributesBuilder_ == null) {
          result.attributes_ = attributes_;
        } else {
          result.attributes_ = attributesBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.cobaltspeech.cubic.sdk.CubicOuterClass.Model) {
          return mergeFrom((com.cobaltspeech.cubic.sdk.CubicOuterClass.Model)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.cobaltspeech.cubic.sdk.CubicOuterClass.Model other) {
        if (other == com.cobaltspeech.cubic.sdk.CubicOuterClass.Model.getDefaultInstance()) return this;
        if (!other.getId().isEmpty()) {
          id_ = other.id_;
          onChanged();
        }
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (other.hasAttributes()) {
          mergeAttributes(other.getAttributes());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.cobaltspeech.cubic.sdk.CubicOuterClass.Model parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.cobaltspeech.cubic.sdk.CubicOuterClass.Model) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object id_ = "";
      /**
       * <pre>
       * Unique identifier of the model.  This identifier is used to choose the
       * model that should be used for recognition, and is specified in the
       * `RecognitionConfig` message.
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Unique identifier of the model.  This identifier is used to choose the
       * model that should be used for recognition, and is specified in the
       * `RecognitionConfig` message.
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Unique identifier of the model.  This identifier is used to choose the
       * model that should be used for recognition, and is specified in the
       * `RecognitionConfig` message.
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public Builder setId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Unique identifier of the model.  This identifier is used to choose the
       * model that should be used for recognition, and is specified in the
       * `RecognitionConfig` message.
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public Builder clearId() {
        
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Unique identifier of the model.  This identifier is used to choose the
       * model that should be used for recognition, and is specified in the
       * `RecognitionConfig` message.
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        id_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       * <pre>
       * Model name.  This is a concise name describing the model, and maybe
       * presented to the end-user, for example, to help choose which model to use
       * for their recognition task.
       * </pre>
       *
       * <code>string name = 2;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Model name.  This is a concise name describing the model, and maybe
       * presented to the end-user, for example, to help choose which model to use
       * for their recognition task.
       * </pre>
       *
       * <code>string name = 2;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Model name.  This is a concise name describing the model, and maybe
       * presented to the end-user, for example, to help choose which model to use
       * for their recognition task.
       * </pre>
       *
       * <code>string name = 2;</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Model name.  This is a concise name describing the model, and maybe
       * presented to the end-user, for example, to help choose which model to use
       * for their recognition task.
       * </pre>
       *
       * <code>string name = 2;</code>
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Model name.  This is a concise name describing the model, and maybe
       * presented to the end-user, for example, to help choose which model to use
       * for their recognition task.
       * </pre>
       *
       * <code>string name = 2;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private com.cobaltspeech.cubic.sdk.CubicOuterClass.ModelAttributes attributes_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.cobaltspeech.cubic.sdk.CubicOuterClass.ModelAttributes, com.cobaltspeech.cubic.sdk.CubicOuterClass.ModelAttributes.Builder, com.cobaltspeech.cubic.sdk.CubicOuterClass.ModelAttributesOrBuilder> attributesBuilder_;
      /**
       * <pre>
       * Model attributes
       * </pre>
       *
       * <code>.cobaltspeech.cubic.ModelAttributes attributes = 3;</code>
       */
      public boolean hasAttributes() {
        return attributesBuilder_ != null || attributes_ != null;
      }
      /**
       * <pre>
       * Model attributes
       * </pre>
       *
       * <code>.cobaltspeech.cubic.ModelAttributes attributes = 3;</code>
       */
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.ModelAttributes getAttributes() {
        if (attributesBuilder_ == null) {
          return attributes_ == null ? com.cobaltspeech.cubic.sdk.CubicOuterClass.ModelAttributes.getDefaultInstance() : attributes_;
        } else {
          return attributesBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Model attributes
       * </pre>
       *
       * <code>.cobaltspeech.cubic.ModelAttributes attributes = 3;</code>
       */
      public Builder setAttributes(com.cobaltspeech.cubic.sdk.CubicOuterClass.ModelAttributes value) {
        if (attributesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          attributes_ = value;
          onChanged();
        } else {
          attributesBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Model attributes
       * </pre>
       *
       * <code>.cobaltspeech.cubic.ModelAttributes attributes = 3;</code>
       */
      public Builder setAttributes(
          com.cobaltspeech.cubic.sdk.CubicOuterClass.ModelAttributes.Builder builderForValue) {
        if (attributesBuilder_ == null) {
          attributes_ = builderForValue.build();
          onChanged();
        } else {
          attributesBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Model attributes
       * </pre>
       *
       * <code>.cobaltspeech.cubic.ModelAttributes attributes = 3;</code>
       */
      public Builder mergeAttributes(com.cobaltspeech.cubic.sdk.CubicOuterClass.ModelAttributes value) {
        if (attributesBuilder_ == null) {
          if (attributes_ != null) {
            attributes_ =
              com.cobaltspeech.cubic.sdk.CubicOuterClass.ModelAttributes.newBuilder(attributes_).mergeFrom(value).buildPartial();
          } else {
            attributes_ = value;
          }
          onChanged();
        } else {
          attributesBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Model attributes
       * </pre>
       *
       * <code>.cobaltspeech.cubic.ModelAttributes attributes = 3;</code>
       */
      public Builder clearAttributes() {
        if (attributesBuilder_ == null) {
          attributes_ = null;
          onChanged();
        } else {
          attributes_ = null;
          attributesBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Model attributes
       * </pre>
       *
       * <code>.cobaltspeech.cubic.ModelAttributes attributes = 3;</code>
       */
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.ModelAttributes.Builder getAttributesBuilder() {
        
        onChanged();
        return getAttributesFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Model attributes
       * </pre>
       *
       * <code>.cobaltspeech.cubic.ModelAttributes attributes = 3;</code>
       */
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.ModelAttributesOrBuilder getAttributesOrBuilder() {
        if (attributesBuilder_ != null) {
          return attributesBuilder_.getMessageOrBuilder();
        } else {
          return attributes_ == null ?
              com.cobaltspeech.cubic.sdk.CubicOuterClass.ModelAttributes.getDefaultInstance() : attributes_;
        }
      }
      /**
       * <pre>
       * Model attributes
       * </pre>
       *
       * <code>.cobaltspeech.cubic.ModelAttributes attributes = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.cobaltspeech.cubic.sdk.CubicOuterClass.ModelAttributes, com.cobaltspeech.cubic.sdk.CubicOuterClass.ModelAttributes.Builder, com.cobaltspeech.cubic.sdk.CubicOuterClass.ModelAttributesOrBuilder> 
          getAttributesFieldBuilder() {
        if (attributesBuilder_ == null) {
          attributesBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.cobaltspeech.cubic.sdk.CubicOuterClass.ModelAttributes, com.cobaltspeech.cubic.sdk.CubicOuterClass.ModelAttributes.Builder, com.cobaltspeech.cubic.sdk.CubicOuterClass.ModelAttributesOrBuilder>(
                  getAttributes(),
                  getParentForChildren(),
                  isClean());
          attributes_ = null;
        }
        return attributesBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:cobaltspeech.cubic.Model)
    }

    // @@protoc_insertion_point(class_scope:cobaltspeech.cubic.Model)
    private static final com.cobaltspeech.cubic.sdk.CubicOuterClass.Model DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.cobaltspeech.cubic.sdk.CubicOuterClass.Model();
    }

    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.Model getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Model>
        PARSER = new com.google.protobuf.AbstractParser<Model>() {
      @java.lang.Override
      public Model parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Model(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Model> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Model> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.cobaltspeech.cubic.sdk.CubicOuterClass.Model getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ModelAttributesOrBuilder extends
      // @@protoc_insertion_point(interface_extends:cobaltspeech.cubic.ModelAttributes)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Audio sample rate supported by the model
     * </pre>
     *
     * <code>uint32 sample_rate = 1;</code>
     */
    int getSampleRate();

    /**
     * <pre>
     * Attributes specifc to supporting recognition context.
     * </pre>
     *
     * <code>.cobaltspeech.cubic.ContextInfo context_info = 2;</code>
     */
    boolean hasContextInfo();
    /**
     * <pre>
     * Attributes specifc to supporting recognition context.
     * </pre>
     *
     * <code>.cobaltspeech.cubic.ContextInfo context_info = 2;</code>
     */
    com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextInfo getContextInfo();
    /**
     * <pre>
     * Attributes specifc to supporting recognition context.
     * </pre>
     *
     * <code>.cobaltspeech.cubic.ContextInfo context_info = 2;</code>
     */
    com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextInfoOrBuilder getContextInfoOrBuilder();
  }
  /**
   * <pre>
   * Attributes of a Cubic Model
   * </pre>
   *
   * Protobuf type {@code cobaltspeech.cubic.ModelAttributes}
   */
  public  static final class ModelAttributes extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:cobaltspeech.cubic.ModelAttributes)
      ModelAttributesOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ModelAttributes.newBuilder() to construct.
    private ModelAttributes(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ModelAttributes() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ModelAttributes(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              sampleRate_ = input.readUInt32();
              break;
            }
            case 18: {
              com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextInfo.Builder subBuilder = null;
              if (contextInfo_ != null) {
                subBuilder = contextInfo_.toBuilder();
              }
              contextInfo_ = input.readMessage(com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextInfo.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(contextInfo_);
                contextInfo_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.cobaltspeech.cubic.sdk.CubicOuterClass.internal_static_cobaltspeech_cubic_ModelAttributes_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.cobaltspeech.cubic.sdk.CubicOuterClass.internal_static_cobaltspeech_cubic_ModelAttributes_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.cobaltspeech.cubic.sdk.CubicOuterClass.ModelAttributes.class, com.cobaltspeech.cubic.sdk.CubicOuterClass.ModelAttributes.Builder.class);
    }

    public static final int SAMPLE_RATE_FIELD_NUMBER = 1;
    private int sampleRate_;
    /**
     * <pre>
     * Audio sample rate supported by the model
     * </pre>
     *
     * <code>uint32 sample_rate = 1;</code>
     */
    public int getSampleRate() {
      return sampleRate_;
    }

    public static final int CONTEXT_INFO_FIELD_NUMBER = 2;
    private com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextInfo contextInfo_;
    /**
     * <pre>
     * Attributes specifc to supporting recognition context.
     * </pre>
     *
     * <code>.cobaltspeech.cubic.ContextInfo context_info = 2;</code>
     */
    public boolean hasContextInfo() {
      return contextInfo_ != null;
    }
    /**
     * <pre>
     * Attributes specifc to supporting recognition context.
     * </pre>
     *
     * <code>.cobaltspeech.cubic.ContextInfo context_info = 2;</code>
     */
    public com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextInfo getContextInfo() {
      return contextInfo_ == null ? com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextInfo.getDefaultInstance() : contextInfo_;
    }
    /**
     * <pre>
     * Attributes specifc to supporting recognition context.
     * </pre>
     *
     * <code>.cobaltspeech.cubic.ContextInfo context_info = 2;</code>
     */
    public com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextInfoOrBuilder getContextInfoOrBuilder() {
      return getContextInfo();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (sampleRate_ != 0) {
        output.writeUInt32(1, sampleRate_);
      }
      if (contextInfo_ != null) {
        output.writeMessage(2, getContextInfo());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (sampleRate_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, sampleRate_);
      }
      if (contextInfo_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getContextInfo());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.cobaltspeech.cubic.sdk.CubicOuterClass.ModelAttributes)) {
        return super.equals(obj);
      }
      com.cobaltspeech.cubic.sdk.CubicOuterClass.ModelAttributes other = (com.cobaltspeech.cubic.sdk.CubicOuterClass.ModelAttributes) obj;

      if (getSampleRate()
          != other.getSampleRate()) return false;
      if (hasContextInfo() != other.hasContextInfo()) return false;
      if (hasContextInfo()) {
        if (!getContextInfo()
            .equals(other.getContextInfo())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + SAMPLE_RATE_FIELD_NUMBER;
      hash = (53 * hash) + getSampleRate();
      if (hasContextInfo()) {
        hash = (37 * hash) + CONTEXT_INFO_FIELD_NUMBER;
        hash = (53 * hash) + getContextInfo().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.ModelAttributes parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.ModelAttributes parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.ModelAttributes parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.ModelAttributes parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.ModelAttributes parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.ModelAttributes parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.ModelAttributes parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.ModelAttributes parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.ModelAttributes parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.ModelAttributes parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.ModelAttributes parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.ModelAttributes parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.cobaltspeech.cubic.sdk.CubicOuterClass.ModelAttributes prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Attributes of a Cubic Model
     * </pre>
     *
     * Protobuf type {@code cobaltspeech.cubic.ModelAttributes}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:cobaltspeech.cubic.ModelAttributes)
        com.cobaltspeech.cubic.sdk.CubicOuterClass.ModelAttributesOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.cobaltspeech.cubic.sdk.CubicOuterClass.internal_static_cobaltspeech_cubic_ModelAttributes_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.cobaltspeech.cubic.sdk.CubicOuterClass.internal_static_cobaltspeech_cubic_ModelAttributes_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.cobaltspeech.cubic.sdk.CubicOuterClass.ModelAttributes.class, com.cobaltspeech.cubic.sdk.CubicOuterClass.ModelAttributes.Builder.class);
      }

      // Construct using com.cobaltspeech.cubic.sdk.CubicOuterClass.ModelAttributes.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        sampleRate_ = 0;

        if (contextInfoBuilder_ == null) {
          contextInfo_ = null;
        } else {
          contextInfo_ = null;
          contextInfoBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.cobaltspeech.cubic.sdk.CubicOuterClass.internal_static_cobaltspeech_cubic_ModelAttributes_descriptor;
      }

      @java.lang.Override
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.ModelAttributes getDefaultInstanceForType() {
        return com.cobaltspeech.cubic.sdk.CubicOuterClass.ModelAttributes.getDefaultInstance();
      }

      @java.lang.Override
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.ModelAttributes build() {
        com.cobaltspeech.cubic.sdk.CubicOuterClass.ModelAttributes result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.ModelAttributes buildPartial() {
        com.cobaltspeech.cubic.sdk.CubicOuterClass.ModelAttributes result = new com.cobaltspeech.cubic.sdk.CubicOuterClass.ModelAttributes(this);
        result.sampleRate_ = sampleRate_;
        if (contextInfoBuilder_ == null) {
          result.contextInfo_ = contextInfo_;
        } else {
          result.contextInfo_ = contextInfoBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.cobaltspeech.cubic.sdk.CubicOuterClass.ModelAttributes) {
          return mergeFrom((com.cobaltspeech.cubic.sdk.CubicOuterClass.ModelAttributes)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.cobaltspeech.cubic.sdk.CubicOuterClass.ModelAttributes other) {
        if (other == com.cobaltspeech.cubic.sdk.CubicOuterClass.ModelAttributes.getDefaultInstance()) return this;
        if (other.getSampleRate() != 0) {
          setSampleRate(other.getSampleRate());
        }
        if (other.hasContextInfo()) {
          mergeContextInfo(other.getContextInfo());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.cobaltspeech.cubic.sdk.CubicOuterClass.ModelAttributes parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.cobaltspeech.cubic.sdk.CubicOuterClass.ModelAttributes) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int sampleRate_ ;
      /**
       * <pre>
       * Audio sample rate supported by the model
       * </pre>
       *
       * <code>uint32 sample_rate = 1;</code>
       */
      public int getSampleRate() {
        return sampleRate_;
      }
      /**
       * <pre>
       * Audio sample rate supported by the model
       * </pre>
       *
       * <code>uint32 sample_rate = 1;</code>
       */
      public Builder setSampleRate(int value) {
        
        sampleRate_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Audio sample rate supported by the model
       * </pre>
       *
       * <code>uint32 sample_rate = 1;</code>
       */
      public Builder clearSampleRate() {
        
        sampleRate_ = 0;
        onChanged();
        return this;
      }

      private com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextInfo contextInfo_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextInfo, com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextInfo.Builder, com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextInfoOrBuilder> contextInfoBuilder_;
      /**
       * <pre>
       * Attributes specifc to supporting recognition context.
       * </pre>
       *
       * <code>.cobaltspeech.cubic.ContextInfo context_info = 2;</code>
       */
      public boolean hasContextInfo() {
        return contextInfoBuilder_ != null || contextInfo_ != null;
      }
      /**
       * <pre>
       * Attributes specifc to supporting recognition context.
       * </pre>
       *
       * <code>.cobaltspeech.cubic.ContextInfo context_info = 2;</code>
       */
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextInfo getContextInfo() {
        if (contextInfoBuilder_ == null) {
          return contextInfo_ == null ? com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextInfo.getDefaultInstance() : contextInfo_;
        } else {
          return contextInfoBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Attributes specifc to supporting recognition context.
       * </pre>
       *
       * <code>.cobaltspeech.cubic.ContextInfo context_info = 2;</code>
       */
      public Builder setContextInfo(com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextInfo value) {
        if (contextInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          contextInfo_ = value;
          onChanged();
        } else {
          contextInfoBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Attributes specifc to supporting recognition context.
       * </pre>
       *
       * <code>.cobaltspeech.cubic.ContextInfo context_info = 2;</code>
       */
      public Builder setContextInfo(
          com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextInfo.Builder builderForValue) {
        if (contextInfoBuilder_ == null) {
          contextInfo_ = builderForValue.build();
          onChanged();
        } else {
          contextInfoBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Attributes specifc to supporting recognition context.
       * </pre>
       *
       * <code>.cobaltspeech.cubic.ContextInfo context_info = 2;</code>
       */
      public Builder mergeContextInfo(com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextInfo value) {
        if (contextInfoBuilder_ == null) {
          if (contextInfo_ != null) {
            contextInfo_ =
              com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextInfo.newBuilder(contextInfo_).mergeFrom(value).buildPartial();
          } else {
            contextInfo_ = value;
          }
          onChanged();
        } else {
          contextInfoBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Attributes specifc to supporting recognition context.
       * </pre>
       *
       * <code>.cobaltspeech.cubic.ContextInfo context_info = 2;</code>
       */
      public Builder clearContextInfo() {
        if (contextInfoBuilder_ == null) {
          contextInfo_ = null;
          onChanged();
        } else {
          contextInfo_ = null;
          contextInfoBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Attributes specifc to supporting recognition context.
       * </pre>
       *
       * <code>.cobaltspeech.cubic.ContextInfo context_info = 2;</code>
       */
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextInfo.Builder getContextInfoBuilder() {
        
        onChanged();
        return getContextInfoFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Attributes specifc to supporting recognition context.
       * </pre>
       *
       * <code>.cobaltspeech.cubic.ContextInfo context_info = 2;</code>
       */
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextInfoOrBuilder getContextInfoOrBuilder() {
        if (contextInfoBuilder_ != null) {
          return contextInfoBuilder_.getMessageOrBuilder();
        } else {
          return contextInfo_ == null ?
              com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextInfo.getDefaultInstance() : contextInfo_;
        }
      }
      /**
       * <pre>
       * Attributes specifc to supporting recognition context.
       * </pre>
       *
       * <code>.cobaltspeech.cubic.ContextInfo context_info = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextInfo, com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextInfo.Builder, com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextInfoOrBuilder> 
          getContextInfoFieldBuilder() {
        if (contextInfoBuilder_ == null) {
          contextInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextInfo, com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextInfo.Builder, com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextInfoOrBuilder>(
                  getContextInfo(),
                  getParentForChildren(),
                  isClean());
          contextInfo_ = null;
        }
        return contextInfoBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:cobaltspeech.cubic.ModelAttributes)
    }

    // @@protoc_insertion_point(class_scope:cobaltspeech.cubic.ModelAttributes)
    private static final com.cobaltspeech.cubic.sdk.CubicOuterClass.ModelAttributes DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.cobaltspeech.cubic.sdk.CubicOuterClass.ModelAttributes();
    }

    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.ModelAttributes getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ModelAttributes>
        PARSER = new com.google.protobuf.AbstractParser<ModelAttributes>() {
      @java.lang.Override
      public ModelAttributes parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ModelAttributes(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ModelAttributes> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ModelAttributes> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.cobaltspeech.cubic.sdk.CubicOuterClass.ModelAttributes getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ContextInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:cobaltspeech.cubic.ContextInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * If this is set to true, the model supports taking context information into
     * account to aid speech recognition. The information may be sent with with
     * recognition requests via RecognitionContext inside RecognitionConfig.
     * </pre>
     *
     * <code>bool supports_context = 1;</code>
     */
    boolean getSupportsContext();

    /**
     * <pre>
     * A list of tokens (e.g "name", "airport" etc.) that serve has placeholders
     * in the model where a client provided list of phrases or words may be used
     * to aid speech recognition and produce the exact desired recognition output.
     * </pre>
     *
     * <code>repeated string allowed_context_tokens = 2;</code>
     */
    java.util.List<java.lang.String>
        getAllowedContextTokensList();
    /**
     * <pre>
     * A list of tokens (e.g "name", "airport" etc.) that serve has placeholders
     * in the model where a client provided list of phrases or words may be used
     * to aid speech recognition and produce the exact desired recognition output.
     * </pre>
     *
     * <code>repeated string allowed_context_tokens = 2;</code>
     */
    int getAllowedContextTokensCount();
    /**
     * <pre>
     * A list of tokens (e.g "name", "airport" etc.) that serve has placeholders
     * in the model where a client provided list of phrases or words may be used
     * to aid speech recognition and produce the exact desired recognition output.
     * </pre>
     *
     * <code>repeated string allowed_context_tokens = 2;</code>
     */
    java.lang.String getAllowedContextTokens(int index);
    /**
     * <pre>
     * A list of tokens (e.g "name", "airport" etc.) that serve has placeholders
     * in the model where a client provided list of phrases or words may be used
     * to aid speech recognition and produce the exact desired recognition output.
     * </pre>
     *
     * <code>repeated string allowed_context_tokens = 2;</code>
     */
    com.google.protobuf.ByteString
        getAllowedContextTokensBytes(int index);
  }
  /**
   * <pre>
   * Model information specifc to supporting recognition context.
   * </pre>
   *
   * Protobuf type {@code cobaltspeech.cubic.ContextInfo}
   */
  public  static final class ContextInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:cobaltspeech.cubic.ContextInfo)
      ContextInfoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ContextInfo.newBuilder() to construct.
    private ContextInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ContextInfo() {
      allowedContextTokens_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ContextInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              supportsContext_ = input.readBool();
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                allowedContextTokens_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000002;
              }
              allowedContextTokens_.add(s);
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          allowedContextTokens_ = allowedContextTokens_.getUnmodifiableView();
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.cobaltspeech.cubic.sdk.CubicOuterClass.internal_static_cobaltspeech_cubic_ContextInfo_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.cobaltspeech.cubic.sdk.CubicOuterClass.internal_static_cobaltspeech_cubic_ContextInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextInfo.class, com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextInfo.Builder.class);
    }

    private int bitField0_;
    public static final int SUPPORTS_CONTEXT_FIELD_NUMBER = 1;
    private boolean supportsContext_;
    /**
     * <pre>
     * If this is set to true, the model supports taking context information into
     * account to aid speech recognition. The information may be sent with with
     * recognition requests via RecognitionContext inside RecognitionConfig.
     * </pre>
     *
     * <code>bool supports_context = 1;</code>
     */
    public boolean getSupportsContext() {
      return supportsContext_;
    }

    public static final int ALLOWED_CONTEXT_TOKENS_FIELD_NUMBER = 2;
    private com.google.protobuf.LazyStringList allowedContextTokens_;
    /**
     * <pre>
     * A list of tokens (e.g "name", "airport" etc.) that serve has placeholders
     * in the model where a client provided list of phrases or words may be used
     * to aid speech recognition and produce the exact desired recognition output.
     * </pre>
     *
     * <code>repeated string allowed_context_tokens = 2;</code>
     */
    public com.google.protobuf.ProtocolStringList
        getAllowedContextTokensList() {
      return allowedContextTokens_;
    }
    /**
     * <pre>
     * A list of tokens (e.g "name", "airport" etc.) that serve has placeholders
     * in the model where a client provided list of phrases or words may be used
     * to aid speech recognition and produce the exact desired recognition output.
     * </pre>
     *
     * <code>repeated string allowed_context_tokens = 2;</code>
     */
    public int getAllowedContextTokensCount() {
      return allowedContextTokens_.size();
    }
    /**
     * <pre>
     * A list of tokens (e.g "name", "airport" etc.) that serve has placeholders
     * in the model where a client provided list of phrases or words may be used
     * to aid speech recognition and produce the exact desired recognition output.
     * </pre>
     *
     * <code>repeated string allowed_context_tokens = 2;</code>
     */
    public java.lang.String getAllowedContextTokens(int index) {
      return allowedContextTokens_.get(index);
    }
    /**
     * <pre>
     * A list of tokens (e.g "name", "airport" etc.) that serve has placeholders
     * in the model where a client provided list of phrases or words may be used
     * to aid speech recognition and produce the exact desired recognition output.
     * </pre>
     *
     * <code>repeated string allowed_context_tokens = 2;</code>
     */
    public com.google.protobuf.ByteString
        getAllowedContextTokensBytes(int index) {
      return allowedContextTokens_.getByteString(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (supportsContext_ != false) {
        output.writeBool(1, supportsContext_);
      }
      for (int i = 0; i < allowedContextTokens_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, allowedContextTokens_.getRaw(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (supportsContext_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, supportsContext_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < allowedContextTokens_.size(); i++) {
          dataSize += computeStringSizeNoTag(allowedContextTokens_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getAllowedContextTokensList().size();
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextInfo)) {
        return super.equals(obj);
      }
      com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextInfo other = (com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextInfo) obj;

      if (getSupportsContext()
          != other.getSupportsContext()) return false;
      if (!getAllowedContextTokensList()
          .equals(other.getAllowedContextTokensList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + SUPPORTS_CONTEXT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getSupportsContext());
      if (getAllowedContextTokensCount() > 0) {
        hash = (37 * hash) + ALLOWED_CONTEXT_TOKENS_FIELD_NUMBER;
        hash = (53 * hash) + getAllowedContextTokensList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Model information specifc to supporting recognition context.
     * </pre>
     *
     * Protobuf type {@code cobaltspeech.cubic.ContextInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:cobaltspeech.cubic.ContextInfo)
        com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.cobaltspeech.cubic.sdk.CubicOuterClass.internal_static_cobaltspeech_cubic_ContextInfo_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.cobaltspeech.cubic.sdk.CubicOuterClass.internal_static_cobaltspeech_cubic_ContextInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextInfo.class, com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextInfo.Builder.class);
      }

      // Construct using com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        supportsContext_ = false;

        allowedContextTokens_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.cobaltspeech.cubic.sdk.CubicOuterClass.internal_static_cobaltspeech_cubic_ContextInfo_descriptor;
      }

      @java.lang.Override
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextInfo getDefaultInstanceForType() {
        return com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextInfo.getDefaultInstance();
      }

      @java.lang.Override
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextInfo build() {
        com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextInfo buildPartial() {
        com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextInfo result = new com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.supportsContext_ = supportsContext_;
        if (((bitField0_ & 0x00000002) != 0)) {
          allowedContextTokens_ = allowedContextTokens_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.allowedContextTokens_ = allowedContextTokens_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextInfo) {
          return mergeFrom((com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextInfo other) {
        if (other == com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextInfo.getDefaultInstance()) return this;
        if (other.getSupportsContext() != false) {
          setSupportsContext(other.getSupportsContext());
        }
        if (!other.allowedContextTokens_.isEmpty()) {
          if (allowedContextTokens_.isEmpty()) {
            allowedContextTokens_ = other.allowedContextTokens_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureAllowedContextTokensIsMutable();
            allowedContextTokens_.addAll(other.allowedContextTokens_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextInfo) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private boolean supportsContext_ ;
      /**
       * <pre>
       * If this is set to true, the model supports taking context information into
       * account to aid speech recognition. The information may be sent with with
       * recognition requests via RecognitionContext inside RecognitionConfig.
       * </pre>
       *
       * <code>bool supports_context = 1;</code>
       */
      public boolean getSupportsContext() {
        return supportsContext_;
      }
      /**
       * <pre>
       * If this is set to true, the model supports taking context information into
       * account to aid speech recognition. The information may be sent with with
       * recognition requests via RecognitionContext inside RecognitionConfig.
       * </pre>
       *
       * <code>bool supports_context = 1;</code>
       */
      public Builder setSupportsContext(boolean value) {
        
        supportsContext_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * If this is set to true, the model supports taking context information into
       * account to aid speech recognition. The information may be sent with with
       * recognition requests via RecognitionContext inside RecognitionConfig.
       * </pre>
       *
       * <code>bool supports_context = 1;</code>
       */
      public Builder clearSupportsContext() {
        
        supportsContext_ = false;
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList allowedContextTokens_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureAllowedContextTokensIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          allowedContextTokens_ = new com.google.protobuf.LazyStringArrayList(allowedContextTokens_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <pre>
       * A list of tokens (e.g "name", "airport" etc.) that serve has placeholders
       * in the model where a client provided list of phrases or words may be used
       * to aid speech recognition and produce the exact desired recognition output.
       * </pre>
       *
       * <code>repeated string allowed_context_tokens = 2;</code>
       */
      public com.google.protobuf.ProtocolStringList
          getAllowedContextTokensList() {
        return allowedContextTokens_.getUnmodifiableView();
      }
      /**
       * <pre>
       * A list of tokens (e.g "name", "airport" etc.) that serve has placeholders
       * in the model where a client provided list of phrases or words may be used
       * to aid speech recognition and produce the exact desired recognition output.
       * </pre>
       *
       * <code>repeated string allowed_context_tokens = 2;</code>
       */
      public int getAllowedContextTokensCount() {
        return allowedContextTokens_.size();
      }
      /**
       * <pre>
       * A list of tokens (e.g "name", "airport" etc.) that serve has placeholders
       * in the model where a client provided list of phrases or words may be used
       * to aid speech recognition and produce the exact desired recognition output.
       * </pre>
       *
       * <code>repeated string allowed_context_tokens = 2;</code>
       */
      public java.lang.String getAllowedContextTokens(int index) {
        return allowedContextTokens_.get(index);
      }
      /**
       * <pre>
       * A list of tokens (e.g "name", "airport" etc.) that serve has placeholders
       * in the model where a client provided list of phrases or words may be used
       * to aid speech recognition and produce the exact desired recognition output.
       * </pre>
       *
       * <code>repeated string allowed_context_tokens = 2;</code>
       */
      public com.google.protobuf.ByteString
          getAllowedContextTokensBytes(int index) {
        return allowedContextTokens_.getByteString(index);
      }
      /**
       * <pre>
       * A list of tokens (e.g "name", "airport" etc.) that serve has placeholders
       * in the model where a client provided list of phrases or words may be used
       * to aid speech recognition and produce the exact desired recognition output.
       * </pre>
       *
       * <code>repeated string allowed_context_tokens = 2;</code>
       */
      public Builder setAllowedContextTokens(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureAllowedContextTokensIsMutable();
        allowedContextTokens_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A list of tokens (e.g "name", "airport" etc.) that serve has placeholders
       * in the model where a client provided list of phrases or words may be used
       * to aid speech recognition and produce the exact desired recognition output.
       * </pre>
       *
       * <code>repeated string allowed_context_tokens = 2;</code>
       */
      public Builder addAllowedContextTokens(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureAllowedContextTokensIsMutable();
        allowedContextTokens_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A list of tokens (e.g "name", "airport" etc.) that serve has placeholders
       * in the model where a client provided list of phrases or words may be used
       * to aid speech recognition and produce the exact desired recognition output.
       * </pre>
       *
       * <code>repeated string allowed_context_tokens = 2;</code>
       */
      public Builder addAllAllowedContextTokens(
          java.lang.Iterable<java.lang.String> values) {
        ensureAllowedContextTokensIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, allowedContextTokens_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A list of tokens (e.g "name", "airport" etc.) that serve has placeholders
       * in the model where a client provided list of phrases or words may be used
       * to aid speech recognition and produce the exact desired recognition output.
       * </pre>
       *
       * <code>repeated string allowed_context_tokens = 2;</code>
       */
      public Builder clearAllowedContextTokens() {
        allowedContextTokens_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A list of tokens (e.g "name", "airport" etc.) that serve has placeholders
       * in the model where a client provided list of phrases or words may be used
       * to aid speech recognition and produce the exact desired recognition output.
       * </pre>
       *
       * <code>repeated string allowed_context_tokens = 2;</code>
       */
      public Builder addAllowedContextTokensBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureAllowedContextTokensIsMutable();
        allowedContextTokens_.add(value);
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:cobaltspeech.cubic.ContextInfo)
    }

    // @@protoc_insertion_point(class_scope:cobaltspeech.cubic.ContextInfo)
    private static final com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextInfo();
    }

    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ContextInfo>
        PARSER = new com.google.protobuf.AbstractParser<ContextInfo>() {
      @java.lang.Override
      public ContextInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ContextInfo(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ContextInfo> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ContextInfo> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.cobaltspeech.cubic.sdk.CubicOuterClass.ContextInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RecognitionResultOrBuilder extends
      // @@protoc_insertion_point(interface_extends:cobaltspeech.cubic.RecognitionResult)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * An n-best list of recognition hypotheses alternatives
     * </pre>
     *
     * <code>repeated .cobaltspeech.cubic.RecognitionAlternative alternatives = 1;</code>
     */
    java.util.List<com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAlternative> 
        getAlternativesList();
    /**
     * <pre>
     * An n-best list of recognition hypotheses alternatives
     * </pre>
     *
     * <code>repeated .cobaltspeech.cubic.RecognitionAlternative alternatives = 1;</code>
     */
    com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAlternative getAlternatives(int index);
    /**
     * <pre>
     * An n-best list of recognition hypotheses alternatives
     * </pre>
     *
     * <code>repeated .cobaltspeech.cubic.RecognitionAlternative alternatives = 1;</code>
     */
    int getAlternativesCount();
    /**
     * <pre>
     * An n-best list of recognition hypotheses alternatives
     * </pre>
     *
     * <code>repeated .cobaltspeech.cubic.RecognitionAlternative alternatives = 1;</code>
     */
    java.util.List<? extends com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAlternativeOrBuilder> 
        getAlternativesOrBuilderList();
    /**
     * <pre>
     * An n-best list of recognition hypotheses alternatives
     * </pre>
     *
     * <code>repeated .cobaltspeech.cubic.RecognitionAlternative alternatives = 1;</code>
     */
    com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAlternativeOrBuilder getAlternativesOrBuilder(
        int index);

    /**
     * <pre>
     * If this is set to true, it denotes that the result is an interim partial
     * result, and could change after more audio is processed.  If unset, or set
     * to false, it denotes that this is a final result and will not change.
     * Servers are not required to implement support for returning partial
     * results, and clients should generally not depend on their availability.
     * </pre>
     *
     * <code>bool is_partial = 2;</code>
     */
    boolean getIsPartial();

    /**
     * <pre>
     * If `enable_confusion_network` was set to true in the `RecognitionConfig`,
     * and if the model supports it, a confusion network will be available in the
     * results.
     * </pre>
     *
     * <code>.cobaltspeech.cubic.RecognitionConfusionNetwork cnet = 3;</code>
     */
    boolean hasCnet();
    /**
     * <pre>
     * If `enable_confusion_network` was set to true in the `RecognitionConfig`,
     * and if the model supports it, a confusion network will be available in the
     * results.
     * </pre>
     *
     * <code>.cobaltspeech.cubic.RecognitionConfusionNetwork cnet = 3;</code>
     */
    com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfusionNetwork getCnet();
    /**
     * <pre>
     * If `enable_confusion_network` was set to true in the `RecognitionConfig`,
     * and if the model supports it, a confusion network will be available in the
     * results.
     * </pre>
     *
     * <code>.cobaltspeech.cubic.RecognitionConfusionNetwork cnet = 3;</code>
     */
    com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfusionNetworkOrBuilder getCnetOrBuilder();

    /**
     * <pre>
     * Channel of the audio file that this result was transcribed from.  For a
     * mono file, or RAW_LINEAR16 input, this will be set to 0.
     * </pre>
     *
     * <code>uint32 audio_channel = 4;</code>
     */
    int getAudioChannel();
  }
  /**
   * <pre>
   * A recognition result corresponding to a portion of audio.
   * </pre>
   *
   * Protobuf type {@code cobaltspeech.cubic.RecognitionResult}
   */
  public  static final class RecognitionResult extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:cobaltspeech.cubic.RecognitionResult)
      RecognitionResultOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use RecognitionResult.newBuilder() to construct.
    private RecognitionResult(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RecognitionResult() {
      alternatives_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private RecognitionResult(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                alternatives_ = new java.util.ArrayList<com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAlternative>();
                mutable_bitField0_ |= 0x00000001;
              }
              alternatives_.add(
                  input.readMessage(com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAlternative.parser(), extensionRegistry));
              break;
            }
            case 16: {

              isPartial_ = input.readBool();
              break;
            }
            case 26: {
              com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfusionNetwork.Builder subBuilder = null;
              if (cnet_ != null) {
                subBuilder = cnet_.toBuilder();
              }
              cnet_ = input.readMessage(com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfusionNetwork.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(cnet_);
                cnet_ = subBuilder.buildPartial();
              }

              break;
            }
            case 32: {

              audioChannel_ = input.readUInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          alternatives_ = java.util.Collections.unmodifiableList(alternatives_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.cobaltspeech.cubic.sdk.CubicOuterClass.internal_static_cobaltspeech_cubic_RecognitionResult_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.cobaltspeech.cubic.sdk.CubicOuterClass.internal_static_cobaltspeech_cubic_RecognitionResult_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionResult.class, com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionResult.Builder.class);
    }

    private int bitField0_;
    public static final int ALTERNATIVES_FIELD_NUMBER = 1;
    private java.util.List<com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAlternative> alternatives_;
    /**
     * <pre>
     * An n-best list of recognition hypotheses alternatives
     * </pre>
     *
     * <code>repeated .cobaltspeech.cubic.RecognitionAlternative alternatives = 1;</code>
     */
    public java.util.List<com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAlternative> getAlternativesList() {
      return alternatives_;
    }
    /**
     * <pre>
     * An n-best list of recognition hypotheses alternatives
     * </pre>
     *
     * <code>repeated .cobaltspeech.cubic.RecognitionAlternative alternatives = 1;</code>
     */
    public java.util.List<? extends com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAlternativeOrBuilder> 
        getAlternativesOrBuilderList() {
      return alternatives_;
    }
    /**
     * <pre>
     * An n-best list of recognition hypotheses alternatives
     * </pre>
     *
     * <code>repeated .cobaltspeech.cubic.RecognitionAlternative alternatives = 1;</code>
     */
    public int getAlternativesCount() {
      return alternatives_.size();
    }
    /**
     * <pre>
     * An n-best list of recognition hypotheses alternatives
     * </pre>
     *
     * <code>repeated .cobaltspeech.cubic.RecognitionAlternative alternatives = 1;</code>
     */
    public com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAlternative getAlternatives(int index) {
      return alternatives_.get(index);
    }
    /**
     * <pre>
     * An n-best list of recognition hypotheses alternatives
     * </pre>
     *
     * <code>repeated .cobaltspeech.cubic.RecognitionAlternative alternatives = 1;</code>
     */
    public com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAlternativeOrBuilder getAlternativesOrBuilder(
        int index) {
      return alternatives_.get(index);
    }

    public static final int IS_PARTIAL_FIELD_NUMBER = 2;
    private boolean isPartial_;
    /**
     * <pre>
     * If this is set to true, it denotes that the result is an interim partial
     * result, and could change after more audio is processed.  If unset, or set
     * to false, it denotes that this is a final result and will not change.
     * Servers are not required to implement support for returning partial
     * results, and clients should generally not depend on their availability.
     * </pre>
     *
     * <code>bool is_partial = 2;</code>
     */
    public boolean getIsPartial() {
      return isPartial_;
    }

    public static final int CNET_FIELD_NUMBER = 3;
    private com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfusionNetwork cnet_;
    /**
     * <pre>
     * If `enable_confusion_network` was set to true in the `RecognitionConfig`,
     * and if the model supports it, a confusion network will be available in the
     * results.
     * </pre>
     *
     * <code>.cobaltspeech.cubic.RecognitionConfusionNetwork cnet = 3;</code>
     */
    public boolean hasCnet() {
      return cnet_ != null;
    }
    /**
     * <pre>
     * If `enable_confusion_network` was set to true in the `RecognitionConfig`,
     * and if the model supports it, a confusion network will be available in the
     * results.
     * </pre>
     *
     * <code>.cobaltspeech.cubic.RecognitionConfusionNetwork cnet = 3;</code>
     */
    public com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfusionNetwork getCnet() {
      return cnet_ == null ? com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfusionNetwork.getDefaultInstance() : cnet_;
    }
    /**
     * <pre>
     * If `enable_confusion_network` was set to true in the `RecognitionConfig`,
     * and if the model supports it, a confusion network will be available in the
     * results.
     * </pre>
     *
     * <code>.cobaltspeech.cubic.RecognitionConfusionNetwork cnet = 3;</code>
     */
    public com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfusionNetworkOrBuilder getCnetOrBuilder() {
      return getCnet();
    }

    public static final int AUDIO_CHANNEL_FIELD_NUMBER = 4;
    private int audioChannel_;
    /**
     * <pre>
     * Channel of the audio file that this result was transcribed from.  For a
     * mono file, or RAW_LINEAR16 input, this will be set to 0.
     * </pre>
     *
     * <code>uint32 audio_channel = 4;</code>
     */
    public int getAudioChannel() {
      return audioChannel_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < alternatives_.size(); i++) {
        output.writeMessage(1, alternatives_.get(i));
      }
      if (isPartial_ != false) {
        output.writeBool(2, isPartial_);
      }
      if (cnet_ != null) {
        output.writeMessage(3, getCnet());
      }
      if (audioChannel_ != 0) {
        output.writeUInt32(4, audioChannel_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < alternatives_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, alternatives_.get(i));
      }
      if (isPartial_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, isPartial_);
      }
      if (cnet_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getCnet());
      }
      if (audioChannel_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, audioChannel_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionResult)) {
        return super.equals(obj);
      }
      com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionResult other = (com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionResult) obj;

      if (!getAlternativesList()
          .equals(other.getAlternativesList())) return false;
      if (getIsPartial()
          != other.getIsPartial()) return false;
      if (hasCnet() != other.hasCnet()) return false;
      if (hasCnet()) {
        if (!getCnet()
            .equals(other.getCnet())) return false;
      }
      if (getAudioChannel()
          != other.getAudioChannel()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getAlternativesCount() > 0) {
        hash = (37 * hash) + ALTERNATIVES_FIELD_NUMBER;
        hash = (53 * hash) + getAlternativesList().hashCode();
      }
      hash = (37 * hash) + IS_PARTIAL_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getIsPartial());
      if (hasCnet()) {
        hash = (37 * hash) + CNET_FIELD_NUMBER;
        hash = (53 * hash) + getCnet().hashCode();
      }
      hash = (37 * hash) + AUDIO_CHANNEL_FIELD_NUMBER;
      hash = (53 * hash) + getAudioChannel();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionResult parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionResult parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionResult parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionResult parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionResult parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionResult parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionResult parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionResult parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionResult parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionResult parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionResult parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionResult parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionResult prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * A recognition result corresponding to a portion of audio.
     * </pre>
     *
     * Protobuf type {@code cobaltspeech.cubic.RecognitionResult}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:cobaltspeech.cubic.RecognitionResult)
        com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionResultOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.cobaltspeech.cubic.sdk.CubicOuterClass.internal_static_cobaltspeech_cubic_RecognitionResult_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.cobaltspeech.cubic.sdk.CubicOuterClass.internal_static_cobaltspeech_cubic_RecognitionResult_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionResult.class, com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionResult.Builder.class);
      }

      // Construct using com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionResult.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getAlternativesFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (alternativesBuilder_ == null) {
          alternatives_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          alternativesBuilder_.clear();
        }
        isPartial_ = false;

        if (cnetBuilder_ == null) {
          cnet_ = null;
        } else {
          cnet_ = null;
          cnetBuilder_ = null;
        }
        audioChannel_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.cobaltspeech.cubic.sdk.CubicOuterClass.internal_static_cobaltspeech_cubic_RecognitionResult_descriptor;
      }

      @java.lang.Override
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionResult getDefaultInstanceForType() {
        return com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionResult.getDefaultInstance();
      }

      @java.lang.Override
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionResult build() {
        com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionResult result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionResult buildPartial() {
        com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionResult result = new com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionResult(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (alternativesBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            alternatives_ = java.util.Collections.unmodifiableList(alternatives_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.alternatives_ = alternatives_;
        } else {
          result.alternatives_ = alternativesBuilder_.build();
        }
        result.isPartial_ = isPartial_;
        if (cnetBuilder_ == null) {
          result.cnet_ = cnet_;
        } else {
          result.cnet_ = cnetBuilder_.build();
        }
        result.audioChannel_ = audioChannel_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionResult) {
          return mergeFrom((com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionResult)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionResult other) {
        if (other == com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionResult.getDefaultInstance()) return this;
        if (alternativesBuilder_ == null) {
          if (!other.alternatives_.isEmpty()) {
            if (alternatives_.isEmpty()) {
              alternatives_ = other.alternatives_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureAlternativesIsMutable();
              alternatives_.addAll(other.alternatives_);
            }
            onChanged();
          }
        } else {
          if (!other.alternatives_.isEmpty()) {
            if (alternativesBuilder_.isEmpty()) {
              alternativesBuilder_.dispose();
              alternativesBuilder_ = null;
              alternatives_ = other.alternatives_;
              bitField0_ = (bitField0_ & ~0x00000001);
              alternativesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getAlternativesFieldBuilder() : null;
            } else {
              alternativesBuilder_.addAllMessages(other.alternatives_);
            }
          }
        }
        if (other.getIsPartial() != false) {
          setIsPartial(other.getIsPartial());
        }
        if (other.hasCnet()) {
          mergeCnet(other.getCnet());
        }
        if (other.getAudioChannel() != 0) {
          setAudioChannel(other.getAudioChannel());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionResult parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionResult) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAlternative> alternatives_ =
        java.util.Collections.emptyList();
      private void ensureAlternativesIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          alternatives_ = new java.util.ArrayList<com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAlternative>(alternatives_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAlternative, com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAlternative.Builder, com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAlternativeOrBuilder> alternativesBuilder_;

      /**
       * <pre>
       * An n-best list of recognition hypotheses alternatives
       * </pre>
       *
       * <code>repeated .cobaltspeech.cubic.RecognitionAlternative alternatives = 1;</code>
       */
      public java.util.List<com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAlternative> getAlternativesList() {
        if (alternativesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(alternatives_);
        } else {
          return alternativesBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * An n-best list of recognition hypotheses alternatives
       * </pre>
       *
       * <code>repeated .cobaltspeech.cubic.RecognitionAlternative alternatives = 1;</code>
       */
      public int getAlternativesCount() {
        if (alternativesBuilder_ == null) {
          return alternatives_.size();
        } else {
          return alternativesBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * An n-best list of recognition hypotheses alternatives
       * </pre>
       *
       * <code>repeated .cobaltspeech.cubic.RecognitionAlternative alternatives = 1;</code>
       */
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAlternative getAlternatives(int index) {
        if (alternativesBuilder_ == null) {
          return alternatives_.get(index);
        } else {
          return alternativesBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * An n-best list of recognition hypotheses alternatives
       * </pre>
       *
       * <code>repeated .cobaltspeech.cubic.RecognitionAlternative alternatives = 1;</code>
       */
      public Builder setAlternatives(
          int index, com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAlternative value) {
        if (alternativesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAlternativesIsMutable();
          alternatives_.set(index, value);
          onChanged();
        } else {
          alternativesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * An n-best list of recognition hypotheses alternatives
       * </pre>
       *
       * <code>repeated .cobaltspeech.cubic.RecognitionAlternative alternatives = 1;</code>
       */
      public Builder setAlternatives(
          int index, com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAlternative.Builder builderForValue) {
        if (alternativesBuilder_ == null) {
          ensureAlternativesIsMutable();
          alternatives_.set(index, builderForValue.build());
          onChanged();
        } else {
          alternativesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * An n-best list of recognition hypotheses alternatives
       * </pre>
       *
       * <code>repeated .cobaltspeech.cubic.RecognitionAlternative alternatives = 1;</code>
       */
      public Builder addAlternatives(com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAlternative value) {
        if (alternativesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAlternativesIsMutable();
          alternatives_.add(value);
          onChanged();
        } else {
          alternativesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * An n-best list of recognition hypotheses alternatives
       * </pre>
       *
       * <code>repeated .cobaltspeech.cubic.RecognitionAlternative alternatives = 1;</code>
       */
      public Builder addAlternatives(
          int index, com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAlternative value) {
        if (alternativesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAlternativesIsMutable();
          alternatives_.add(index, value);
          onChanged();
        } else {
          alternativesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * An n-best list of recognition hypotheses alternatives
       * </pre>
       *
       * <code>repeated .cobaltspeech.cubic.RecognitionAlternative alternatives = 1;</code>
       */
      public Builder addAlternatives(
          com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAlternative.Builder builderForValue) {
        if (alternativesBuilder_ == null) {
          ensureAlternativesIsMutable();
          alternatives_.add(builderForValue.build());
          onChanged();
        } else {
          alternativesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * An n-best list of recognition hypotheses alternatives
       * </pre>
       *
       * <code>repeated .cobaltspeech.cubic.RecognitionAlternative alternatives = 1;</code>
       */
      public Builder addAlternatives(
          int index, com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAlternative.Builder builderForValue) {
        if (alternativesBuilder_ == null) {
          ensureAlternativesIsMutable();
          alternatives_.add(index, builderForValue.build());
          onChanged();
        } else {
          alternativesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * An n-best list of recognition hypotheses alternatives
       * </pre>
       *
       * <code>repeated .cobaltspeech.cubic.RecognitionAlternative alternatives = 1;</code>
       */
      public Builder addAllAlternatives(
          java.lang.Iterable<? extends com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAlternative> values) {
        if (alternativesBuilder_ == null) {
          ensureAlternativesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, alternatives_);
          onChanged();
        } else {
          alternativesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * An n-best list of recognition hypotheses alternatives
       * </pre>
       *
       * <code>repeated .cobaltspeech.cubic.RecognitionAlternative alternatives = 1;</code>
       */
      public Builder clearAlternatives() {
        if (alternativesBuilder_ == null) {
          alternatives_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          alternativesBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * An n-best list of recognition hypotheses alternatives
       * </pre>
       *
       * <code>repeated .cobaltspeech.cubic.RecognitionAlternative alternatives = 1;</code>
       */
      public Builder removeAlternatives(int index) {
        if (alternativesBuilder_ == null) {
          ensureAlternativesIsMutable();
          alternatives_.remove(index);
          onChanged();
        } else {
          alternativesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * An n-best list of recognition hypotheses alternatives
       * </pre>
       *
       * <code>repeated .cobaltspeech.cubic.RecognitionAlternative alternatives = 1;</code>
       */
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAlternative.Builder getAlternativesBuilder(
          int index) {
        return getAlternativesFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * An n-best list of recognition hypotheses alternatives
       * </pre>
       *
       * <code>repeated .cobaltspeech.cubic.RecognitionAlternative alternatives = 1;</code>
       */
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAlternativeOrBuilder getAlternativesOrBuilder(
          int index) {
        if (alternativesBuilder_ == null) {
          return alternatives_.get(index);  } else {
          return alternativesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * An n-best list of recognition hypotheses alternatives
       * </pre>
       *
       * <code>repeated .cobaltspeech.cubic.RecognitionAlternative alternatives = 1;</code>
       */
      public java.util.List<? extends com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAlternativeOrBuilder> 
           getAlternativesOrBuilderList() {
        if (alternativesBuilder_ != null) {
          return alternativesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(alternatives_);
        }
      }
      /**
       * <pre>
       * An n-best list of recognition hypotheses alternatives
       * </pre>
       *
       * <code>repeated .cobaltspeech.cubic.RecognitionAlternative alternatives = 1;</code>
       */
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAlternative.Builder addAlternativesBuilder() {
        return getAlternativesFieldBuilder().addBuilder(
            com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAlternative.getDefaultInstance());
      }
      /**
       * <pre>
       * An n-best list of recognition hypotheses alternatives
       * </pre>
       *
       * <code>repeated .cobaltspeech.cubic.RecognitionAlternative alternatives = 1;</code>
       */
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAlternative.Builder addAlternativesBuilder(
          int index) {
        return getAlternativesFieldBuilder().addBuilder(
            index, com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAlternative.getDefaultInstance());
      }
      /**
       * <pre>
       * An n-best list of recognition hypotheses alternatives
       * </pre>
       *
       * <code>repeated .cobaltspeech.cubic.RecognitionAlternative alternatives = 1;</code>
       */
      public java.util.List<com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAlternative.Builder> 
           getAlternativesBuilderList() {
        return getAlternativesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAlternative, com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAlternative.Builder, com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAlternativeOrBuilder> 
          getAlternativesFieldBuilder() {
        if (alternativesBuilder_ == null) {
          alternativesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAlternative, com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAlternative.Builder, com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAlternativeOrBuilder>(
                  alternatives_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          alternatives_ = null;
        }
        return alternativesBuilder_;
      }

      private boolean isPartial_ ;
      /**
       * <pre>
       * If this is set to true, it denotes that the result is an interim partial
       * result, and could change after more audio is processed.  If unset, or set
       * to false, it denotes that this is a final result and will not change.
       * Servers are not required to implement support for returning partial
       * results, and clients should generally not depend on their availability.
       * </pre>
       *
       * <code>bool is_partial = 2;</code>
       */
      public boolean getIsPartial() {
        return isPartial_;
      }
      /**
       * <pre>
       * If this is set to true, it denotes that the result is an interim partial
       * result, and could change after more audio is processed.  If unset, or set
       * to false, it denotes that this is a final result and will not change.
       * Servers are not required to implement support for returning partial
       * results, and clients should generally not depend on their availability.
       * </pre>
       *
       * <code>bool is_partial = 2;</code>
       */
      public Builder setIsPartial(boolean value) {
        
        isPartial_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * If this is set to true, it denotes that the result is an interim partial
       * result, and could change after more audio is processed.  If unset, or set
       * to false, it denotes that this is a final result and will not change.
       * Servers are not required to implement support for returning partial
       * results, and clients should generally not depend on their availability.
       * </pre>
       *
       * <code>bool is_partial = 2;</code>
       */
      public Builder clearIsPartial() {
        
        isPartial_ = false;
        onChanged();
        return this;
      }

      private com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfusionNetwork cnet_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfusionNetwork, com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfusionNetwork.Builder, com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfusionNetworkOrBuilder> cnetBuilder_;
      /**
       * <pre>
       * If `enable_confusion_network` was set to true in the `RecognitionConfig`,
       * and if the model supports it, a confusion network will be available in the
       * results.
       * </pre>
       *
       * <code>.cobaltspeech.cubic.RecognitionConfusionNetwork cnet = 3;</code>
       */
      public boolean hasCnet() {
        return cnetBuilder_ != null || cnet_ != null;
      }
      /**
       * <pre>
       * If `enable_confusion_network` was set to true in the `RecognitionConfig`,
       * and if the model supports it, a confusion network will be available in the
       * results.
       * </pre>
       *
       * <code>.cobaltspeech.cubic.RecognitionConfusionNetwork cnet = 3;</code>
       */
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfusionNetwork getCnet() {
        if (cnetBuilder_ == null) {
          return cnet_ == null ? com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfusionNetwork.getDefaultInstance() : cnet_;
        } else {
          return cnetBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * If `enable_confusion_network` was set to true in the `RecognitionConfig`,
       * and if the model supports it, a confusion network will be available in the
       * results.
       * </pre>
       *
       * <code>.cobaltspeech.cubic.RecognitionConfusionNetwork cnet = 3;</code>
       */
      public Builder setCnet(com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfusionNetwork value) {
        if (cnetBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          cnet_ = value;
          onChanged();
        } else {
          cnetBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * If `enable_confusion_network` was set to true in the `RecognitionConfig`,
       * and if the model supports it, a confusion network will be available in the
       * results.
       * </pre>
       *
       * <code>.cobaltspeech.cubic.RecognitionConfusionNetwork cnet = 3;</code>
       */
      public Builder setCnet(
          com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfusionNetwork.Builder builderForValue) {
        if (cnetBuilder_ == null) {
          cnet_ = builderForValue.build();
          onChanged();
        } else {
          cnetBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * If `enable_confusion_network` was set to true in the `RecognitionConfig`,
       * and if the model supports it, a confusion network will be available in the
       * results.
       * </pre>
       *
       * <code>.cobaltspeech.cubic.RecognitionConfusionNetwork cnet = 3;</code>
       */
      public Builder mergeCnet(com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfusionNetwork value) {
        if (cnetBuilder_ == null) {
          if (cnet_ != null) {
            cnet_ =
              com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfusionNetwork.newBuilder(cnet_).mergeFrom(value).buildPartial();
          } else {
            cnet_ = value;
          }
          onChanged();
        } else {
          cnetBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * If `enable_confusion_network` was set to true in the `RecognitionConfig`,
       * and if the model supports it, a confusion network will be available in the
       * results.
       * </pre>
       *
       * <code>.cobaltspeech.cubic.RecognitionConfusionNetwork cnet = 3;</code>
       */
      public Builder clearCnet() {
        if (cnetBuilder_ == null) {
          cnet_ = null;
          onChanged();
        } else {
          cnet_ = null;
          cnetBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * If `enable_confusion_network` was set to true in the `RecognitionConfig`,
       * and if the model supports it, a confusion network will be available in the
       * results.
       * </pre>
       *
       * <code>.cobaltspeech.cubic.RecognitionConfusionNetwork cnet = 3;</code>
       */
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfusionNetwork.Builder getCnetBuilder() {
        
        onChanged();
        return getCnetFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * If `enable_confusion_network` was set to true in the `RecognitionConfig`,
       * and if the model supports it, a confusion network will be available in the
       * results.
       * </pre>
       *
       * <code>.cobaltspeech.cubic.RecognitionConfusionNetwork cnet = 3;</code>
       */
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfusionNetworkOrBuilder getCnetOrBuilder() {
        if (cnetBuilder_ != null) {
          return cnetBuilder_.getMessageOrBuilder();
        } else {
          return cnet_ == null ?
              com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfusionNetwork.getDefaultInstance() : cnet_;
        }
      }
      /**
       * <pre>
       * If `enable_confusion_network` was set to true in the `RecognitionConfig`,
       * and if the model supports it, a confusion network will be available in the
       * results.
       * </pre>
       *
       * <code>.cobaltspeech.cubic.RecognitionConfusionNetwork cnet = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfusionNetwork, com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfusionNetwork.Builder, com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfusionNetworkOrBuilder> 
          getCnetFieldBuilder() {
        if (cnetBuilder_ == null) {
          cnetBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfusionNetwork, com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfusionNetwork.Builder, com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfusionNetworkOrBuilder>(
                  getCnet(),
                  getParentForChildren(),
                  isClean());
          cnet_ = null;
        }
        return cnetBuilder_;
      }

      private int audioChannel_ ;
      /**
       * <pre>
       * Channel of the audio file that this result was transcribed from.  For a
       * mono file, or RAW_LINEAR16 input, this will be set to 0.
       * </pre>
       *
       * <code>uint32 audio_channel = 4;</code>
       */
      public int getAudioChannel() {
        return audioChannel_;
      }
      /**
       * <pre>
       * Channel of the audio file that this result was transcribed from.  For a
       * mono file, or RAW_LINEAR16 input, this will be set to 0.
       * </pre>
       *
       * <code>uint32 audio_channel = 4;</code>
       */
      public Builder setAudioChannel(int value) {
        
        audioChannel_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Channel of the audio file that this result was transcribed from.  For a
       * mono file, or RAW_LINEAR16 input, this will be set to 0.
       * </pre>
       *
       * <code>uint32 audio_channel = 4;</code>
       */
      public Builder clearAudioChannel() {
        
        audioChannel_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:cobaltspeech.cubic.RecognitionResult)
    }

    // @@protoc_insertion_point(class_scope:cobaltspeech.cubic.RecognitionResult)
    private static final com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionResult DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionResult();
    }

    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionResult getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RecognitionResult>
        PARSER = new com.google.protobuf.AbstractParser<RecognitionResult>() {
      @java.lang.Override
      public RecognitionResult parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RecognitionResult(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RecognitionResult> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RecognitionResult> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionResult getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RecognitionAlternativeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:cobaltspeech.cubic.RecognitionAlternative)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Text representing the transcription of the words that the user spoke.
     * The transcript will be formatted according to the servers formatting
     * configuration. If you want the raw transcript, please see the field
     * `raw_transcript`.  If the server is configured to not use any formatting,
     * then this field will contain the raw transcript.
     * As an example, if the spoken utterance was "four people", and the
     * server was configured to format numbers, this field would be set to
     * "4 people".
     * </pre>
     *
     * <code>string transcript = 1;</code>
     */
    java.lang.String getTranscript();
    /**
     * <pre>
     * Text representing the transcription of the words that the user spoke.
     * The transcript will be formatted according to the servers formatting
     * configuration. If you want the raw transcript, please see the field
     * `raw_transcript`.  If the server is configured to not use any formatting,
     * then this field will contain the raw transcript.
     * As an example, if the spoken utterance was "four people", and the
     * server was configured to format numbers, this field would be set to
     * "4 people".
     * </pre>
     *
     * <code>string transcript = 1;</code>
     */
    com.google.protobuf.ByteString
        getTranscriptBytes();

    /**
     * <pre>
     * Text representing the transcription of the words that the user spoke,
     * without any formatting.  This field will be populated only the config
     * `RecognitionConfig.enable_raw_transcript` is set to true. Otherwise this
     * field will be an empty string. If you want the formatted transcript, please
     * see the field `transcript`.
     * As an example, if the spoken utterance was `here are four words`,
     * this field would be set to "HERE ARE FOUR WORDS".
     * </pre>
     *
     * <code>string raw_transcript = 6;</code>
     */
    java.lang.String getRawTranscript();
    /**
     * <pre>
     * Text representing the transcription of the words that the user spoke,
     * without any formatting.  This field will be populated only the config
     * `RecognitionConfig.enable_raw_transcript` is set to true. Otherwise this
     * field will be an empty string. If you want the formatted transcript, please
     * see the field `transcript`.
     * As an example, if the spoken utterance was `here are four words`,
     * this field would be set to "HERE ARE FOUR WORDS".
     * </pre>
     *
     * <code>string raw_transcript = 6;</code>
     */
    com.google.protobuf.ByteString
        getRawTranscriptBytes();

    /**
     * <pre>
     * Confidence estimate between 0 and 1. A higher number represents a higher
     * likelihood of the output being correct.
     * </pre>
     *
     * <code>double confidence = 2;</code>
     */
    double getConfidence();

    /**
     * <pre>
     * A list of word-specific information for each recognized word in the
     * `transcript` field. This is available only if `enable_word_confidence` or
     * `enable_word_time_offsets` was set to `true` in the `RecognitionConfig`.
     * </pre>
     *
     * <code>repeated .cobaltspeech.cubic.WordInfo words = 3;</code>
     */
    java.util.List<com.cobaltspeech.cubic.sdk.CubicOuterClass.WordInfo> 
        getWordsList();
    /**
     * <pre>
     * A list of word-specific information for each recognized word in the
     * `transcript` field. This is available only if `enable_word_confidence` or
     * `enable_word_time_offsets` was set to `true` in the `RecognitionConfig`.
     * </pre>
     *
     * <code>repeated .cobaltspeech.cubic.WordInfo words = 3;</code>
     */
    com.cobaltspeech.cubic.sdk.CubicOuterClass.WordInfo getWords(int index);
    /**
     * <pre>
     * A list of word-specific information for each recognized word in the
     * `transcript` field. This is available only if `enable_word_confidence` or
     * `enable_word_time_offsets` was set to `true` in the `RecognitionConfig`.
     * </pre>
     *
     * <code>repeated .cobaltspeech.cubic.WordInfo words = 3;</code>
     */
    int getWordsCount();
    /**
     * <pre>
     * A list of word-specific information for each recognized word in the
     * `transcript` field. This is available only if `enable_word_confidence` or
     * `enable_word_time_offsets` was set to `true` in the `RecognitionConfig`.
     * </pre>
     *
     * <code>repeated .cobaltspeech.cubic.WordInfo words = 3;</code>
     */
    java.util.List<? extends com.cobaltspeech.cubic.sdk.CubicOuterClass.WordInfoOrBuilder> 
        getWordsOrBuilderList();
    /**
     * <pre>
     * A list of word-specific information for each recognized word in the
     * `transcript` field. This is available only if `enable_word_confidence` or
     * `enable_word_time_offsets` was set to `true` in the `RecognitionConfig`.
     * </pre>
     *
     * <code>repeated .cobaltspeech.cubic.WordInfo words = 3;</code>
     */
    com.cobaltspeech.cubic.sdk.CubicOuterClass.WordInfoOrBuilder getWordsOrBuilder(
        int index);

    /**
     * <pre>
     * A list of word-specific information for each recognized word in the
     * `raw_transcript` field. This is available only if `enable_word_confidence`
     * or `enable_word_time_offsets` was set to `true` _and_
     * `enable_raw_transcript` is also set to `true` in the `RecognitionConfig`.
     * </pre>
     *
     * <code>repeated .cobaltspeech.cubic.WordInfo raw_words = 7;</code>
     */
    java.util.List<com.cobaltspeech.cubic.sdk.CubicOuterClass.WordInfo> 
        getRawWordsList();
    /**
     * <pre>
     * A list of word-specific information for each recognized word in the
     * `raw_transcript` field. This is available only if `enable_word_confidence`
     * or `enable_word_time_offsets` was set to `true` _and_
     * `enable_raw_transcript` is also set to `true` in the `RecognitionConfig`.
     * </pre>
     *
     * <code>repeated .cobaltspeech.cubic.WordInfo raw_words = 7;</code>
     */
    com.cobaltspeech.cubic.sdk.CubicOuterClass.WordInfo getRawWords(int index);
    /**
     * <pre>
     * A list of word-specific information for each recognized word in the
     * `raw_transcript` field. This is available only if `enable_word_confidence`
     * or `enable_word_time_offsets` was set to `true` _and_
     * `enable_raw_transcript` is also set to `true` in the `RecognitionConfig`.
     * </pre>
     *
     * <code>repeated .cobaltspeech.cubic.WordInfo raw_words = 7;</code>
     */
    int getRawWordsCount();
    /**
     * <pre>
     * A list of word-specific information for each recognized word in the
     * `raw_transcript` field. This is available only if `enable_word_confidence`
     * or `enable_word_time_offsets` was set to `true` _and_
     * `enable_raw_transcript` is also set to `true` in the `RecognitionConfig`.
     * </pre>
     *
     * <code>repeated .cobaltspeech.cubic.WordInfo raw_words = 7;</code>
     */
    java.util.List<? extends com.cobaltspeech.cubic.sdk.CubicOuterClass.WordInfoOrBuilder> 
        getRawWordsOrBuilderList();
    /**
     * <pre>
     * A list of word-specific information for each recognized word in the
     * `raw_transcript` field. This is available only if `enable_word_confidence`
     * or `enable_word_time_offsets` was set to `true` _and_
     * `enable_raw_transcript` is also set to `true` in the `RecognitionConfig`.
     * </pre>
     *
     * <code>repeated .cobaltspeech.cubic.WordInfo raw_words = 7;</code>
     */
    com.cobaltspeech.cubic.sdk.CubicOuterClass.WordInfoOrBuilder getRawWordsOrBuilder(
        int index);

    /**
     * <pre>
     * Time offset relative to the beginning of audio received by the recognizer
     * and corresponding to the start of this utterance.
     * </pre>
     *
     * <code>.google.protobuf.Duration start_time = 4;</code>
     */
    boolean hasStartTime();
    /**
     * <pre>
     * Time offset relative to the beginning of audio received by the recognizer
     * and corresponding to the start of this utterance.
     * </pre>
     *
     * <code>.google.protobuf.Duration start_time = 4;</code>
     */
    com.google.protobuf.Duration getStartTime();
    /**
     * <pre>
     * Time offset relative to the beginning of audio received by the recognizer
     * and corresponding to the start of this utterance.
     * </pre>
     *
     * <code>.google.protobuf.Duration start_time = 4;</code>
     */
    com.google.protobuf.DurationOrBuilder getStartTimeOrBuilder();

    /**
     * <pre>
     * Duration of the current utterance in the spoken audio.
     * </pre>
     *
     * <code>.google.protobuf.Duration duration = 5;</code>
     */
    boolean hasDuration();
    /**
     * <pre>
     * Duration of the current utterance in the spoken audio.
     * </pre>
     *
     * <code>.google.protobuf.Duration duration = 5;</code>
     */
    com.google.protobuf.Duration getDuration();
    /**
     * <pre>
     * Duration of the current utterance in the spoken audio.
     * </pre>
     *
     * <code>.google.protobuf.Duration duration = 5;</code>
     */
    com.google.protobuf.DurationOrBuilder getDurationOrBuilder();
  }
  /**
   * <pre>
   * A recognition hypothesis
   * </pre>
   *
   * Protobuf type {@code cobaltspeech.cubic.RecognitionAlternative}
   */
  public  static final class RecognitionAlternative extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:cobaltspeech.cubic.RecognitionAlternative)
      RecognitionAlternativeOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use RecognitionAlternative.newBuilder() to construct.
    private RecognitionAlternative(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RecognitionAlternative() {
      transcript_ = "";
      rawTranscript_ = "";
      words_ = java.util.Collections.emptyList();
      rawWords_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private RecognitionAlternative(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              transcript_ = s;
              break;
            }
            case 17: {

              confidence_ = input.readDouble();
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000008) != 0)) {
                words_ = new java.util.ArrayList<com.cobaltspeech.cubic.sdk.CubicOuterClass.WordInfo>();
                mutable_bitField0_ |= 0x00000008;
              }
              words_.add(
                  input.readMessage(com.cobaltspeech.cubic.sdk.CubicOuterClass.WordInfo.parser(), extensionRegistry));
              break;
            }
            case 34: {
              com.google.protobuf.Duration.Builder subBuilder = null;
              if (startTime_ != null) {
                subBuilder = startTime_.toBuilder();
              }
              startTime_ = input.readMessage(com.google.protobuf.Duration.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(startTime_);
                startTime_ = subBuilder.buildPartial();
              }

              break;
            }
            case 42: {
              com.google.protobuf.Duration.Builder subBuilder = null;
              if (duration_ != null) {
                subBuilder = duration_.toBuilder();
              }
              duration_ = input.readMessage(com.google.protobuf.Duration.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(duration_);
                duration_ = subBuilder.buildPartial();
              }

              break;
            }
            case 50: {
              java.lang.String s = input.readStringRequireUtf8();

              rawTranscript_ = s;
              break;
            }
            case 58: {
              if (!((mutable_bitField0_ & 0x00000010) != 0)) {
                rawWords_ = new java.util.ArrayList<com.cobaltspeech.cubic.sdk.CubicOuterClass.WordInfo>();
                mutable_bitField0_ |= 0x00000010;
              }
              rawWords_.add(
                  input.readMessage(com.cobaltspeech.cubic.sdk.CubicOuterClass.WordInfo.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) != 0)) {
          words_ = java.util.Collections.unmodifiableList(words_);
        }
        if (((mutable_bitField0_ & 0x00000010) != 0)) {
          rawWords_ = java.util.Collections.unmodifiableList(rawWords_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.cobaltspeech.cubic.sdk.CubicOuterClass.internal_static_cobaltspeech_cubic_RecognitionAlternative_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.cobaltspeech.cubic.sdk.CubicOuterClass.internal_static_cobaltspeech_cubic_RecognitionAlternative_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAlternative.class, com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAlternative.Builder.class);
    }

    private int bitField0_;
    public static final int TRANSCRIPT_FIELD_NUMBER = 1;
    private volatile java.lang.Object transcript_;
    /**
     * <pre>
     * Text representing the transcription of the words that the user spoke.
     * The transcript will be formatted according to the servers formatting
     * configuration. If you want the raw transcript, please see the field
     * `raw_transcript`.  If the server is configured to not use any formatting,
     * then this field will contain the raw transcript.
     * As an example, if the spoken utterance was "four people", and the
     * server was configured to format numbers, this field would be set to
     * "4 people".
     * </pre>
     *
     * <code>string transcript = 1;</code>
     */
    public java.lang.String getTranscript() {
      java.lang.Object ref = transcript_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        transcript_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Text representing the transcription of the words that the user spoke.
     * The transcript will be formatted according to the servers formatting
     * configuration. If you want the raw transcript, please see the field
     * `raw_transcript`.  If the server is configured to not use any formatting,
     * then this field will contain the raw transcript.
     * As an example, if the spoken utterance was "four people", and the
     * server was configured to format numbers, this field would be set to
     * "4 people".
     * </pre>
     *
     * <code>string transcript = 1;</code>
     */
    public com.google.protobuf.ByteString
        getTranscriptBytes() {
      java.lang.Object ref = transcript_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        transcript_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int RAW_TRANSCRIPT_FIELD_NUMBER = 6;
    private volatile java.lang.Object rawTranscript_;
    /**
     * <pre>
     * Text representing the transcription of the words that the user spoke,
     * without any formatting.  This field will be populated only the config
     * `RecognitionConfig.enable_raw_transcript` is set to true. Otherwise this
     * field will be an empty string. If you want the formatted transcript, please
     * see the field `transcript`.
     * As an example, if the spoken utterance was `here are four words`,
     * this field would be set to "HERE ARE FOUR WORDS".
     * </pre>
     *
     * <code>string raw_transcript = 6;</code>
     */
    public java.lang.String getRawTranscript() {
      java.lang.Object ref = rawTranscript_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        rawTranscript_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Text representing the transcription of the words that the user spoke,
     * without any formatting.  This field will be populated only the config
     * `RecognitionConfig.enable_raw_transcript` is set to true. Otherwise this
     * field will be an empty string. If you want the formatted transcript, please
     * see the field `transcript`.
     * As an example, if the spoken utterance was `here are four words`,
     * this field would be set to "HERE ARE FOUR WORDS".
     * </pre>
     *
     * <code>string raw_transcript = 6;</code>
     */
    public com.google.protobuf.ByteString
        getRawTranscriptBytes() {
      java.lang.Object ref = rawTranscript_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        rawTranscript_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CONFIDENCE_FIELD_NUMBER = 2;
    private double confidence_;
    /**
     * <pre>
     * Confidence estimate between 0 and 1. A higher number represents a higher
     * likelihood of the output being correct.
     * </pre>
     *
     * <code>double confidence = 2;</code>
     */
    public double getConfidence() {
      return confidence_;
    }

    public static final int WORDS_FIELD_NUMBER = 3;
    private java.util.List<com.cobaltspeech.cubic.sdk.CubicOuterClass.WordInfo> words_;
    /**
     * <pre>
     * A list of word-specific information for each recognized word in the
     * `transcript` field. This is available only if `enable_word_confidence` or
     * `enable_word_time_offsets` was set to `true` in the `RecognitionConfig`.
     * </pre>
     *
     * <code>repeated .cobaltspeech.cubic.WordInfo words = 3;</code>
     */
    public java.util.List<com.cobaltspeech.cubic.sdk.CubicOuterClass.WordInfo> getWordsList() {
      return words_;
    }
    /**
     * <pre>
     * A list of word-specific information for each recognized word in the
     * `transcript` field. This is available only if `enable_word_confidence` or
     * `enable_word_time_offsets` was set to `true` in the `RecognitionConfig`.
     * </pre>
     *
     * <code>repeated .cobaltspeech.cubic.WordInfo words = 3;</code>
     */
    public java.util.List<? extends com.cobaltspeech.cubic.sdk.CubicOuterClass.WordInfoOrBuilder> 
        getWordsOrBuilderList() {
      return words_;
    }
    /**
     * <pre>
     * A list of word-specific information for each recognized word in the
     * `transcript` field. This is available only if `enable_word_confidence` or
     * `enable_word_time_offsets` was set to `true` in the `RecognitionConfig`.
     * </pre>
     *
     * <code>repeated .cobaltspeech.cubic.WordInfo words = 3;</code>
     */
    public int getWordsCount() {
      return words_.size();
    }
    /**
     * <pre>
     * A list of word-specific information for each recognized word in the
     * `transcript` field. This is available only if `enable_word_confidence` or
     * `enable_word_time_offsets` was set to `true` in the `RecognitionConfig`.
     * </pre>
     *
     * <code>repeated .cobaltspeech.cubic.WordInfo words = 3;</code>
     */
    public com.cobaltspeech.cubic.sdk.CubicOuterClass.WordInfo getWords(int index) {
      return words_.get(index);
    }
    /**
     * <pre>
     * A list of word-specific information for each recognized word in the
     * `transcript` field. This is available only if `enable_word_confidence` or
     * `enable_word_time_offsets` was set to `true` in the `RecognitionConfig`.
     * </pre>
     *
     * <code>repeated .cobaltspeech.cubic.WordInfo words = 3;</code>
     */
    public com.cobaltspeech.cubic.sdk.CubicOuterClass.WordInfoOrBuilder getWordsOrBuilder(
        int index) {
      return words_.get(index);
    }

    public static final int RAW_WORDS_FIELD_NUMBER = 7;
    private java.util.List<com.cobaltspeech.cubic.sdk.CubicOuterClass.WordInfo> rawWords_;
    /**
     * <pre>
     * A list of word-specific information for each recognized word in the
     * `raw_transcript` field. This is available only if `enable_word_confidence`
     * or `enable_word_time_offsets` was set to `true` _and_
     * `enable_raw_transcript` is also set to `true` in the `RecognitionConfig`.
     * </pre>
     *
     * <code>repeated .cobaltspeech.cubic.WordInfo raw_words = 7;</code>
     */
    public java.util.List<com.cobaltspeech.cubic.sdk.CubicOuterClass.WordInfo> getRawWordsList() {
      return rawWords_;
    }
    /**
     * <pre>
     * A list of word-specific information for each recognized word in the
     * `raw_transcript` field. This is available only if `enable_word_confidence`
     * or `enable_word_time_offsets` was set to `true` _and_
     * `enable_raw_transcript` is also set to `true` in the `RecognitionConfig`.
     * </pre>
     *
     * <code>repeated .cobaltspeech.cubic.WordInfo raw_words = 7;</code>
     */
    public java.util.List<? extends com.cobaltspeech.cubic.sdk.CubicOuterClass.WordInfoOrBuilder> 
        getRawWordsOrBuilderList() {
      return rawWords_;
    }
    /**
     * <pre>
     * A list of word-specific information for each recognized word in the
     * `raw_transcript` field. This is available only if `enable_word_confidence`
     * or `enable_word_time_offsets` was set to `true` _and_
     * `enable_raw_transcript` is also set to `true` in the `RecognitionConfig`.
     * </pre>
     *
     * <code>repeated .cobaltspeech.cubic.WordInfo raw_words = 7;</code>
     */
    public int getRawWordsCount() {
      return rawWords_.size();
    }
    /**
     * <pre>
     * A list of word-specific information for each recognized word in the
     * `raw_transcript` field. This is available only if `enable_word_confidence`
     * or `enable_word_time_offsets` was set to `true` _and_
     * `enable_raw_transcript` is also set to `true` in the `RecognitionConfig`.
     * </pre>
     *
     * <code>repeated .cobaltspeech.cubic.WordInfo raw_words = 7;</code>
     */
    public com.cobaltspeech.cubic.sdk.CubicOuterClass.WordInfo getRawWords(int index) {
      return rawWords_.get(index);
    }
    /**
     * <pre>
     * A list of word-specific information for each recognized word in the
     * `raw_transcript` field. This is available only if `enable_word_confidence`
     * or `enable_word_time_offsets` was set to `true` _and_
     * `enable_raw_transcript` is also set to `true` in the `RecognitionConfig`.
     * </pre>
     *
     * <code>repeated .cobaltspeech.cubic.WordInfo raw_words = 7;</code>
     */
    public com.cobaltspeech.cubic.sdk.CubicOuterClass.WordInfoOrBuilder getRawWordsOrBuilder(
        int index) {
      return rawWords_.get(index);
    }

    public static final int START_TIME_FIELD_NUMBER = 4;
    private com.google.protobuf.Duration startTime_;
    /**
     * <pre>
     * Time offset relative to the beginning of audio received by the recognizer
     * and corresponding to the start of this utterance.
     * </pre>
     *
     * <code>.google.protobuf.Duration start_time = 4;</code>
     */
    public boolean hasStartTime() {
      return startTime_ != null;
    }
    /**
     * <pre>
     * Time offset relative to the beginning of audio received by the recognizer
     * and corresponding to the start of this utterance.
     * </pre>
     *
     * <code>.google.protobuf.Duration start_time = 4;</code>
     */
    public com.google.protobuf.Duration getStartTime() {
      return startTime_ == null ? com.google.protobuf.Duration.getDefaultInstance() : startTime_;
    }
    /**
     * <pre>
     * Time offset relative to the beginning of audio received by the recognizer
     * and corresponding to the start of this utterance.
     * </pre>
     *
     * <code>.google.protobuf.Duration start_time = 4;</code>
     */
    public com.google.protobuf.DurationOrBuilder getStartTimeOrBuilder() {
      return getStartTime();
    }

    public static final int DURATION_FIELD_NUMBER = 5;
    private com.google.protobuf.Duration duration_;
    /**
     * <pre>
     * Duration of the current utterance in the spoken audio.
     * </pre>
     *
     * <code>.google.protobuf.Duration duration = 5;</code>
     */
    public boolean hasDuration() {
      return duration_ != null;
    }
    /**
     * <pre>
     * Duration of the current utterance in the spoken audio.
     * </pre>
     *
     * <code>.google.protobuf.Duration duration = 5;</code>
     */
    public com.google.protobuf.Duration getDuration() {
      return duration_ == null ? com.google.protobuf.Duration.getDefaultInstance() : duration_;
    }
    /**
     * <pre>
     * Duration of the current utterance in the spoken audio.
     * </pre>
     *
     * <code>.google.protobuf.Duration duration = 5;</code>
     */
    public com.google.protobuf.DurationOrBuilder getDurationOrBuilder() {
      return getDuration();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getTranscriptBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, transcript_);
      }
      if (confidence_ != 0D) {
        output.writeDouble(2, confidence_);
      }
      for (int i = 0; i < words_.size(); i++) {
        output.writeMessage(3, words_.get(i));
      }
      if (startTime_ != null) {
        output.writeMessage(4, getStartTime());
      }
      if (duration_ != null) {
        output.writeMessage(5, getDuration());
      }
      if (!getRawTranscriptBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 6, rawTranscript_);
      }
      for (int i = 0; i < rawWords_.size(); i++) {
        output.writeMessage(7, rawWords_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getTranscriptBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, transcript_);
      }
      if (confidence_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, confidence_);
      }
      for (int i = 0; i < words_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, words_.get(i));
      }
      if (startTime_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getStartTime());
      }
      if (duration_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getDuration());
      }
      if (!getRawTranscriptBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, rawTranscript_);
      }
      for (int i = 0; i < rawWords_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, rawWords_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAlternative)) {
        return super.equals(obj);
      }
      com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAlternative other = (com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAlternative) obj;

      if (!getTranscript()
          .equals(other.getTranscript())) return false;
      if (!getRawTranscript()
          .equals(other.getRawTranscript())) return false;
      if (java.lang.Double.doubleToLongBits(getConfidence())
          != java.lang.Double.doubleToLongBits(
              other.getConfidence())) return false;
      if (!getWordsList()
          .equals(other.getWordsList())) return false;
      if (!getRawWordsList()
          .equals(other.getRawWordsList())) return false;
      if (hasStartTime() != other.hasStartTime()) return false;
      if (hasStartTime()) {
        if (!getStartTime()
            .equals(other.getStartTime())) return false;
      }
      if (hasDuration() != other.hasDuration()) return false;
      if (hasDuration()) {
        if (!getDuration()
            .equals(other.getDuration())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TRANSCRIPT_FIELD_NUMBER;
      hash = (53 * hash) + getTranscript().hashCode();
      hash = (37 * hash) + RAW_TRANSCRIPT_FIELD_NUMBER;
      hash = (53 * hash) + getRawTranscript().hashCode();
      hash = (37 * hash) + CONFIDENCE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getConfidence()));
      if (getWordsCount() > 0) {
        hash = (37 * hash) + WORDS_FIELD_NUMBER;
        hash = (53 * hash) + getWordsList().hashCode();
      }
      if (getRawWordsCount() > 0) {
        hash = (37 * hash) + RAW_WORDS_FIELD_NUMBER;
        hash = (53 * hash) + getRawWordsList().hashCode();
      }
      if (hasStartTime()) {
        hash = (37 * hash) + START_TIME_FIELD_NUMBER;
        hash = (53 * hash) + getStartTime().hashCode();
      }
      if (hasDuration()) {
        hash = (37 * hash) + DURATION_FIELD_NUMBER;
        hash = (53 * hash) + getDuration().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAlternative parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAlternative parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAlternative parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAlternative parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAlternative parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAlternative parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAlternative parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAlternative parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAlternative parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAlternative parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAlternative parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAlternative parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAlternative prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * A recognition hypothesis
     * </pre>
     *
     * Protobuf type {@code cobaltspeech.cubic.RecognitionAlternative}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:cobaltspeech.cubic.RecognitionAlternative)
        com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAlternativeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.cobaltspeech.cubic.sdk.CubicOuterClass.internal_static_cobaltspeech_cubic_RecognitionAlternative_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.cobaltspeech.cubic.sdk.CubicOuterClass.internal_static_cobaltspeech_cubic_RecognitionAlternative_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAlternative.class, com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAlternative.Builder.class);
      }

      // Construct using com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAlternative.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getWordsFieldBuilder();
          getRawWordsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        transcript_ = "";

        rawTranscript_ = "";

        confidence_ = 0D;

        if (wordsBuilder_ == null) {
          words_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          wordsBuilder_.clear();
        }
        if (rawWordsBuilder_ == null) {
          rawWords_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          rawWordsBuilder_.clear();
        }
        if (startTimeBuilder_ == null) {
          startTime_ = null;
        } else {
          startTime_ = null;
          startTimeBuilder_ = null;
        }
        if (durationBuilder_ == null) {
          duration_ = null;
        } else {
          duration_ = null;
          durationBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.cobaltspeech.cubic.sdk.CubicOuterClass.internal_static_cobaltspeech_cubic_RecognitionAlternative_descriptor;
      }

      @java.lang.Override
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAlternative getDefaultInstanceForType() {
        return com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAlternative.getDefaultInstance();
      }

      @java.lang.Override
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAlternative build() {
        com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAlternative result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAlternative buildPartial() {
        com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAlternative result = new com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAlternative(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.transcript_ = transcript_;
        result.rawTranscript_ = rawTranscript_;
        result.confidence_ = confidence_;
        if (wordsBuilder_ == null) {
          if (((bitField0_ & 0x00000008) != 0)) {
            words_ = java.util.Collections.unmodifiableList(words_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.words_ = words_;
        } else {
          result.words_ = wordsBuilder_.build();
        }
        if (rawWordsBuilder_ == null) {
          if (((bitField0_ & 0x00000010) != 0)) {
            rawWords_ = java.util.Collections.unmodifiableList(rawWords_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.rawWords_ = rawWords_;
        } else {
          result.rawWords_ = rawWordsBuilder_.build();
        }
        if (startTimeBuilder_ == null) {
          result.startTime_ = startTime_;
        } else {
          result.startTime_ = startTimeBuilder_.build();
        }
        if (durationBuilder_ == null) {
          result.duration_ = duration_;
        } else {
          result.duration_ = durationBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAlternative) {
          return mergeFrom((com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAlternative)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAlternative other) {
        if (other == com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAlternative.getDefaultInstance()) return this;
        if (!other.getTranscript().isEmpty()) {
          transcript_ = other.transcript_;
          onChanged();
        }
        if (!other.getRawTranscript().isEmpty()) {
          rawTranscript_ = other.rawTranscript_;
          onChanged();
        }
        if (other.getConfidence() != 0D) {
          setConfidence(other.getConfidence());
        }
        if (wordsBuilder_ == null) {
          if (!other.words_.isEmpty()) {
            if (words_.isEmpty()) {
              words_ = other.words_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureWordsIsMutable();
              words_.addAll(other.words_);
            }
            onChanged();
          }
        } else {
          if (!other.words_.isEmpty()) {
            if (wordsBuilder_.isEmpty()) {
              wordsBuilder_.dispose();
              wordsBuilder_ = null;
              words_ = other.words_;
              bitField0_ = (bitField0_ & ~0x00000008);
              wordsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getWordsFieldBuilder() : null;
            } else {
              wordsBuilder_.addAllMessages(other.words_);
            }
          }
        }
        if (rawWordsBuilder_ == null) {
          if (!other.rawWords_.isEmpty()) {
            if (rawWords_.isEmpty()) {
              rawWords_ = other.rawWords_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureRawWordsIsMutable();
              rawWords_.addAll(other.rawWords_);
            }
            onChanged();
          }
        } else {
          if (!other.rawWords_.isEmpty()) {
            if (rawWordsBuilder_.isEmpty()) {
              rawWordsBuilder_.dispose();
              rawWordsBuilder_ = null;
              rawWords_ = other.rawWords_;
              bitField0_ = (bitField0_ & ~0x00000010);
              rawWordsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getRawWordsFieldBuilder() : null;
            } else {
              rawWordsBuilder_.addAllMessages(other.rawWords_);
            }
          }
        }
        if (other.hasStartTime()) {
          mergeStartTime(other.getStartTime());
        }
        if (other.hasDuration()) {
          mergeDuration(other.getDuration());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAlternative parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAlternative) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object transcript_ = "";
      /**
       * <pre>
       * Text representing the transcription of the words that the user spoke.
       * The transcript will be formatted according to the servers formatting
       * configuration. If you want the raw transcript, please see the field
       * `raw_transcript`.  If the server is configured to not use any formatting,
       * then this field will contain the raw transcript.
       * As an example, if the spoken utterance was "four people", and the
       * server was configured to format numbers, this field would be set to
       * "4 people".
       * </pre>
       *
       * <code>string transcript = 1;</code>
       */
      public java.lang.String getTranscript() {
        java.lang.Object ref = transcript_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          transcript_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Text representing the transcription of the words that the user spoke.
       * The transcript will be formatted according to the servers formatting
       * configuration. If you want the raw transcript, please see the field
       * `raw_transcript`.  If the server is configured to not use any formatting,
       * then this field will contain the raw transcript.
       * As an example, if the spoken utterance was "four people", and the
       * server was configured to format numbers, this field would be set to
       * "4 people".
       * </pre>
       *
       * <code>string transcript = 1;</code>
       */
      public com.google.protobuf.ByteString
          getTranscriptBytes() {
        java.lang.Object ref = transcript_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          transcript_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Text representing the transcription of the words that the user spoke.
       * The transcript will be formatted according to the servers formatting
       * configuration. If you want the raw transcript, please see the field
       * `raw_transcript`.  If the server is configured to not use any formatting,
       * then this field will contain the raw transcript.
       * As an example, if the spoken utterance was "four people", and the
       * server was configured to format numbers, this field would be set to
       * "4 people".
       * </pre>
       *
       * <code>string transcript = 1;</code>
       */
      public Builder setTranscript(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        transcript_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Text representing the transcription of the words that the user spoke.
       * The transcript will be formatted according to the servers formatting
       * configuration. If you want the raw transcript, please see the field
       * `raw_transcript`.  If the server is configured to not use any formatting,
       * then this field will contain the raw transcript.
       * As an example, if the spoken utterance was "four people", and the
       * server was configured to format numbers, this field would be set to
       * "4 people".
       * </pre>
       *
       * <code>string transcript = 1;</code>
       */
      public Builder clearTranscript() {
        
        transcript_ = getDefaultInstance().getTranscript();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Text representing the transcription of the words that the user spoke.
       * The transcript will be formatted according to the servers formatting
       * configuration. If you want the raw transcript, please see the field
       * `raw_transcript`.  If the server is configured to not use any formatting,
       * then this field will contain the raw transcript.
       * As an example, if the spoken utterance was "four people", and the
       * server was configured to format numbers, this field would be set to
       * "4 people".
       * </pre>
       *
       * <code>string transcript = 1;</code>
       */
      public Builder setTranscriptBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        transcript_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object rawTranscript_ = "";
      /**
       * <pre>
       * Text representing the transcription of the words that the user spoke,
       * without any formatting.  This field will be populated only the config
       * `RecognitionConfig.enable_raw_transcript` is set to true. Otherwise this
       * field will be an empty string. If you want the formatted transcript, please
       * see the field `transcript`.
       * As an example, if the spoken utterance was `here are four words`,
       * this field would be set to "HERE ARE FOUR WORDS".
       * </pre>
       *
       * <code>string raw_transcript = 6;</code>
       */
      public java.lang.String getRawTranscript() {
        java.lang.Object ref = rawTranscript_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          rawTranscript_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Text representing the transcription of the words that the user spoke,
       * without any formatting.  This field will be populated only the config
       * `RecognitionConfig.enable_raw_transcript` is set to true. Otherwise this
       * field will be an empty string. If you want the formatted transcript, please
       * see the field `transcript`.
       * As an example, if the spoken utterance was `here are four words`,
       * this field would be set to "HERE ARE FOUR WORDS".
       * </pre>
       *
       * <code>string raw_transcript = 6;</code>
       */
      public com.google.protobuf.ByteString
          getRawTranscriptBytes() {
        java.lang.Object ref = rawTranscript_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          rawTranscript_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Text representing the transcription of the words that the user spoke,
       * without any formatting.  This field will be populated only the config
       * `RecognitionConfig.enable_raw_transcript` is set to true. Otherwise this
       * field will be an empty string. If you want the formatted transcript, please
       * see the field `transcript`.
       * As an example, if the spoken utterance was `here are four words`,
       * this field would be set to "HERE ARE FOUR WORDS".
       * </pre>
       *
       * <code>string raw_transcript = 6;</code>
       */
      public Builder setRawTranscript(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        rawTranscript_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Text representing the transcription of the words that the user spoke,
       * without any formatting.  This field will be populated only the config
       * `RecognitionConfig.enable_raw_transcript` is set to true. Otherwise this
       * field will be an empty string. If you want the formatted transcript, please
       * see the field `transcript`.
       * As an example, if the spoken utterance was `here are four words`,
       * this field would be set to "HERE ARE FOUR WORDS".
       * </pre>
       *
       * <code>string raw_transcript = 6;</code>
       */
      public Builder clearRawTranscript() {
        
        rawTranscript_ = getDefaultInstance().getRawTranscript();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Text representing the transcription of the words that the user spoke,
       * without any formatting.  This field will be populated only the config
       * `RecognitionConfig.enable_raw_transcript` is set to true. Otherwise this
       * field will be an empty string. If you want the formatted transcript, please
       * see the field `transcript`.
       * As an example, if the spoken utterance was `here are four words`,
       * this field would be set to "HERE ARE FOUR WORDS".
       * </pre>
       *
       * <code>string raw_transcript = 6;</code>
       */
      public Builder setRawTranscriptBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        rawTranscript_ = value;
        onChanged();
        return this;
      }

      private double confidence_ ;
      /**
       * <pre>
       * Confidence estimate between 0 and 1. A higher number represents a higher
       * likelihood of the output being correct.
       * </pre>
       *
       * <code>double confidence = 2;</code>
       */
      public double getConfidence() {
        return confidence_;
      }
      /**
       * <pre>
       * Confidence estimate between 0 and 1. A higher number represents a higher
       * likelihood of the output being correct.
       * </pre>
       *
       * <code>double confidence = 2;</code>
       */
      public Builder setConfidence(double value) {
        
        confidence_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Confidence estimate between 0 and 1. A higher number represents a higher
       * likelihood of the output being correct.
       * </pre>
       *
       * <code>double confidence = 2;</code>
       */
      public Builder clearConfidence() {
        
        confidence_ = 0D;
        onChanged();
        return this;
      }

      private java.util.List<com.cobaltspeech.cubic.sdk.CubicOuterClass.WordInfo> words_ =
        java.util.Collections.emptyList();
      private void ensureWordsIsMutable() {
        if (!((bitField0_ & 0x00000008) != 0)) {
          words_ = new java.util.ArrayList<com.cobaltspeech.cubic.sdk.CubicOuterClass.WordInfo>(words_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.cobaltspeech.cubic.sdk.CubicOuterClass.WordInfo, com.cobaltspeech.cubic.sdk.CubicOuterClass.WordInfo.Builder, com.cobaltspeech.cubic.sdk.CubicOuterClass.WordInfoOrBuilder> wordsBuilder_;

      /**
       * <pre>
       * A list of word-specific information for each recognized word in the
       * `transcript` field. This is available only if `enable_word_confidence` or
       * `enable_word_time_offsets` was set to `true` in the `RecognitionConfig`.
       * </pre>
       *
       * <code>repeated .cobaltspeech.cubic.WordInfo words = 3;</code>
       */
      public java.util.List<com.cobaltspeech.cubic.sdk.CubicOuterClass.WordInfo> getWordsList() {
        if (wordsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(words_);
        } else {
          return wordsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * A list of word-specific information for each recognized word in the
       * `transcript` field. This is available only if `enable_word_confidence` or
       * `enable_word_time_offsets` was set to `true` in the `RecognitionConfig`.
       * </pre>
       *
       * <code>repeated .cobaltspeech.cubic.WordInfo words = 3;</code>
       */
      public int getWordsCount() {
        if (wordsBuilder_ == null) {
          return words_.size();
        } else {
          return wordsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * A list of word-specific information for each recognized word in the
       * `transcript` field. This is available only if `enable_word_confidence` or
       * `enable_word_time_offsets` was set to `true` in the `RecognitionConfig`.
       * </pre>
       *
       * <code>repeated .cobaltspeech.cubic.WordInfo words = 3;</code>
       */
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.WordInfo getWords(int index) {
        if (wordsBuilder_ == null) {
          return words_.get(index);
        } else {
          return wordsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * A list of word-specific information for each recognized word in the
       * `transcript` field. This is available only if `enable_word_confidence` or
       * `enable_word_time_offsets` was set to `true` in the `RecognitionConfig`.
       * </pre>
       *
       * <code>repeated .cobaltspeech.cubic.WordInfo words = 3;</code>
       */
      public Builder setWords(
          int index, com.cobaltspeech.cubic.sdk.CubicOuterClass.WordInfo value) {
        if (wordsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureWordsIsMutable();
          words_.set(index, value);
          onChanged();
        } else {
          wordsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * A list of word-specific information for each recognized word in the
       * `transcript` field. This is available only if `enable_word_confidence` or
       * `enable_word_time_offsets` was set to `true` in the `RecognitionConfig`.
       * </pre>
       *
       * <code>repeated .cobaltspeech.cubic.WordInfo words = 3;</code>
       */
      public Builder setWords(
          int index, com.cobaltspeech.cubic.sdk.CubicOuterClass.WordInfo.Builder builderForValue) {
        if (wordsBuilder_ == null) {
          ensureWordsIsMutable();
          words_.set(index, builderForValue.build());
          onChanged();
        } else {
          wordsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * A list of word-specific information for each recognized word in the
       * `transcript` field. This is available only if `enable_word_confidence` or
       * `enable_word_time_offsets` was set to `true` in the `RecognitionConfig`.
       * </pre>
       *
       * <code>repeated .cobaltspeech.cubic.WordInfo words = 3;</code>
       */
      public Builder addWords(com.cobaltspeech.cubic.sdk.CubicOuterClass.WordInfo value) {
        if (wordsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureWordsIsMutable();
          words_.add(value);
          onChanged();
        } else {
          wordsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * A list of word-specific information for each recognized word in the
       * `transcript` field. This is available only if `enable_word_confidence` or
       * `enable_word_time_offsets` was set to `true` in the `RecognitionConfig`.
       * </pre>
       *
       * <code>repeated .cobaltspeech.cubic.WordInfo words = 3;</code>
       */
      public Builder addWords(
          int index, com.cobaltspeech.cubic.sdk.CubicOuterClass.WordInfo value) {
        if (wordsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureWordsIsMutable();
          words_.add(index, value);
          onChanged();
        } else {
          wordsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * A list of word-specific information for each recognized word in the
       * `transcript` field. This is available only if `enable_word_confidence` or
       * `enable_word_time_offsets` was set to `true` in the `RecognitionConfig`.
       * </pre>
       *
       * <code>repeated .cobaltspeech.cubic.WordInfo words = 3;</code>
       */
      public Builder addWords(
          com.cobaltspeech.cubic.sdk.CubicOuterClass.WordInfo.Builder builderForValue) {
        if (wordsBuilder_ == null) {
          ensureWordsIsMutable();
          words_.add(builderForValue.build());
          onChanged();
        } else {
          wordsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * A list of word-specific information for each recognized word in the
       * `transcript` field. This is available only if `enable_word_confidence` or
       * `enable_word_time_offsets` was set to `true` in the `RecognitionConfig`.
       * </pre>
       *
       * <code>repeated .cobaltspeech.cubic.WordInfo words = 3;</code>
       */
      public Builder addWords(
          int index, com.cobaltspeech.cubic.sdk.CubicOuterClass.WordInfo.Builder builderForValue) {
        if (wordsBuilder_ == null) {
          ensureWordsIsMutable();
          words_.add(index, builderForValue.build());
          onChanged();
        } else {
          wordsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * A list of word-specific information for each recognized word in the
       * `transcript` field. This is available only if `enable_word_confidence` or
       * `enable_word_time_offsets` was set to `true` in the `RecognitionConfig`.
       * </pre>
       *
       * <code>repeated .cobaltspeech.cubic.WordInfo words = 3;</code>
       */
      public Builder addAllWords(
          java.lang.Iterable<? extends com.cobaltspeech.cubic.sdk.CubicOuterClass.WordInfo> values) {
        if (wordsBuilder_ == null) {
          ensureWordsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, words_);
          onChanged();
        } else {
          wordsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * A list of word-specific information for each recognized word in the
       * `transcript` field. This is available only if `enable_word_confidence` or
       * `enable_word_time_offsets` was set to `true` in the `RecognitionConfig`.
       * </pre>
       *
       * <code>repeated .cobaltspeech.cubic.WordInfo words = 3;</code>
       */
      public Builder clearWords() {
        if (wordsBuilder_ == null) {
          words_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          wordsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * A list of word-specific information for each recognized word in the
       * `transcript` field. This is available only if `enable_word_confidence` or
       * `enable_word_time_offsets` was set to `true` in the `RecognitionConfig`.
       * </pre>
       *
       * <code>repeated .cobaltspeech.cubic.WordInfo words = 3;</code>
       */
      public Builder removeWords(int index) {
        if (wordsBuilder_ == null) {
          ensureWordsIsMutable();
          words_.remove(index);
          onChanged();
        } else {
          wordsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * A list of word-specific information for each recognized word in the
       * `transcript` field. This is available only if `enable_word_confidence` or
       * `enable_word_time_offsets` was set to `true` in the `RecognitionConfig`.
       * </pre>
       *
       * <code>repeated .cobaltspeech.cubic.WordInfo words = 3;</code>
       */
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.WordInfo.Builder getWordsBuilder(
          int index) {
        return getWordsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * A list of word-specific information for each recognized word in the
       * `transcript` field. This is available only if `enable_word_confidence` or
       * `enable_word_time_offsets` was set to `true` in the `RecognitionConfig`.
       * </pre>
       *
       * <code>repeated .cobaltspeech.cubic.WordInfo words = 3;</code>
       */
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.WordInfoOrBuilder getWordsOrBuilder(
          int index) {
        if (wordsBuilder_ == null) {
          return words_.get(index);  } else {
          return wordsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * A list of word-specific information for each recognized word in the
       * `transcript` field. This is available only if `enable_word_confidence` or
       * `enable_word_time_offsets` was set to `true` in the `RecognitionConfig`.
       * </pre>
       *
       * <code>repeated .cobaltspeech.cubic.WordInfo words = 3;</code>
       */
      public java.util.List<? extends com.cobaltspeech.cubic.sdk.CubicOuterClass.WordInfoOrBuilder> 
           getWordsOrBuilderList() {
        if (wordsBuilder_ != null) {
          return wordsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(words_);
        }
      }
      /**
       * <pre>
       * A list of word-specific information for each recognized word in the
       * `transcript` field. This is available only if `enable_word_confidence` or
       * `enable_word_time_offsets` was set to `true` in the `RecognitionConfig`.
       * </pre>
       *
       * <code>repeated .cobaltspeech.cubic.WordInfo words = 3;</code>
       */
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.WordInfo.Builder addWordsBuilder() {
        return getWordsFieldBuilder().addBuilder(
            com.cobaltspeech.cubic.sdk.CubicOuterClass.WordInfo.getDefaultInstance());
      }
      /**
       * <pre>
       * A list of word-specific information for each recognized word in the
       * `transcript` field. This is available only if `enable_word_confidence` or
       * `enable_word_time_offsets` was set to `true` in the `RecognitionConfig`.
       * </pre>
       *
       * <code>repeated .cobaltspeech.cubic.WordInfo words = 3;</code>
       */
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.WordInfo.Builder addWordsBuilder(
          int index) {
        return getWordsFieldBuilder().addBuilder(
            index, com.cobaltspeech.cubic.sdk.CubicOuterClass.WordInfo.getDefaultInstance());
      }
      /**
       * <pre>
       * A list of word-specific information for each recognized word in the
       * `transcript` field. This is available only if `enable_word_confidence` or
       * `enable_word_time_offsets` was set to `true` in the `RecognitionConfig`.
       * </pre>
       *
       * <code>repeated .cobaltspeech.cubic.WordInfo words = 3;</code>
       */
      public java.util.List<com.cobaltspeech.cubic.sdk.CubicOuterClass.WordInfo.Builder> 
           getWordsBuilderList() {
        return getWordsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.cobaltspeech.cubic.sdk.CubicOuterClass.WordInfo, com.cobaltspeech.cubic.sdk.CubicOuterClass.WordInfo.Builder, com.cobaltspeech.cubic.sdk.CubicOuterClass.WordInfoOrBuilder> 
          getWordsFieldBuilder() {
        if (wordsBuilder_ == null) {
          wordsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.cobaltspeech.cubic.sdk.CubicOuterClass.WordInfo, com.cobaltspeech.cubic.sdk.CubicOuterClass.WordInfo.Builder, com.cobaltspeech.cubic.sdk.CubicOuterClass.WordInfoOrBuilder>(
                  words_,
                  ((bitField0_ & 0x00000008) != 0),
                  getParentForChildren(),
                  isClean());
          words_ = null;
        }
        return wordsBuilder_;
      }

      private java.util.List<com.cobaltspeech.cubic.sdk.CubicOuterClass.WordInfo> rawWords_ =
        java.util.Collections.emptyList();
      private void ensureRawWordsIsMutable() {
        if (!((bitField0_ & 0x00000010) != 0)) {
          rawWords_ = new java.util.ArrayList<com.cobaltspeech.cubic.sdk.CubicOuterClass.WordInfo>(rawWords_);
          bitField0_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.cobaltspeech.cubic.sdk.CubicOuterClass.WordInfo, com.cobaltspeech.cubic.sdk.CubicOuterClass.WordInfo.Builder, com.cobaltspeech.cubic.sdk.CubicOuterClass.WordInfoOrBuilder> rawWordsBuilder_;

      /**
       * <pre>
       * A list of word-specific information for each recognized word in the
       * `raw_transcript` field. This is available only if `enable_word_confidence`
       * or `enable_word_time_offsets` was set to `true` _and_
       * `enable_raw_transcript` is also set to `true` in the `RecognitionConfig`.
       * </pre>
       *
       * <code>repeated .cobaltspeech.cubic.WordInfo raw_words = 7;</code>
       */
      public java.util.List<com.cobaltspeech.cubic.sdk.CubicOuterClass.WordInfo> getRawWordsList() {
        if (rawWordsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(rawWords_);
        } else {
          return rawWordsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * A list of word-specific information for each recognized word in the
       * `raw_transcript` field. This is available only if `enable_word_confidence`
       * or `enable_word_time_offsets` was set to `true` _and_
       * `enable_raw_transcript` is also set to `true` in the `RecognitionConfig`.
       * </pre>
       *
       * <code>repeated .cobaltspeech.cubic.WordInfo raw_words = 7;</code>
       */
      public int getRawWordsCount() {
        if (rawWordsBuilder_ == null) {
          return rawWords_.size();
        } else {
          return rawWordsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * A list of word-specific information for each recognized word in the
       * `raw_transcript` field. This is available only if `enable_word_confidence`
       * or `enable_word_time_offsets` was set to `true` _and_
       * `enable_raw_transcript` is also set to `true` in the `RecognitionConfig`.
       * </pre>
       *
       * <code>repeated .cobaltspeech.cubic.WordInfo raw_words = 7;</code>
       */
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.WordInfo getRawWords(int index) {
        if (rawWordsBuilder_ == null) {
          return rawWords_.get(index);
        } else {
          return rawWordsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * A list of word-specific information for each recognized word in the
       * `raw_transcript` field. This is available only if `enable_word_confidence`
       * or `enable_word_time_offsets` was set to `true` _and_
       * `enable_raw_transcript` is also set to `true` in the `RecognitionConfig`.
       * </pre>
       *
       * <code>repeated .cobaltspeech.cubic.WordInfo raw_words = 7;</code>
       */
      public Builder setRawWords(
          int index, com.cobaltspeech.cubic.sdk.CubicOuterClass.WordInfo value) {
        if (rawWordsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRawWordsIsMutable();
          rawWords_.set(index, value);
          onChanged();
        } else {
          rawWordsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * A list of word-specific information for each recognized word in the
       * `raw_transcript` field. This is available only if `enable_word_confidence`
       * or `enable_word_time_offsets` was set to `true` _and_
       * `enable_raw_transcript` is also set to `true` in the `RecognitionConfig`.
       * </pre>
       *
       * <code>repeated .cobaltspeech.cubic.WordInfo raw_words = 7;</code>
       */
      public Builder setRawWords(
          int index, com.cobaltspeech.cubic.sdk.CubicOuterClass.WordInfo.Builder builderForValue) {
        if (rawWordsBuilder_ == null) {
          ensureRawWordsIsMutable();
          rawWords_.set(index, builderForValue.build());
          onChanged();
        } else {
          rawWordsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * A list of word-specific information for each recognized word in the
       * `raw_transcript` field. This is available only if `enable_word_confidence`
       * or `enable_word_time_offsets` was set to `true` _and_
       * `enable_raw_transcript` is also set to `true` in the `RecognitionConfig`.
       * </pre>
       *
       * <code>repeated .cobaltspeech.cubic.WordInfo raw_words = 7;</code>
       */
      public Builder addRawWords(com.cobaltspeech.cubic.sdk.CubicOuterClass.WordInfo value) {
        if (rawWordsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRawWordsIsMutable();
          rawWords_.add(value);
          onChanged();
        } else {
          rawWordsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * A list of word-specific information for each recognized word in the
       * `raw_transcript` field. This is available only if `enable_word_confidence`
       * or `enable_word_time_offsets` was set to `true` _and_
       * `enable_raw_transcript` is also set to `true` in the `RecognitionConfig`.
       * </pre>
       *
       * <code>repeated .cobaltspeech.cubic.WordInfo raw_words = 7;</code>
       */
      public Builder addRawWords(
          int index, com.cobaltspeech.cubic.sdk.CubicOuterClass.WordInfo value) {
        if (rawWordsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRawWordsIsMutable();
          rawWords_.add(index, value);
          onChanged();
        } else {
          rawWordsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * A list of word-specific information for each recognized word in the
       * `raw_transcript` field. This is available only if `enable_word_confidence`
       * or `enable_word_time_offsets` was set to `true` _and_
       * `enable_raw_transcript` is also set to `true` in the `RecognitionConfig`.
       * </pre>
       *
       * <code>repeated .cobaltspeech.cubic.WordInfo raw_words = 7;</code>
       */
      public Builder addRawWords(
          com.cobaltspeech.cubic.sdk.CubicOuterClass.WordInfo.Builder builderForValue) {
        if (rawWordsBuilder_ == null) {
          ensureRawWordsIsMutable();
          rawWords_.add(builderForValue.build());
          onChanged();
        } else {
          rawWordsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * A list of word-specific information for each recognized word in the
       * `raw_transcript` field. This is available only if `enable_word_confidence`
       * or `enable_word_time_offsets` was set to `true` _and_
       * `enable_raw_transcript` is also set to `true` in the `RecognitionConfig`.
       * </pre>
       *
       * <code>repeated .cobaltspeech.cubic.WordInfo raw_words = 7;</code>
       */
      public Builder addRawWords(
          int index, com.cobaltspeech.cubic.sdk.CubicOuterClass.WordInfo.Builder builderForValue) {
        if (rawWordsBuilder_ == null) {
          ensureRawWordsIsMutable();
          rawWords_.add(index, builderForValue.build());
          onChanged();
        } else {
          rawWordsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * A list of word-specific information for each recognized word in the
       * `raw_transcript` field. This is available only if `enable_word_confidence`
       * or `enable_word_time_offsets` was set to `true` _and_
       * `enable_raw_transcript` is also set to `true` in the `RecognitionConfig`.
       * </pre>
       *
       * <code>repeated .cobaltspeech.cubic.WordInfo raw_words = 7;</code>
       */
      public Builder addAllRawWords(
          java.lang.Iterable<? extends com.cobaltspeech.cubic.sdk.CubicOuterClass.WordInfo> values) {
        if (rawWordsBuilder_ == null) {
          ensureRawWordsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, rawWords_);
          onChanged();
        } else {
          rawWordsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * A list of word-specific information for each recognized word in the
       * `raw_transcript` field. This is available only if `enable_word_confidence`
       * or `enable_word_time_offsets` was set to `true` _and_
       * `enable_raw_transcript` is also set to `true` in the `RecognitionConfig`.
       * </pre>
       *
       * <code>repeated .cobaltspeech.cubic.WordInfo raw_words = 7;</code>
       */
      public Builder clearRawWords() {
        if (rawWordsBuilder_ == null) {
          rawWords_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          rawWordsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * A list of word-specific information for each recognized word in the
       * `raw_transcript` field. This is available only if `enable_word_confidence`
       * or `enable_word_time_offsets` was set to `true` _and_
       * `enable_raw_transcript` is also set to `true` in the `RecognitionConfig`.
       * </pre>
       *
       * <code>repeated .cobaltspeech.cubic.WordInfo raw_words = 7;</code>
       */
      public Builder removeRawWords(int index) {
        if (rawWordsBuilder_ == null) {
          ensureRawWordsIsMutable();
          rawWords_.remove(index);
          onChanged();
        } else {
          rawWordsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * A list of word-specific information for each recognized word in the
       * `raw_transcript` field. This is available only if `enable_word_confidence`
       * or `enable_word_time_offsets` was set to `true` _and_
       * `enable_raw_transcript` is also set to `true` in the `RecognitionConfig`.
       * </pre>
       *
       * <code>repeated .cobaltspeech.cubic.WordInfo raw_words = 7;</code>
       */
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.WordInfo.Builder getRawWordsBuilder(
          int index) {
        return getRawWordsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * A list of word-specific information for each recognized word in the
       * `raw_transcript` field. This is available only if `enable_word_confidence`
       * or `enable_word_time_offsets` was set to `true` _and_
       * `enable_raw_transcript` is also set to `true` in the `RecognitionConfig`.
       * </pre>
       *
       * <code>repeated .cobaltspeech.cubic.WordInfo raw_words = 7;</code>
       */
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.WordInfoOrBuilder getRawWordsOrBuilder(
          int index) {
        if (rawWordsBuilder_ == null) {
          return rawWords_.get(index);  } else {
          return rawWordsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * A list of word-specific information for each recognized word in the
       * `raw_transcript` field. This is available only if `enable_word_confidence`
       * or `enable_word_time_offsets` was set to `true` _and_
       * `enable_raw_transcript` is also set to `true` in the `RecognitionConfig`.
       * </pre>
       *
       * <code>repeated .cobaltspeech.cubic.WordInfo raw_words = 7;</code>
       */
      public java.util.List<? extends com.cobaltspeech.cubic.sdk.CubicOuterClass.WordInfoOrBuilder> 
           getRawWordsOrBuilderList() {
        if (rawWordsBuilder_ != null) {
          return rawWordsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(rawWords_);
        }
      }
      /**
       * <pre>
       * A list of word-specific information for each recognized word in the
       * `raw_transcript` field. This is available only if `enable_word_confidence`
       * or `enable_word_time_offsets` was set to `true` _and_
       * `enable_raw_transcript` is also set to `true` in the `RecognitionConfig`.
       * </pre>
       *
       * <code>repeated .cobaltspeech.cubic.WordInfo raw_words = 7;</code>
       */
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.WordInfo.Builder addRawWordsBuilder() {
        return getRawWordsFieldBuilder().addBuilder(
            com.cobaltspeech.cubic.sdk.CubicOuterClass.WordInfo.getDefaultInstance());
      }
      /**
       * <pre>
       * A list of word-specific information for each recognized word in the
       * `raw_transcript` field. This is available only if `enable_word_confidence`
       * or `enable_word_time_offsets` was set to `true` _and_
       * `enable_raw_transcript` is also set to `true` in the `RecognitionConfig`.
       * </pre>
       *
       * <code>repeated .cobaltspeech.cubic.WordInfo raw_words = 7;</code>
       */
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.WordInfo.Builder addRawWordsBuilder(
          int index) {
        return getRawWordsFieldBuilder().addBuilder(
            index, com.cobaltspeech.cubic.sdk.CubicOuterClass.WordInfo.getDefaultInstance());
      }
      /**
       * <pre>
       * A list of word-specific information for each recognized word in the
       * `raw_transcript` field. This is available only if `enable_word_confidence`
       * or `enable_word_time_offsets` was set to `true` _and_
       * `enable_raw_transcript` is also set to `true` in the `RecognitionConfig`.
       * </pre>
       *
       * <code>repeated .cobaltspeech.cubic.WordInfo raw_words = 7;</code>
       */
      public java.util.List<com.cobaltspeech.cubic.sdk.CubicOuterClass.WordInfo.Builder> 
           getRawWordsBuilderList() {
        return getRawWordsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.cobaltspeech.cubic.sdk.CubicOuterClass.WordInfo, com.cobaltspeech.cubic.sdk.CubicOuterClass.WordInfo.Builder, com.cobaltspeech.cubic.sdk.CubicOuterClass.WordInfoOrBuilder> 
          getRawWordsFieldBuilder() {
        if (rawWordsBuilder_ == null) {
          rawWordsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.cobaltspeech.cubic.sdk.CubicOuterClass.WordInfo, com.cobaltspeech.cubic.sdk.CubicOuterClass.WordInfo.Builder, com.cobaltspeech.cubic.sdk.CubicOuterClass.WordInfoOrBuilder>(
                  rawWords_,
                  ((bitField0_ & 0x00000010) != 0),
                  getParentForChildren(),
                  isClean());
          rawWords_ = null;
        }
        return rawWordsBuilder_;
      }

      private com.google.protobuf.Duration startTime_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> startTimeBuilder_;
      /**
       * <pre>
       * Time offset relative to the beginning of audio received by the recognizer
       * and corresponding to the start of this utterance.
       * </pre>
       *
       * <code>.google.protobuf.Duration start_time = 4;</code>
       */
      public boolean hasStartTime() {
        return startTimeBuilder_ != null || startTime_ != null;
      }
      /**
       * <pre>
       * Time offset relative to the beginning of audio received by the recognizer
       * and corresponding to the start of this utterance.
       * </pre>
       *
       * <code>.google.protobuf.Duration start_time = 4;</code>
       */
      public com.google.protobuf.Duration getStartTime() {
        if (startTimeBuilder_ == null) {
          return startTime_ == null ? com.google.protobuf.Duration.getDefaultInstance() : startTime_;
        } else {
          return startTimeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Time offset relative to the beginning of audio received by the recognizer
       * and corresponding to the start of this utterance.
       * </pre>
       *
       * <code>.google.protobuf.Duration start_time = 4;</code>
       */
      public Builder setStartTime(com.google.protobuf.Duration value) {
        if (startTimeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          startTime_ = value;
          onChanged();
        } else {
          startTimeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Time offset relative to the beginning of audio received by the recognizer
       * and corresponding to the start of this utterance.
       * </pre>
       *
       * <code>.google.protobuf.Duration start_time = 4;</code>
       */
      public Builder setStartTime(
          com.google.protobuf.Duration.Builder builderForValue) {
        if (startTimeBuilder_ == null) {
          startTime_ = builderForValue.build();
          onChanged();
        } else {
          startTimeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Time offset relative to the beginning of audio received by the recognizer
       * and corresponding to the start of this utterance.
       * </pre>
       *
       * <code>.google.protobuf.Duration start_time = 4;</code>
       */
      public Builder mergeStartTime(com.google.protobuf.Duration value) {
        if (startTimeBuilder_ == null) {
          if (startTime_ != null) {
            startTime_ =
              com.google.protobuf.Duration.newBuilder(startTime_).mergeFrom(value).buildPartial();
          } else {
            startTime_ = value;
          }
          onChanged();
        } else {
          startTimeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Time offset relative to the beginning of audio received by the recognizer
       * and corresponding to the start of this utterance.
       * </pre>
       *
       * <code>.google.protobuf.Duration start_time = 4;</code>
       */
      public Builder clearStartTime() {
        if (startTimeBuilder_ == null) {
          startTime_ = null;
          onChanged();
        } else {
          startTime_ = null;
          startTimeBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Time offset relative to the beginning of audio received by the recognizer
       * and corresponding to the start of this utterance.
       * </pre>
       *
       * <code>.google.protobuf.Duration start_time = 4;</code>
       */
      public com.google.protobuf.Duration.Builder getStartTimeBuilder() {
        
        onChanged();
        return getStartTimeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Time offset relative to the beginning of audio received by the recognizer
       * and corresponding to the start of this utterance.
       * </pre>
       *
       * <code>.google.protobuf.Duration start_time = 4;</code>
       */
      public com.google.protobuf.DurationOrBuilder getStartTimeOrBuilder() {
        if (startTimeBuilder_ != null) {
          return startTimeBuilder_.getMessageOrBuilder();
        } else {
          return startTime_ == null ?
              com.google.protobuf.Duration.getDefaultInstance() : startTime_;
        }
      }
      /**
       * <pre>
       * Time offset relative to the beginning of audio received by the recognizer
       * and corresponding to the start of this utterance.
       * </pre>
       *
       * <code>.google.protobuf.Duration start_time = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> 
          getStartTimeFieldBuilder() {
        if (startTimeBuilder_ == null) {
          startTimeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>(
                  getStartTime(),
                  getParentForChildren(),
                  isClean());
          startTime_ = null;
        }
        return startTimeBuilder_;
      }

      private com.google.protobuf.Duration duration_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> durationBuilder_;
      /**
       * <pre>
       * Duration of the current utterance in the spoken audio.
       * </pre>
       *
       * <code>.google.protobuf.Duration duration = 5;</code>
       */
      public boolean hasDuration() {
        return durationBuilder_ != null || duration_ != null;
      }
      /**
       * <pre>
       * Duration of the current utterance in the spoken audio.
       * </pre>
       *
       * <code>.google.protobuf.Duration duration = 5;</code>
       */
      public com.google.protobuf.Duration getDuration() {
        if (durationBuilder_ == null) {
          return duration_ == null ? com.google.protobuf.Duration.getDefaultInstance() : duration_;
        } else {
          return durationBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Duration of the current utterance in the spoken audio.
       * </pre>
       *
       * <code>.google.protobuf.Duration duration = 5;</code>
       */
      public Builder setDuration(com.google.protobuf.Duration value) {
        if (durationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          duration_ = value;
          onChanged();
        } else {
          durationBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Duration of the current utterance in the spoken audio.
       * </pre>
       *
       * <code>.google.protobuf.Duration duration = 5;</code>
       */
      public Builder setDuration(
          com.google.protobuf.Duration.Builder builderForValue) {
        if (durationBuilder_ == null) {
          duration_ = builderForValue.build();
          onChanged();
        } else {
          durationBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Duration of the current utterance in the spoken audio.
       * </pre>
       *
       * <code>.google.protobuf.Duration duration = 5;</code>
       */
      public Builder mergeDuration(com.google.protobuf.Duration value) {
        if (durationBuilder_ == null) {
          if (duration_ != null) {
            duration_ =
              com.google.protobuf.Duration.newBuilder(duration_).mergeFrom(value).buildPartial();
          } else {
            duration_ = value;
          }
          onChanged();
        } else {
          durationBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Duration of the current utterance in the spoken audio.
       * </pre>
       *
       * <code>.google.protobuf.Duration duration = 5;</code>
       */
      public Builder clearDuration() {
        if (durationBuilder_ == null) {
          duration_ = null;
          onChanged();
        } else {
          duration_ = null;
          durationBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Duration of the current utterance in the spoken audio.
       * </pre>
       *
       * <code>.google.protobuf.Duration duration = 5;</code>
       */
      public com.google.protobuf.Duration.Builder getDurationBuilder() {
        
        onChanged();
        return getDurationFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Duration of the current utterance in the spoken audio.
       * </pre>
       *
       * <code>.google.protobuf.Duration duration = 5;</code>
       */
      public com.google.protobuf.DurationOrBuilder getDurationOrBuilder() {
        if (durationBuilder_ != null) {
          return durationBuilder_.getMessageOrBuilder();
        } else {
          return duration_ == null ?
              com.google.protobuf.Duration.getDefaultInstance() : duration_;
        }
      }
      /**
       * <pre>
       * Duration of the current utterance in the spoken audio.
       * </pre>
       *
       * <code>.google.protobuf.Duration duration = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> 
          getDurationFieldBuilder() {
        if (durationBuilder_ == null) {
          durationBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>(
                  getDuration(),
                  getParentForChildren(),
                  isClean());
          duration_ = null;
        }
        return durationBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:cobaltspeech.cubic.RecognitionAlternative)
    }

    // @@protoc_insertion_point(class_scope:cobaltspeech.cubic.RecognitionAlternative)
    private static final com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAlternative DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAlternative();
    }

    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAlternative getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RecognitionAlternative>
        PARSER = new com.google.protobuf.AbstractParser<RecognitionAlternative>() {
      @java.lang.Override
      public RecognitionAlternative parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RecognitionAlternative(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RecognitionAlternative> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RecognitionAlternative> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionAlternative getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface WordInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:cobaltspeech.cubic.WordInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The actual word in the text
     * </pre>
     *
     * <code>string word = 1;</code>
     */
    java.lang.String getWord();
    /**
     * <pre>
     * The actual word in the text
     * </pre>
     *
     * <code>string word = 1;</code>
     */
    com.google.protobuf.ByteString
        getWordBytes();

    /**
     * <pre>
     * Confidence estimate between 0 and 1.  A higher number represents a
     * higher likelihood that the word was correctly recognized.
     * </pre>
     *
     * <code>double confidence = 2;</code>
     */
    double getConfidence();

    /**
     * <pre>
     * Time offset relative to the beginning of audio received by the recognizer
     * and corresponding to the start of this spoken word.
     * </pre>
     *
     * <code>.google.protobuf.Duration start_time = 3;</code>
     */
    boolean hasStartTime();
    /**
     * <pre>
     * Time offset relative to the beginning of audio received by the recognizer
     * and corresponding to the start of this spoken word.
     * </pre>
     *
     * <code>.google.protobuf.Duration start_time = 3;</code>
     */
    com.google.protobuf.Duration getStartTime();
    /**
     * <pre>
     * Time offset relative to the beginning of audio received by the recognizer
     * and corresponding to the start of this spoken word.
     * </pre>
     *
     * <code>.google.protobuf.Duration start_time = 3;</code>
     */
    com.google.protobuf.DurationOrBuilder getStartTimeOrBuilder();

    /**
     * <pre>
     * Duration of the current word in the spoken audio.
     * </pre>
     *
     * <code>.google.protobuf.Duration duration = 4;</code>
     */
    boolean hasDuration();
    /**
     * <pre>
     * Duration of the current word in the spoken audio.
     * </pre>
     *
     * <code>.google.protobuf.Duration duration = 4;</code>
     */
    com.google.protobuf.Duration getDuration();
    /**
     * <pre>
     * Duration of the current word in the spoken audio.
     * </pre>
     *
     * <code>.google.protobuf.Duration duration = 4;</code>
     */
    com.google.protobuf.DurationOrBuilder getDurationOrBuilder();
  }
  /**
   * <pre>
   * Word-specific information for recognized words
   * </pre>
   *
   * Protobuf type {@code cobaltspeech.cubic.WordInfo}
   */
  public  static final class WordInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:cobaltspeech.cubic.WordInfo)
      WordInfoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use WordInfo.newBuilder() to construct.
    private WordInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private WordInfo() {
      word_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private WordInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              word_ = s;
              break;
            }
            case 17: {

              confidence_ = input.readDouble();
              break;
            }
            case 26: {
              com.google.protobuf.Duration.Builder subBuilder = null;
              if (startTime_ != null) {
                subBuilder = startTime_.toBuilder();
              }
              startTime_ = input.readMessage(com.google.protobuf.Duration.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(startTime_);
                startTime_ = subBuilder.buildPartial();
              }

              break;
            }
            case 34: {
              com.google.protobuf.Duration.Builder subBuilder = null;
              if (duration_ != null) {
                subBuilder = duration_.toBuilder();
              }
              duration_ = input.readMessage(com.google.protobuf.Duration.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(duration_);
                duration_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.cobaltspeech.cubic.sdk.CubicOuterClass.internal_static_cobaltspeech_cubic_WordInfo_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.cobaltspeech.cubic.sdk.CubicOuterClass.internal_static_cobaltspeech_cubic_WordInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.cobaltspeech.cubic.sdk.CubicOuterClass.WordInfo.class, com.cobaltspeech.cubic.sdk.CubicOuterClass.WordInfo.Builder.class);
    }

    public static final int WORD_FIELD_NUMBER = 1;
    private volatile java.lang.Object word_;
    /**
     * <pre>
     * The actual word in the text
     * </pre>
     *
     * <code>string word = 1;</code>
     */
    public java.lang.String getWord() {
      java.lang.Object ref = word_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        word_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The actual word in the text
     * </pre>
     *
     * <code>string word = 1;</code>
     */
    public com.google.protobuf.ByteString
        getWordBytes() {
      java.lang.Object ref = word_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        word_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CONFIDENCE_FIELD_NUMBER = 2;
    private double confidence_;
    /**
     * <pre>
     * Confidence estimate between 0 and 1.  A higher number represents a
     * higher likelihood that the word was correctly recognized.
     * </pre>
     *
     * <code>double confidence = 2;</code>
     */
    public double getConfidence() {
      return confidence_;
    }

    public static final int START_TIME_FIELD_NUMBER = 3;
    private com.google.protobuf.Duration startTime_;
    /**
     * <pre>
     * Time offset relative to the beginning of audio received by the recognizer
     * and corresponding to the start of this spoken word.
     * </pre>
     *
     * <code>.google.protobuf.Duration start_time = 3;</code>
     */
    public boolean hasStartTime() {
      return startTime_ != null;
    }
    /**
     * <pre>
     * Time offset relative to the beginning of audio received by the recognizer
     * and corresponding to the start of this spoken word.
     * </pre>
     *
     * <code>.google.protobuf.Duration start_time = 3;</code>
     */
    public com.google.protobuf.Duration getStartTime() {
      return startTime_ == null ? com.google.protobuf.Duration.getDefaultInstance() : startTime_;
    }
    /**
     * <pre>
     * Time offset relative to the beginning of audio received by the recognizer
     * and corresponding to the start of this spoken word.
     * </pre>
     *
     * <code>.google.protobuf.Duration start_time = 3;</code>
     */
    public com.google.protobuf.DurationOrBuilder getStartTimeOrBuilder() {
      return getStartTime();
    }

    public static final int DURATION_FIELD_NUMBER = 4;
    private com.google.protobuf.Duration duration_;
    /**
     * <pre>
     * Duration of the current word in the spoken audio.
     * </pre>
     *
     * <code>.google.protobuf.Duration duration = 4;</code>
     */
    public boolean hasDuration() {
      return duration_ != null;
    }
    /**
     * <pre>
     * Duration of the current word in the spoken audio.
     * </pre>
     *
     * <code>.google.protobuf.Duration duration = 4;</code>
     */
    public com.google.protobuf.Duration getDuration() {
      return duration_ == null ? com.google.protobuf.Duration.getDefaultInstance() : duration_;
    }
    /**
     * <pre>
     * Duration of the current word in the spoken audio.
     * </pre>
     *
     * <code>.google.protobuf.Duration duration = 4;</code>
     */
    public com.google.protobuf.DurationOrBuilder getDurationOrBuilder() {
      return getDuration();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getWordBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, word_);
      }
      if (confidence_ != 0D) {
        output.writeDouble(2, confidence_);
      }
      if (startTime_ != null) {
        output.writeMessage(3, getStartTime());
      }
      if (duration_ != null) {
        output.writeMessage(4, getDuration());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getWordBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, word_);
      }
      if (confidence_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, confidence_);
      }
      if (startTime_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getStartTime());
      }
      if (duration_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getDuration());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.cobaltspeech.cubic.sdk.CubicOuterClass.WordInfo)) {
        return super.equals(obj);
      }
      com.cobaltspeech.cubic.sdk.CubicOuterClass.WordInfo other = (com.cobaltspeech.cubic.sdk.CubicOuterClass.WordInfo) obj;

      if (!getWord()
          .equals(other.getWord())) return false;
      if (java.lang.Double.doubleToLongBits(getConfidence())
          != java.lang.Double.doubleToLongBits(
              other.getConfidence())) return false;
      if (hasStartTime() != other.hasStartTime()) return false;
      if (hasStartTime()) {
        if (!getStartTime()
            .equals(other.getStartTime())) return false;
      }
      if (hasDuration() != other.hasDuration()) return false;
      if (hasDuration()) {
        if (!getDuration()
            .equals(other.getDuration())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + WORD_FIELD_NUMBER;
      hash = (53 * hash) + getWord().hashCode();
      hash = (37 * hash) + CONFIDENCE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getConfidence()));
      if (hasStartTime()) {
        hash = (37 * hash) + START_TIME_FIELD_NUMBER;
        hash = (53 * hash) + getStartTime().hashCode();
      }
      if (hasDuration()) {
        hash = (37 * hash) + DURATION_FIELD_NUMBER;
        hash = (53 * hash) + getDuration().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.WordInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.WordInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.WordInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.WordInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.WordInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.WordInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.WordInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.WordInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.WordInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.WordInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.WordInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.WordInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.cobaltspeech.cubic.sdk.CubicOuterClass.WordInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Word-specific information for recognized words
     * </pre>
     *
     * Protobuf type {@code cobaltspeech.cubic.WordInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:cobaltspeech.cubic.WordInfo)
        com.cobaltspeech.cubic.sdk.CubicOuterClass.WordInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.cobaltspeech.cubic.sdk.CubicOuterClass.internal_static_cobaltspeech_cubic_WordInfo_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.cobaltspeech.cubic.sdk.CubicOuterClass.internal_static_cobaltspeech_cubic_WordInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.cobaltspeech.cubic.sdk.CubicOuterClass.WordInfo.class, com.cobaltspeech.cubic.sdk.CubicOuterClass.WordInfo.Builder.class);
      }

      // Construct using com.cobaltspeech.cubic.sdk.CubicOuterClass.WordInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        word_ = "";

        confidence_ = 0D;

        if (startTimeBuilder_ == null) {
          startTime_ = null;
        } else {
          startTime_ = null;
          startTimeBuilder_ = null;
        }
        if (durationBuilder_ == null) {
          duration_ = null;
        } else {
          duration_ = null;
          durationBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.cobaltspeech.cubic.sdk.CubicOuterClass.internal_static_cobaltspeech_cubic_WordInfo_descriptor;
      }

      @java.lang.Override
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.WordInfo getDefaultInstanceForType() {
        return com.cobaltspeech.cubic.sdk.CubicOuterClass.WordInfo.getDefaultInstance();
      }

      @java.lang.Override
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.WordInfo build() {
        com.cobaltspeech.cubic.sdk.CubicOuterClass.WordInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.WordInfo buildPartial() {
        com.cobaltspeech.cubic.sdk.CubicOuterClass.WordInfo result = new com.cobaltspeech.cubic.sdk.CubicOuterClass.WordInfo(this);
        result.word_ = word_;
        result.confidence_ = confidence_;
        if (startTimeBuilder_ == null) {
          result.startTime_ = startTime_;
        } else {
          result.startTime_ = startTimeBuilder_.build();
        }
        if (durationBuilder_ == null) {
          result.duration_ = duration_;
        } else {
          result.duration_ = durationBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.cobaltspeech.cubic.sdk.CubicOuterClass.WordInfo) {
          return mergeFrom((com.cobaltspeech.cubic.sdk.CubicOuterClass.WordInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.cobaltspeech.cubic.sdk.CubicOuterClass.WordInfo other) {
        if (other == com.cobaltspeech.cubic.sdk.CubicOuterClass.WordInfo.getDefaultInstance()) return this;
        if (!other.getWord().isEmpty()) {
          word_ = other.word_;
          onChanged();
        }
        if (other.getConfidence() != 0D) {
          setConfidence(other.getConfidence());
        }
        if (other.hasStartTime()) {
          mergeStartTime(other.getStartTime());
        }
        if (other.hasDuration()) {
          mergeDuration(other.getDuration());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.cobaltspeech.cubic.sdk.CubicOuterClass.WordInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.cobaltspeech.cubic.sdk.CubicOuterClass.WordInfo) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object word_ = "";
      /**
       * <pre>
       * The actual word in the text
       * </pre>
       *
       * <code>string word = 1;</code>
       */
      public java.lang.String getWord() {
        java.lang.Object ref = word_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          word_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The actual word in the text
       * </pre>
       *
       * <code>string word = 1;</code>
       */
      public com.google.protobuf.ByteString
          getWordBytes() {
        java.lang.Object ref = word_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          word_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The actual word in the text
       * </pre>
       *
       * <code>string word = 1;</code>
       */
      public Builder setWord(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        word_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The actual word in the text
       * </pre>
       *
       * <code>string word = 1;</code>
       */
      public Builder clearWord() {
        
        word_ = getDefaultInstance().getWord();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The actual word in the text
       * </pre>
       *
       * <code>string word = 1;</code>
       */
      public Builder setWordBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        word_ = value;
        onChanged();
        return this;
      }

      private double confidence_ ;
      /**
       * <pre>
       * Confidence estimate between 0 and 1.  A higher number represents a
       * higher likelihood that the word was correctly recognized.
       * </pre>
       *
       * <code>double confidence = 2;</code>
       */
      public double getConfidence() {
        return confidence_;
      }
      /**
       * <pre>
       * Confidence estimate between 0 and 1.  A higher number represents a
       * higher likelihood that the word was correctly recognized.
       * </pre>
       *
       * <code>double confidence = 2;</code>
       */
      public Builder setConfidence(double value) {
        
        confidence_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Confidence estimate between 0 and 1.  A higher number represents a
       * higher likelihood that the word was correctly recognized.
       * </pre>
       *
       * <code>double confidence = 2;</code>
       */
      public Builder clearConfidence() {
        
        confidence_ = 0D;
        onChanged();
        return this;
      }

      private com.google.protobuf.Duration startTime_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> startTimeBuilder_;
      /**
       * <pre>
       * Time offset relative to the beginning of audio received by the recognizer
       * and corresponding to the start of this spoken word.
       * </pre>
       *
       * <code>.google.protobuf.Duration start_time = 3;</code>
       */
      public boolean hasStartTime() {
        return startTimeBuilder_ != null || startTime_ != null;
      }
      /**
       * <pre>
       * Time offset relative to the beginning of audio received by the recognizer
       * and corresponding to the start of this spoken word.
       * </pre>
       *
       * <code>.google.protobuf.Duration start_time = 3;</code>
       */
      public com.google.protobuf.Duration getStartTime() {
        if (startTimeBuilder_ == null) {
          return startTime_ == null ? com.google.protobuf.Duration.getDefaultInstance() : startTime_;
        } else {
          return startTimeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Time offset relative to the beginning of audio received by the recognizer
       * and corresponding to the start of this spoken word.
       * </pre>
       *
       * <code>.google.protobuf.Duration start_time = 3;</code>
       */
      public Builder setStartTime(com.google.protobuf.Duration value) {
        if (startTimeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          startTime_ = value;
          onChanged();
        } else {
          startTimeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Time offset relative to the beginning of audio received by the recognizer
       * and corresponding to the start of this spoken word.
       * </pre>
       *
       * <code>.google.protobuf.Duration start_time = 3;</code>
       */
      public Builder setStartTime(
          com.google.protobuf.Duration.Builder builderForValue) {
        if (startTimeBuilder_ == null) {
          startTime_ = builderForValue.build();
          onChanged();
        } else {
          startTimeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Time offset relative to the beginning of audio received by the recognizer
       * and corresponding to the start of this spoken word.
       * </pre>
       *
       * <code>.google.protobuf.Duration start_time = 3;</code>
       */
      public Builder mergeStartTime(com.google.protobuf.Duration value) {
        if (startTimeBuilder_ == null) {
          if (startTime_ != null) {
            startTime_ =
              com.google.protobuf.Duration.newBuilder(startTime_).mergeFrom(value).buildPartial();
          } else {
            startTime_ = value;
          }
          onChanged();
        } else {
          startTimeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Time offset relative to the beginning of audio received by the recognizer
       * and corresponding to the start of this spoken word.
       * </pre>
       *
       * <code>.google.protobuf.Duration start_time = 3;</code>
       */
      public Builder clearStartTime() {
        if (startTimeBuilder_ == null) {
          startTime_ = null;
          onChanged();
        } else {
          startTime_ = null;
          startTimeBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Time offset relative to the beginning of audio received by the recognizer
       * and corresponding to the start of this spoken word.
       * </pre>
       *
       * <code>.google.protobuf.Duration start_time = 3;</code>
       */
      public com.google.protobuf.Duration.Builder getStartTimeBuilder() {
        
        onChanged();
        return getStartTimeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Time offset relative to the beginning of audio received by the recognizer
       * and corresponding to the start of this spoken word.
       * </pre>
       *
       * <code>.google.protobuf.Duration start_time = 3;</code>
       */
      public com.google.protobuf.DurationOrBuilder getStartTimeOrBuilder() {
        if (startTimeBuilder_ != null) {
          return startTimeBuilder_.getMessageOrBuilder();
        } else {
          return startTime_ == null ?
              com.google.protobuf.Duration.getDefaultInstance() : startTime_;
        }
      }
      /**
       * <pre>
       * Time offset relative to the beginning of audio received by the recognizer
       * and corresponding to the start of this spoken word.
       * </pre>
       *
       * <code>.google.protobuf.Duration start_time = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> 
          getStartTimeFieldBuilder() {
        if (startTimeBuilder_ == null) {
          startTimeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>(
                  getStartTime(),
                  getParentForChildren(),
                  isClean());
          startTime_ = null;
        }
        return startTimeBuilder_;
      }

      private com.google.protobuf.Duration duration_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> durationBuilder_;
      /**
       * <pre>
       * Duration of the current word in the spoken audio.
       * </pre>
       *
       * <code>.google.protobuf.Duration duration = 4;</code>
       */
      public boolean hasDuration() {
        return durationBuilder_ != null || duration_ != null;
      }
      /**
       * <pre>
       * Duration of the current word in the spoken audio.
       * </pre>
       *
       * <code>.google.protobuf.Duration duration = 4;</code>
       */
      public com.google.protobuf.Duration getDuration() {
        if (durationBuilder_ == null) {
          return duration_ == null ? com.google.protobuf.Duration.getDefaultInstance() : duration_;
        } else {
          return durationBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Duration of the current word in the spoken audio.
       * </pre>
       *
       * <code>.google.protobuf.Duration duration = 4;</code>
       */
      public Builder setDuration(com.google.protobuf.Duration value) {
        if (durationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          duration_ = value;
          onChanged();
        } else {
          durationBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Duration of the current word in the spoken audio.
       * </pre>
       *
       * <code>.google.protobuf.Duration duration = 4;</code>
       */
      public Builder setDuration(
          com.google.protobuf.Duration.Builder builderForValue) {
        if (durationBuilder_ == null) {
          duration_ = builderForValue.build();
          onChanged();
        } else {
          durationBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Duration of the current word in the spoken audio.
       * </pre>
       *
       * <code>.google.protobuf.Duration duration = 4;</code>
       */
      public Builder mergeDuration(com.google.protobuf.Duration value) {
        if (durationBuilder_ == null) {
          if (duration_ != null) {
            duration_ =
              com.google.protobuf.Duration.newBuilder(duration_).mergeFrom(value).buildPartial();
          } else {
            duration_ = value;
          }
          onChanged();
        } else {
          durationBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Duration of the current word in the spoken audio.
       * </pre>
       *
       * <code>.google.protobuf.Duration duration = 4;</code>
       */
      public Builder clearDuration() {
        if (durationBuilder_ == null) {
          duration_ = null;
          onChanged();
        } else {
          duration_ = null;
          durationBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Duration of the current word in the spoken audio.
       * </pre>
       *
       * <code>.google.protobuf.Duration duration = 4;</code>
       */
      public com.google.protobuf.Duration.Builder getDurationBuilder() {
        
        onChanged();
        return getDurationFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Duration of the current word in the spoken audio.
       * </pre>
       *
       * <code>.google.protobuf.Duration duration = 4;</code>
       */
      public com.google.protobuf.DurationOrBuilder getDurationOrBuilder() {
        if (durationBuilder_ != null) {
          return durationBuilder_.getMessageOrBuilder();
        } else {
          return duration_ == null ?
              com.google.protobuf.Duration.getDefaultInstance() : duration_;
        }
      }
      /**
       * <pre>
       * Duration of the current word in the spoken audio.
       * </pre>
       *
       * <code>.google.protobuf.Duration duration = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> 
          getDurationFieldBuilder() {
        if (durationBuilder_ == null) {
          durationBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>(
                  getDuration(),
                  getParentForChildren(),
                  isClean());
          duration_ = null;
        }
        return durationBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:cobaltspeech.cubic.WordInfo)
    }

    // @@protoc_insertion_point(class_scope:cobaltspeech.cubic.WordInfo)
    private static final com.cobaltspeech.cubic.sdk.CubicOuterClass.WordInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.cobaltspeech.cubic.sdk.CubicOuterClass.WordInfo();
    }

    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.WordInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<WordInfo>
        PARSER = new com.google.protobuf.AbstractParser<WordInfo>() {
      @java.lang.Override
      public WordInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new WordInfo(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<WordInfo> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<WordInfo> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.cobaltspeech.cubic.sdk.CubicOuterClass.WordInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RecognitionConfusionNetworkOrBuilder extends
      // @@protoc_insertion_point(interface_extends:cobaltspeech.cubic.RecognitionConfusionNetwork)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .cobaltspeech.cubic.ConfusionNetworkLink links = 1;</code>
     */
    java.util.List<com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkLink> 
        getLinksList();
    /**
     * <code>repeated .cobaltspeech.cubic.ConfusionNetworkLink links = 1;</code>
     */
    com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkLink getLinks(int index);
    /**
     * <code>repeated .cobaltspeech.cubic.ConfusionNetworkLink links = 1;</code>
     */
    int getLinksCount();
    /**
     * <code>repeated .cobaltspeech.cubic.ConfusionNetworkLink links = 1;</code>
     */
    java.util.List<? extends com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkLinkOrBuilder> 
        getLinksOrBuilderList();
    /**
     * <code>repeated .cobaltspeech.cubic.ConfusionNetworkLink links = 1;</code>
     */
    com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkLinkOrBuilder getLinksOrBuilder(
        int index);
  }
  /**
   * <pre>
   * Confusion network in recognition output
   * </pre>
   *
   * Protobuf type {@code cobaltspeech.cubic.RecognitionConfusionNetwork}
   */
  public  static final class RecognitionConfusionNetwork extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:cobaltspeech.cubic.RecognitionConfusionNetwork)
      RecognitionConfusionNetworkOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use RecognitionConfusionNetwork.newBuilder() to construct.
    private RecognitionConfusionNetwork(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RecognitionConfusionNetwork() {
      links_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private RecognitionConfusionNetwork(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                links_ = new java.util.ArrayList<com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkLink>();
                mutable_bitField0_ |= 0x00000001;
              }
              links_.add(
                  input.readMessage(com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkLink.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          links_ = java.util.Collections.unmodifiableList(links_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.cobaltspeech.cubic.sdk.CubicOuterClass.internal_static_cobaltspeech_cubic_RecognitionConfusionNetwork_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.cobaltspeech.cubic.sdk.CubicOuterClass.internal_static_cobaltspeech_cubic_RecognitionConfusionNetwork_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfusionNetwork.class, com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfusionNetwork.Builder.class);
    }

    public static final int LINKS_FIELD_NUMBER = 1;
    private java.util.List<com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkLink> links_;
    /**
     * <code>repeated .cobaltspeech.cubic.ConfusionNetworkLink links = 1;</code>
     */
    public java.util.List<com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkLink> getLinksList() {
      return links_;
    }
    /**
     * <code>repeated .cobaltspeech.cubic.ConfusionNetworkLink links = 1;</code>
     */
    public java.util.List<? extends com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkLinkOrBuilder> 
        getLinksOrBuilderList() {
      return links_;
    }
    /**
     * <code>repeated .cobaltspeech.cubic.ConfusionNetworkLink links = 1;</code>
     */
    public int getLinksCount() {
      return links_.size();
    }
    /**
     * <code>repeated .cobaltspeech.cubic.ConfusionNetworkLink links = 1;</code>
     */
    public com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkLink getLinks(int index) {
      return links_.get(index);
    }
    /**
     * <code>repeated .cobaltspeech.cubic.ConfusionNetworkLink links = 1;</code>
     */
    public com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkLinkOrBuilder getLinksOrBuilder(
        int index) {
      return links_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < links_.size(); i++) {
        output.writeMessage(1, links_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < links_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, links_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfusionNetwork)) {
        return super.equals(obj);
      }
      com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfusionNetwork other = (com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfusionNetwork) obj;

      if (!getLinksList()
          .equals(other.getLinksList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getLinksCount() > 0) {
        hash = (37 * hash) + LINKS_FIELD_NUMBER;
        hash = (53 * hash) + getLinksList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfusionNetwork parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfusionNetwork parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfusionNetwork parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfusionNetwork parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfusionNetwork parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfusionNetwork parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfusionNetwork parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfusionNetwork parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfusionNetwork parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfusionNetwork parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfusionNetwork parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfusionNetwork parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfusionNetwork prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Confusion network in recognition output
     * </pre>
     *
     * Protobuf type {@code cobaltspeech.cubic.RecognitionConfusionNetwork}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:cobaltspeech.cubic.RecognitionConfusionNetwork)
        com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfusionNetworkOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.cobaltspeech.cubic.sdk.CubicOuterClass.internal_static_cobaltspeech_cubic_RecognitionConfusionNetwork_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.cobaltspeech.cubic.sdk.CubicOuterClass.internal_static_cobaltspeech_cubic_RecognitionConfusionNetwork_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfusionNetwork.class, com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfusionNetwork.Builder.class);
      }

      // Construct using com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfusionNetwork.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getLinksFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (linksBuilder_ == null) {
          links_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          linksBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.cobaltspeech.cubic.sdk.CubicOuterClass.internal_static_cobaltspeech_cubic_RecognitionConfusionNetwork_descriptor;
      }

      @java.lang.Override
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfusionNetwork getDefaultInstanceForType() {
        return com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfusionNetwork.getDefaultInstance();
      }

      @java.lang.Override
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfusionNetwork build() {
        com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfusionNetwork result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfusionNetwork buildPartial() {
        com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfusionNetwork result = new com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfusionNetwork(this);
        int from_bitField0_ = bitField0_;
        if (linksBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            links_ = java.util.Collections.unmodifiableList(links_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.links_ = links_;
        } else {
          result.links_ = linksBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfusionNetwork) {
          return mergeFrom((com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfusionNetwork)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfusionNetwork other) {
        if (other == com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfusionNetwork.getDefaultInstance()) return this;
        if (linksBuilder_ == null) {
          if (!other.links_.isEmpty()) {
            if (links_.isEmpty()) {
              links_ = other.links_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureLinksIsMutable();
              links_.addAll(other.links_);
            }
            onChanged();
          }
        } else {
          if (!other.links_.isEmpty()) {
            if (linksBuilder_.isEmpty()) {
              linksBuilder_.dispose();
              linksBuilder_ = null;
              links_ = other.links_;
              bitField0_ = (bitField0_ & ~0x00000001);
              linksBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getLinksFieldBuilder() : null;
            } else {
              linksBuilder_.addAllMessages(other.links_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfusionNetwork parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfusionNetwork) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkLink> links_ =
        java.util.Collections.emptyList();
      private void ensureLinksIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          links_ = new java.util.ArrayList<com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkLink>(links_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkLink, com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkLink.Builder, com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkLinkOrBuilder> linksBuilder_;

      /**
       * <code>repeated .cobaltspeech.cubic.ConfusionNetworkLink links = 1;</code>
       */
      public java.util.List<com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkLink> getLinksList() {
        if (linksBuilder_ == null) {
          return java.util.Collections.unmodifiableList(links_);
        } else {
          return linksBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .cobaltspeech.cubic.ConfusionNetworkLink links = 1;</code>
       */
      public int getLinksCount() {
        if (linksBuilder_ == null) {
          return links_.size();
        } else {
          return linksBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .cobaltspeech.cubic.ConfusionNetworkLink links = 1;</code>
       */
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkLink getLinks(int index) {
        if (linksBuilder_ == null) {
          return links_.get(index);
        } else {
          return linksBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .cobaltspeech.cubic.ConfusionNetworkLink links = 1;</code>
       */
      public Builder setLinks(
          int index, com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkLink value) {
        if (linksBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLinksIsMutable();
          links_.set(index, value);
          onChanged();
        } else {
          linksBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .cobaltspeech.cubic.ConfusionNetworkLink links = 1;</code>
       */
      public Builder setLinks(
          int index, com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkLink.Builder builderForValue) {
        if (linksBuilder_ == null) {
          ensureLinksIsMutable();
          links_.set(index, builderForValue.build());
          onChanged();
        } else {
          linksBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .cobaltspeech.cubic.ConfusionNetworkLink links = 1;</code>
       */
      public Builder addLinks(com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkLink value) {
        if (linksBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLinksIsMutable();
          links_.add(value);
          onChanged();
        } else {
          linksBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .cobaltspeech.cubic.ConfusionNetworkLink links = 1;</code>
       */
      public Builder addLinks(
          int index, com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkLink value) {
        if (linksBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLinksIsMutable();
          links_.add(index, value);
          onChanged();
        } else {
          linksBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .cobaltspeech.cubic.ConfusionNetworkLink links = 1;</code>
       */
      public Builder addLinks(
          com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkLink.Builder builderForValue) {
        if (linksBuilder_ == null) {
          ensureLinksIsMutable();
          links_.add(builderForValue.build());
          onChanged();
        } else {
          linksBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .cobaltspeech.cubic.ConfusionNetworkLink links = 1;</code>
       */
      public Builder addLinks(
          int index, com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkLink.Builder builderForValue) {
        if (linksBuilder_ == null) {
          ensureLinksIsMutable();
          links_.add(index, builderForValue.build());
          onChanged();
        } else {
          linksBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .cobaltspeech.cubic.ConfusionNetworkLink links = 1;</code>
       */
      public Builder addAllLinks(
          java.lang.Iterable<? extends com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkLink> values) {
        if (linksBuilder_ == null) {
          ensureLinksIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, links_);
          onChanged();
        } else {
          linksBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .cobaltspeech.cubic.ConfusionNetworkLink links = 1;</code>
       */
      public Builder clearLinks() {
        if (linksBuilder_ == null) {
          links_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          linksBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .cobaltspeech.cubic.ConfusionNetworkLink links = 1;</code>
       */
      public Builder removeLinks(int index) {
        if (linksBuilder_ == null) {
          ensureLinksIsMutable();
          links_.remove(index);
          onChanged();
        } else {
          linksBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .cobaltspeech.cubic.ConfusionNetworkLink links = 1;</code>
       */
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkLink.Builder getLinksBuilder(
          int index) {
        return getLinksFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .cobaltspeech.cubic.ConfusionNetworkLink links = 1;</code>
       */
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkLinkOrBuilder getLinksOrBuilder(
          int index) {
        if (linksBuilder_ == null) {
          return links_.get(index);  } else {
          return linksBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .cobaltspeech.cubic.ConfusionNetworkLink links = 1;</code>
       */
      public java.util.List<? extends com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkLinkOrBuilder> 
           getLinksOrBuilderList() {
        if (linksBuilder_ != null) {
          return linksBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(links_);
        }
      }
      /**
       * <code>repeated .cobaltspeech.cubic.ConfusionNetworkLink links = 1;</code>
       */
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkLink.Builder addLinksBuilder() {
        return getLinksFieldBuilder().addBuilder(
            com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkLink.getDefaultInstance());
      }
      /**
       * <code>repeated .cobaltspeech.cubic.ConfusionNetworkLink links = 1;</code>
       */
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkLink.Builder addLinksBuilder(
          int index) {
        return getLinksFieldBuilder().addBuilder(
            index, com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkLink.getDefaultInstance());
      }
      /**
       * <code>repeated .cobaltspeech.cubic.ConfusionNetworkLink links = 1;</code>
       */
      public java.util.List<com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkLink.Builder> 
           getLinksBuilderList() {
        return getLinksFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkLink, com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkLink.Builder, com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkLinkOrBuilder> 
          getLinksFieldBuilder() {
        if (linksBuilder_ == null) {
          linksBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkLink, com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkLink.Builder, com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkLinkOrBuilder>(
                  links_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          links_ = null;
        }
        return linksBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:cobaltspeech.cubic.RecognitionConfusionNetwork)
    }

    // @@protoc_insertion_point(class_scope:cobaltspeech.cubic.RecognitionConfusionNetwork)
    private static final com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfusionNetwork DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfusionNetwork();
    }

    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfusionNetwork getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RecognitionConfusionNetwork>
        PARSER = new com.google.protobuf.AbstractParser<RecognitionConfusionNetwork>() {
      @java.lang.Override
      public RecognitionConfusionNetwork parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RecognitionConfusionNetwork(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RecognitionConfusionNetwork> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RecognitionConfusionNetwork> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.cobaltspeech.cubic.sdk.CubicOuterClass.RecognitionConfusionNetwork getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ConfusionNetworkLinkOrBuilder extends
      // @@protoc_insertion_point(interface_extends:cobaltspeech.cubic.ConfusionNetworkLink)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Time offset relative to the beginning of audio received by the recognizer
     * and corresponding to the start of this link
     * </pre>
     *
     * <code>.google.protobuf.Duration start_time = 1;</code>
     */
    boolean hasStartTime();
    /**
     * <pre>
     * Time offset relative to the beginning of audio received by the recognizer
     * and corresponding to the start of this link
     * </pre>
     *
     * <code>.google.protobuf.Duration start_time = 1;</code>
     */
    com.google.protobuf.Duration getStartTime();
    /**
     * <pre>
     * Time offset relative to the beginning of audio received by the recognizer
     * and corresponding to the start of this link
     * </pre>
     *
     * <code>.google.protobuf.Duration start_time = 1;</code>
     */
    com.google.protobuf.DurationOrBuilder getStartTimeOrBuilder();

    /**
     * <pre>
     * Duration of the current link in the confusion network
     * </pre>
     *
     * <code>.google.protobuf.Duration duration = 2;</code>
     */
    boolean hasDuration();
    /**
     * <pre>
     * Duration of the current link in the confusion network
     * </pre>
     *
     * <code>.google.protobuf.Duration duration = 2;</code>
     */
    com.google.protobuf.Duration getDuration();
    /**
     * <pre>
     * Duration of the current link in the confusion network
     * </pre>
     *
     * <code>.google.protobuf.Duration duration = 2;</code>
     */
    com.google.protobuf.DurationOrBuilder getDurationOrBuilder();

    /**
     * <pre>
     * Arcs between this link
     * </pre>
     *
     * <code>repeated .cobaltspeech.cubic.ConfusionNetworkArc arcs = 3;</code>
     */
    java.util.List<com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkArc> 
        getArcsList();
    /**
     * <pre>
     * Arcs between this link
     * </pre>
     *
     * <code>repeated .cobaltspeech.cubic.ConfusionNetworkArc arcs = 3;</code>
     */
    com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkArc getArcs(int index);
    /**
     * <pre>
     * Arcs between this link
     * </pre>
     *
     * <code>repeated .cobaltspeech.cubic.ConfusionNetworkArc arcs = 3;</code>
     */
    int getArcsCount();
    /**
     * <pre>
     * Arcs between this link
     * </pre>
     *
     * <code>repeated .cobaltspeech.cubic.ConfusionNetworkArc arcs = 3;</code>
     */
    java.util.List<? extends com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkArcOrBuilder> 
        getArcsOrBuilderList();
    /**
     * <pre>
     * Arcs between this link
     * </pre>
     *
     * <code>repeated .cobaltspeech.cubic.ConfusionNetworkArc arcs = 3;</code>
     */
    com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkArcOrBuilder getArcsOrBuilder(
        int index);
  }
  /**
   * <pre>
   * A Link inside a confusion network
   * </pre>
   *
   * Protobuf type {@code cobaltspeech.cubic.ConfusionNetworkLink}
   */
  public  static final class ConfusionNetworkLink extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:cobaltspeech.cubic.ConfusionNetworkLink)
      ConfusionNetworkLinkOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ConfusionNetworkLink.newBuilder() to construct.
    private ConfusionNetworkLink(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ConfusionNetworkLink() {
      arcs_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ConfusionNetworkLink(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.google.protobuf.Duration.Builder subBuilder = null;
              if (startTime_ != null) {
                subBuilder = startTime_.toBuilder();
              }
              startTime_ = input.readMessage(com.google.protobuf.Duration.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(startTime_);
                startTime_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              com.google.protobuf.Duration.Builder subBuilder = null;
              if (duration_ != null) {
                subBuilder = duration_.toBuilder();
              }
              duration_ = input.readMessage(com.google.protobuf.Duration.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(duration_);
                duration_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) != 0)) {
                arcs_ = new java.util.ArrayList<com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkArc>();
                mutable_bitField0_ |= 0x00000004;
              }
              arcs_.add(
                  input.readMessage(com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkArc.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) != 0)) {
          arcs_ = java.util.Collections.unmodifiableList(arcs_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.cobaltspeech.cubic.sdk.CubicOuterClass.internal_static_cobaltspeech_cubic_ConfusionNetworkLink_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.cobaltspeech.cubic.sdk.CubicOuterClass.internal_static_cobaltspeech_cubic_ConfusionNetworkLink_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkLink.class, com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkLink.Builder.class);
    }

    private int bitField0_;
    public static final int START_TIME_FIELD_NUMBER = 1;
    private com.google.protobuf.Duration startTime_;
    /**
     * <pre>
     * Time offset relative to the beginning of audio received by the recognizer
     * and corresponding to the start of this link
     * </pre>
     *
     * <code>.google.protobuf.Duration start_time = 1;</code>
     */
    public boolean hasStartTime() {
      return startTime_ != null;
    }
    /**
     * <pre>
     * Time offset relative to the beginning of audio received by the recognizer
     * and corresponding to the start of this link
     * </pre>
     *
     * <code>.google.protobuf.Duration start_time = 1;</code>
     */
    public com.google.protobuf.Duration getStartTime() {
      return startTime_ == null ? com.google.protobuf.Duration.getDefaultInstance() : startTime_;
    }
    /**
     * <pre>
     * Time offset relative to the beginning of audio received by the recognizer
     * and corresponding to the start of this link
     * </pre>
     *
     * <code>.google.protobuf.Duration start_time = 1;</code>
     */
    public com.google.protobuf.DurationOrBuilder getStartTimeOrBuilder() {
      return getStartTime();
    }

    public static final int DURATION_FIELD_NUMBER = 2;
    private com.google.protobuf.Duration duration_;
    /**
     * <pre>
     * Duration of the current link in the confusion network
     * </pre>
     *
     * <code>.google.protobuf.Duration duration = 2;</code>
     */
    public boolean hasDuration() {
      return duration_ != null;
    }
    /**
     * <pre>
     * Duration of the current link in the confusion network
     * </pre>
     *
     * <code>.google.protobuf.Duration duration = 2;</code>
     */
    public com.google.protobuf.Duration getDuration() {
      return duration_ == null ? com.google.protobuf.Duration.getDefaultInstance() : duration_;
    }
    /**
     * <pre>
     * Duration of the current link in the confusion network
     * </pre>
     *
     * <code>.google.protobuf.Duration duration = 2;</code>
     */
    public com.google.protobuf.DurationOrBuilder getDurationOrBuilder() {
      return getDuration();
    }

    public static final int ARCS_FIELD_NUMBER = 3;
    private java.util.List<com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkArc> arcs_;
    /**
     * <pre>
     * Arcs between this link
     * </pre>
     *
     * <code>repeated .cobaltspeech.cubic.ConfusionNetworkArc arcs = 3;</code>
     */
    public java.util.List<com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkArc> getArcsList() {
      return arcs_;
    }
    /**
     * <pre>
     * Arcs between this link
     * </pre>
     *
     * <code>repeated .cobaltspeech.cubic.ConfusionNetworkArc arcs = 3;</code>
     */
    public java.util.List<? extends com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkArcOrBuilder> 
        getArcsOrBuilderList() {
      return arcs_;
    }
    /**
     * <pre>
     * Arcs between this link
     * </pre>
     *
     * <code>repeated .cobaltspeech.cubic.ConfusionNetworkArc arcs = 3;</code>
     */
    public int getArcsCount() {
      return arcs_.size();
    }
    /**
     * <pre>
     * Arcs between this link
     * </pre>
     *
     * <code>repeated .cobaltspeech.cubic.ConfusionNetworkArc arcs = 3;</code>
     */
    public com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkArc getArcs(int index) {
      return arcs_.get(index);
    }
    /**
     * <pre>
     * Arcs between this link
     * </pre>
     *
     * <code>repeated .cobaltspeech.cubic.ConfusionNetworkArc arcs = 3;</code>
     */
    public com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkArcOrBuilder getArcsOrBuilder(
        int index) {
      return arcs_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (startTime_ != null) {
        output.writeMessage(1, getStartTime());
      }
      if (duration_ != null) {
        output.writeMessage(2, getDuration());
      }
      for (int i = 0; i < arcs_.size(); i++) {
        output.writeMessage(3, arcs_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (startTime_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getStartTime());
      }
      if (duration_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getDuration());
      }
      for (int i = 0; i < arcs_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, arcs_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkLink)) {
        return super.equals(obj);
      }
      com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkLink other = (com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkLink) obj;

      if (hasStartTime() != other.hasStartTime()) return false;
      if (hasStartTime()) {
        if (!getStartTime()
            .equals(other.getStartTime())) return false;
      }
      if (hasDuration() != other.hasDuration()) return false;
      if (hasDuration()) {
        if (!getDuration()
            .equals(other.getDuration())) return false;
      }
      if (!getArcsList()
          .equals(other.getArcsList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasStartTime()) {
        hash = (37 * hash) + START_TIME_FIELD_NUMBER;
        hash = (53 * hash) + getStartTime().hashCode();
      }
      if (hasDuration()) {
        hash = (37 * hash) + DURATION_FIELD_NUMBER;
        hash = (53 * hash) + getDuration().hashCode();
      }
      if (getArcsCount() > 0) {
        hash = (37 * hash) + ARCS_FIELD_NUMBER;
        hash = (53 * hash) + getArcsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkLink parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkLink parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkLink parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkLink parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkLink parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkLink parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkLink parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkLink parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkLink parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkLink parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkLink parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkLink parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkLink prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * A Link inside a confusion network
     * </pre>
     *
     * Protobuf type {@code cobaltspeech.cubic.ConfusionNetworkLink}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:cobaltspeech.cubic.ConfusionNetworkLink)
        com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkLinkOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.cobaltspeech.cubic.sdk.CubicOuterClass.internal_static_cobaltspeech_cubic_ConfusionNetworkLink_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.cobaltspeech.cubic.sdk.CubicOuterClass.internal_static_cobaltspeech_cubic_ConfusionNetworkLink_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkLink.class, com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkLink.Builder.class);
      }

      // Construct using com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkLink.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getArcsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (startTimeBuilder_ == null) {
          startTime_ = null;
        } else {
          startTime_ = null;
          startTimeBuilder_ = null;
        }
        if (durationBuilder_ == null) {
          duration_ = null;
        } else {
          duration_ = null;
          durationBuilder_ = null;
        }
        if (arcsBuilder_ == null) {
          arcs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          arcsBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.cobaltspeech.cubic.sdk.CubicOuterClass.internal_static_cobaltspeech_cubic_ConfusionNetworkLink_descriptor;
      }

      @java.lang.Override
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkLink getDefaultInstanceForType() {
        return com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkLink.getDefaultInstance();
      }

      @java.lang.Override
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkLink build() {
        com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkLink result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkLink buildPartial() {
        com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkLink result = new com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkLink(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (startTimeBuilder_ == null) {
          result.startTime_ = startTime_;
        } else {
          result.startTime_ = startTimeBuilder_.build();
        }
        if (durationBuilder_ == null) {
          result.duration_ = duration_;
        } else {
          result.duration_ = durationBuilder_.build();
        }
        if (arcsBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0)) {
            arcs_ = java.util.Collections.unmodifiableList(arcs_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.arcs_ = arcs_;
        } else {
          result.arcs_ = arcsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkLink) {
          return mergeFrom((com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkLink)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkLink other) {
        if (other == com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkLink.getDefaultInstance()) return this;
        if (other.hasStartTime()) {
          mergeStartTime(other.getStartTime());
        }
        if (other.hasDuration()) {
          mergeDuration(other.getDuration());
        }
        if (arcsBuilder_ == null) {
          if (!other.arcs_.isEmpty()) {
            if (arcs_.isEmpty()) {
              arcs_ = other.arcs_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureArcsIsMutable();
              arcs_.addAll(other.arcs_);
            }
            onChanged();
          }
        } else {
          if (!other.arcs_.isEmpty()) {
            if (arcsBuilder_.isEmpty()) {
              arcsBuilder_.dispose();
              arcsBuilder_ = null;
              arcs_ = other.arcs_;
              bitField0_ = (bitField0_ & ~0x00000004);
              arcsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getArcsFieldBuilder() : null;
            } else {
              arcsBuilder_.addAllMessages(other.arcs_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkLink parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkLink) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.Duration startTime_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> startTimeBuilder_;
      /**
       * <pre>
       * Time offset relative to the beginning of audio received by the recognizer
       * and corresponding to the start of this link
       * </pre>
       *
       * <code>.google.protobuf.Duration start_time = 1;</code>
       */
      public boolean hasStartTime() {
        return startTimeBuilder_ != null || startTime_ != null;
      }
      /**
       * <pre>
       * Time offset relative to the beginning of audio received by the recognizer
       * and corresponding to the start of this link
       * </pre>
       *
       * <code>.google.protobuf.Duration start_time = 1;</code>
       */
      public com.google.protobuf.Duration getStartTime() {
        if (startTimeBuilder_ == null) {
          return startTime_ == null ? com.google.protobuf.Duration.getDefaultInstance() : startTime_;
        } else {
          return startTimeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Time offset relative to the beginning of audio received by the recognizer
       * and corresponding to the start of this link
       * </pre>
       *
       * <code>.google.protobuf.Duration start_time = 1;</code>
       */
      public Builder setStartTime(com.google.protobuf.Duration value) {
        if (startTimeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          startTime_ = value;
          onChanged();
        } else {
          startTimeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Time offset relative to the beginning of audio received by the recognizer
       * and corresponding to the start of this link
       * </pre>
       *
       * <code>.google.protobuf.Duration start_time = 1;</code>
       */
      public Builder setStartTime(
          com.google.protobuf.Duration.Builder builderForValue) {
        if (startTimeBuilder_ == null) {
          startTime_ = builderForValue.build();
          onChanged();
        } else {
          startTimeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Time offset relative to the beginning of audio received by the recognizer
       * and corresponding to the start of this link
       * </pre>
       *
       * <code>.google.protobuf.Duration start_time = 1;</code>
       */
      public Builder mergeStartTime(com.google.protobuf.Duration value) {
        if (startTimeBuilder_ == null) {
          if (startTime_ != null) {
            startTime_ =
              com.google.protobuf.Duration.newBuilder(startTime_).mergeFrom(value).buildPartial();
          } else {
            startTime_ = value;
          }
          onChanged();
        } else {
          startTimeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Time offset relative to the beginning of audio received by the recognizer
       * and corresponding to the start of this link
       * </pre>
       *
       * <code>.google.protobuf.Duration start_time = 1;</code>
       */
      public Builder clearStartTime() {
        if (startTimeBuilder_ == null) {
          startTime_ = null;
          onChanged();
        } else {
          startTime_ = null;
          startTimeBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Time offset relative to the beginning of audio received by the recognizer
       * and corresponding to the start of this link
       * </pre>
       *
       * <code>.google.protobuf.Duration start_time = 1;</code>
       */
      public com.google.protobuf.Duration.Builder getStartTimeBuilder() {
        
        onChanged();
        return getStartTimeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Time offset relative to the beginning of audio received by the recognizer
       * and corresponding to the start of this link
       * </pre>
       *
       * <code>.google.protobuf.Duration start_time = 1;</code>
       */
      public com.google.protobuf.DurationOrBuilder getStartTimeOrBuilder() {
        if (startTimeBuilder_ != null) {
          return startTimeBuilder_.getMessageOrBuilder();
        } else {
          return startTime_ == null ?
              com.google.protobuf.Duration.getDefaultInstance() : startTime_;
        }
      }
      /**
       * <pre>
       * Time offset relative to the beginning of audio received by the recognizer
       * and corresponding to the start of this link
       * </pre>
       *
       * <code>.google.protobuf.Duration start_time = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> 
          getStartTimeFieldBuilder() {
        if (startTimeBuilder_ == null) {
          startTimeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>(
                  getStartTime(),
                  getParentForChildren(),
                  isClean());
          startTime_ = null;
        }
        return startTimeBuilder_;
      }

      private com.google.protobuf.Duration duration_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> durationBuilder_;
      /**
       * <pre>
       * Duration of the current link in the confusion network
       * </pre>
       *
       * <code>.google.protobuf.Duration duration = 2;</code>
       */
      public boolean hasDuration() {
        return durationBuilder_ != null || duration_ != null;
      }
      /**
       * <pre>
       * Duration of the current link in the confusion network
       * </pre>
       *
       * <code>.google.protobuf.Duration duration = 2;</code>
       */
      public com.google.protobuf.Duration getDuration() {
        if (durationBuilder_ == null) {
          return duration_ == null ? com.google.protobuf.Duration.getDefaultInstance() : duration_;
        } else {
          return durationBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Duration of the current link in the confusion network
       * </pre>
       *
       * <code>.google.protobuf.Duration duration = 2;</code>
       */
      public Builder setDuration(com.google.protobuf.Duration value) {
        if (durationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          duration_ = value;
          onChanged();
        } else {
          durationBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Duration of the current link in the confusion network
       * </pre>
       *
       * <code>.google.protobuf.Duration duration = 2;</code>
       */
      public Builder setDuration(
          com.google.protobuf.Duration.Builder builderForValue) {
        if (durationBuilder_ == null) {
          duration_ = builderForValue.build();
          onChanged();
        } else {
          durationBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Duration of the current link in the confusion network
       * </pre>
       *
       * <code>.google.protobuf.Duration duration = 2;</code>
       */
      public Builder mergeDuration(com.google.protobuf.Duration value) {
        if (durationBuilder_ == null) {
          if (duration_ != null) {
            duration_ =
              com.google.protobuf.Duration.newBuilder(duration_).mergeFrom(value).buildPartial();
          } else {
            duration_ = value;
          }
          onChanged();
        } else {
          durationBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Duration of the current link in the confusion network
       * </pre>
       *
       * <code>.google.protobuf.Duration duration = 2;</code>
       */
      public Builder clearDuration() {
        if (durationBuilder_ == null) {
          duration_ = null;
          onChanged();
        } else {
          duration_ = null;
          durationBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Duration of the current link in the confusion network
       * </pre>
       *
       * <code>.google.protobuf.Duration duration = 2;</code>
       */
      public com.google.protobuf.Duration.Builder getDurationBuilder() {
        
        onChanged();
        return getDurationFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Duration of the current link in the confusion network
       * </pre>
       *
       * <code>.google.protobuf.Duration duration = 2;</code>
       */
      public com.google.protobuf.DurationOrBuilder getDurationOrBuilder() {
        if (durationBuilder_ != null) {
          return durationBuilder_.getMessageOrBuilder();
        } else {
          return duration_ == null ?
              com.google.protobuf.Duration.getDefaultInstance() : duration_;
        }
      }
      /**
       * <pre>
       * Duration of the current link in the confusion network
       * </pre>
       *
       * <code>.google.protobuf.Duration duration = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> 
          getDurationFieldBuilder() {
        if (durationBuilder_ == null) {
          durationBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>(
                  getDuration(),
                  getParentForChildren(),
                  isClean());
          duration_ = null;
        }
        return durationBuilder_;
      }

      private java.util.List<com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkArc> arcs_ =
        java.util.Collections.emptyList();
      private void ensureArcsIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          arcs_ = new java.util.ArrayList<com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkArc>(arcs_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkArc, com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkArc.Builder, com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkArcOrBuilder> arcsBuilder_;

      /**
       * <pre>
       * Arcs between this link
       * </pre>
       *
       * <code>repeated .cobaltspeech.cubic.ConfusionNetworkArc arcs = 3;</code>
       */
      public java.util.List<com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkArc> getArcsList() {
        if (arcsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(arcs_);
        } else {
          return arcsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Arcs between this link
       * </pre>
       *
       * <code>repeated .cobaltspeech.cubic.ConfusionNetworkArc arcs = 3;</code>
       */
      public int getArcsCount() {
        if (arcsBuilder_ == null) {
          return arcs_.size();
        } else {
          return arcsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Arcs between this link
       * </pre>
       *
       * <code>repeated .cobaltspeech.cubic.ConfusionNetworkArc arcs = 3;</code>
       */
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkArc getArcs(int index) {
        if (arcsBuilder_ == null) {
          return arcs_.get(index);
        } else {
          return arcsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Arcs between this link
       * </pre>
       *
       * <code>repeated .cobaltspeech.cubic.ConfusionNetworkArc arcs = 3;</code>
       */
      public Builder setArcs(
          int index, com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkArc value) {
        if (arcsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureArcsIsMutable();
          arcs_.set(index, value);
          onChanged();
        } else {
          arcsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Arcs between this link
       * </pre>
       *
       * <code>repeated .cobaltspeech.cubic.ConfusionNetworkArc arcs = 3;</code>
       */
      public Builder setArcs(
          int index, com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkArc.Builder builderForValue) {
        if (arcsBuilder_ == null) {
          ensureArcsIsMutable();
          arcs_.set(index, builderForValue.build());
          onChanged();
        } else {
          arcsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Arcs between this link
       * </pre>
       *
       * <code>repeated .cobaltspeech.cubic.ConfusionNetworkArc arcs = 3;</code>
       */
      public Builder addArcs(com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkArc value) {
        if (arcsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureArcsIsMutable();
          arcs_.add(value);
          onChanged();
        } else {
          arcsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Arcs between this link
       * </pre>
       *
       * <code>repeated .cobaltspeech.cubic.ConfusionNetworkArc arcs = 3;</code>
       */
      public Builder addArcs(
          int index, com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkArc value) {
        if (arcsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureArcsIsMutable();
          arcs_.add(index, value);
          onChanged();
        } else {
          arcsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Arcs between this link
       * </pre>
       *
       * <code>repeated .cobaltspeech.cubic.ConfusionNetworkArc arcs = 3;</code>
       */
      public Builder addArcs(
          com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkArc.Builder builderForValue) {
        if (arcsBuilder_ == null) {
          ensureArcsIsMutable();
          arcs_.add(builderForValue.build());
          onChanged();
        } else {
          arcsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Arcs between this link
       * </pre>
       *
       * <code>repeated .cobaltspeech.cubic.ConfusionNetworkArc arcs = 3;</code>
       */
      public Builder addArcs(
          int index, com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkArc.Builder builderForValue) {
        if (arcsBuilder_ == null) {
          ensureArcsIsMutable();
          arcs_.add(index, builderForValue.build());
          onChanged();
        } else {
          arcsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Arcs between this link
       * </pre>
       *
       * <code>repeated .cobaltspeech.cubic.ConfusionNetworkArc arcs = 3;</code>
       */
      public Builder addAllArcs(
          java.lang.Iterable<? extends com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkArc> values) {
        if (arcsBuilder_ == null) {
          ensureArcsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, arcs_);
          onChanged();
        } else {
          arcsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Arcs between this link
       * </pre>
       *
       * <code>repeated .cobaltspeech.cubic.ConfusionNetworkArc arcs = 3;</code>
       */
      public Builder clearArcs() {
        if (arcsBuilder_ == null) {
          arcs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          arcsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Arcs between this link
       * </pre>
       *
       * <code>repeated .cobaltspeech.cubic.ConfusionNetworkArc arcs = 3;</code>
       */
      public Builder removeArcs(int index) {
        if (arcsBuilder_ == null) {
          ensureArcsIsMutable();
          arcs_.remove(index);
          onChanged();
        } else {
          arcsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Arcs between this link
       * </pre>
       *
       * <code>repeated .cobaltspeech.cubic.ConfusionNetworkArc arcs = 3;</code>
       */
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkArc.Builder getArcsBuilder(
          int index) {
        return getArcsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Arcs between this link
       * </pre>
       *
       * <code>repeated .cobaltspeech.cubic.ConfusionNetworkArc arcs = 3;</code>
       */
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkArcOrBuilder getArcsOrBuilder(
          int index) {
        if (arcsBuilder_ == null) {
          return arcs_.get(index);  } else {
          return arcsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Arcs between this link
       * </pre>
       *
       * <code>repeated .cobaltspeech.cubic.ConfusionNetworkArc arcs = 3;</code>
       */
      public java.util.List<? extends com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkArcOrBuilder> 
           getArcsOrBuilderList() {
        if (arcsBuilder_ != null) {
          return arcsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(arcs_);
        }
      }
      /**
       * <pre>
       * Arcs between this link
       * </pre>
       *
       * <code>repeated .cobaltspeech.cubic.ConfusionNetworkArc arcs = 3;</code>
       */
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkArc.Builder addArcsBuilder() {
        return getArcsFieldBuilder().addBuilder(
            com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkArc.getDefaultInstance());
      }
      /**
       * <pre>
       * Arcs between this link
       * </pre>
       *
       * <code>repeated .cobaltspeech.cubic.ConfusionNetworkArc arcs = 3;</code>
       */
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkArc.Builder addArcsBuilder(
          int index) {
        return getArcsFieldBuilder().addBuilder(
            index, com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkArc.getDefaultInstance());
      }
      /**
       * <pre>
       * Arcs between this link
       * </pre>
       *
       * <code>repeated .cobaltspeech.cubic.ConfusionNetworkArc arcs = 3;</code>
       */
      public java.util.List<com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkArc.Builder> 
           getArcsBuilderList() {
        return getArcsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkArc, com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkArc.Builder, com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkArcOrBuilder> 
          getArcsFieldBuilder() {
        if (arcsBuilder_ == null) {
          arcsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkArc, com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkArc.Builder, com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkArcOrBuilder>(
                  arcs_,
                  ((bitField0_ & 0x00000004) != 0),
                  getParentForChildren(),
                  isClean());
          arcs_ = null;
        }
        return arcsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:cobaltspeech.cubic.ConfusionNetworkLink)
    }

    // @@protoc_insertion_point(class_scope:cobaltspeech.cubic.ConfusionNetworkLink)
    private static final com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkLink DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkLink();
    }

    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkLink getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ConfusionNetworkLink>
        PARSER = new com.google.protobuf.AbstractParser<ConfusionNetworkLink>() {
      @java.lang.Override
      public ConfusionNetworkLink parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ConfusionNetworkLink(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ConfusionNetworkLink> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ConfusionNetworkLink> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkLink getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ConfusionNetworkArcOrBuilder extends
      // @@protoc_insertion_point(interface_extends:cobaltspeech.cubic.ConfusionNetworkArc)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Word in the recognized transcript
     * </pre>
     *
     * <code>string word = 1;</code>
     */
    java.lang.String getWord();
    /**
     * <pre>
     * Word in the recognized transcript
     * </pre>
     *
     * <code>string word = 1;</code>
     */
    com.google.protobuf.ByteString
        getWordBytes();

    /**
     * <pre>
     * Confidence estimate between 0 and 1.  A higher number represents a higher
     * likelihood that the word was correctly recognized.
     * </pre>
     *
     * <code>double confidence = 2;</code>
     */
    double getConfidence();
  }
  /**
   * <pre>
   * An Arc inside a Confusion Network Link
   * </pre>
   *
   * Protobuf type {@code cobaltspeech.cubic.ConfusionNetworkArc}
   */
  public  static final class ConfusionNetworkArc extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:cobaltspeech.cubic.ConfusionNetworkArc)
      ConfusionNetworkArcOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ConfusionNetworkArc.newBuilder() to construct.
    private ConfusionNetworkArc(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ConfusionNetworkArc() {
      word_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ConfusionNetworkArc(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              word_ = s;
              break;
            }
            case 17: {

              confidence_ = input.readDouble();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.cobaltspeech.cubic.sdk.CubicOuterClass.internal_static_cobaltspeech_cubic_ConfusionNetworkArc_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.cobaltspeech.cubic.sdk.CubicOuterClass.internal_static_cobaltspeech_cubic_ConfusionNetworkArc_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkArc.class, com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkArc.Builder.class);
    }

    public static final int WORD_FIELD_NUMBER = 1;
    private volatile java.lang.Object word_;
    /**
     * <pre>
     * Word in the recognized transcript
     * </pre>
     *
     * <code>string word = 1;</code>
     */
    public java.lang.String getWord() {
      java.lang.Object ref = word_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        word_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Word in the recognized transcript
     * </pre>
     *
     * <code>string word = 1;</code>
     */
    public com.google.protobuf.ByteString
        getWordBytes() {
      java.lang.Object ref = word_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        word_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CONFIDENCE_FIELD_NUMBER = 2;
    private double confidence_;
    /**
     * <pre>
     * Confidence estimate between 0 and 1.  A higher number represents a higher
     * likelihood that the word was correctly recognized.
     * </pre>
     *
     * <code>double confidence = 2;</code>
     */
    public double getConfidence() {
      return confidence_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getWordBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, word_);
      }
      if (confidence_ != 0D) {
        output.writeDouble(2, confidence_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getWordBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, word_);
      }
      if (confidence_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, confidence_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkArc)) {
        return super.equals(obj);
      }
      com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkArc other = (com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkArc) obj;

      if (!getWord()
          .equals(other.getWord())) return false;
      if (java.lang.Double.doubleToLongBits(getConfidence())
          != java.lang.Double.doubleToLongBits(
              other.getConfidence())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + WORD_FIELD_NUMBER;
      hash = (53 * hash) + getWord().hashCode();
      hash = (37 * hash) + CONFIDENCE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getConfidence()));
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkArc parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkArc parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkArc parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkArc parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkArc parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkArc parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkArc parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkArc parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkArc parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkArc parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkArc parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkArc parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkArc prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * An Arc inside a Confusion Network Link
     * </pre>
     *
     * Protobuf type {@code cobaltspeech.cubic.ConfusionNetworkArc}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:cobaltspeech.cubic.ConfusionNetworkArc)
        com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkArcOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.cobaltspeech.cubic.sdk.CubicOuterClass.internal_static_cobaltspeech_cubic_ConfusionNetworkArc_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.cobaltspeech.cubic.sdk.CubicOuterClass.internal_static_cobaltspeech_cubic_ConfusionNetworkArc_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkArc.class, com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkArc.Builder.class);
      }

      // Construct using com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkArc.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        word_ = "";

        confidence_ = 0D;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.cobaltspeech.cubic.sdk.CubicOuterClass.internal_static_cobaltspeech_cubic_ConfusionNetworkArc_descriptor;
      }

      @java.lang.Override
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkArc getDefaultInstanceForType() {
        return com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkArc.getDefaultInstance();
      }

      @java.lang.Override
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkArc build() {
        com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkArc result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkArc buildPartial() {
        com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkArc result = new com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkArc(this);
        result.word_ = word_;
        result.confidence_ = confidence_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkArc) {
          return mergeFrom((com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkArc)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkArc other) {
        if (other == com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkArc.getDefaultInstance()) return this;
        if (!other.getWord().isEmpty()) {
          word_ = other.word_;
          onChanged();
        }
        if (other.getConfidence() != 0D) {
          setConfidence(other.getConfidence());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkArc parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkArc) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object word_ = "";
      /**
       * <pre>
       * Word in the recognized transcript
       * </pre>
       *
       * <code>string word = 1;</code>
       */
      public java.lang.String getWord() {
        java.lang.Object ref = word_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          word_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Word in the recognized transcript
       * </pre>
       *
       * <code>string word = 1;</code>
       */
      public com.google.protobuf.ByteString
          getWordBytes() {
        java.lang.Object ref = word_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          word_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Word in the recognized transcript
       * </pre>
       *
       * <code>string word = 1;</code>
       */
      public Builder setWord(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        word_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Word in the recognized transcript
       * </pre>
       *
       * <code>string word = 1;</code>
       */
      public Builder clearWord() {
        
        word_ = getDefaultInstance().getWord();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Word in the recognized transcript
       * </pre>
       *
       * <code>string word = 1;</code>
       */
      public Builder setWordBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        word_ = value;
        onChanged();
        return this;
      }

      private double confidence_ ;
      /**
       * <pre>
       * Confidence estimate between 0 and 1.  A higher number represents a higher
       * likelihood that the word was correctly recognized.
       * </pre>
       *
       * <code>double confidence = 2;</code>
       */
      public double getConfidence() {
        return confidence_;
      }
      /**
       * <pre>
       * Confidence estimate between 0 and 1.  A higher number represents a higher
       * likelihood that the word was correctly recognized.
       * </pre>
       *
       * <code>double confidence = 2;</code>
       */
      public Builder setConfidence(double value) {
        
        confidence_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Confidence estimate between 0 and 1.  A higher number represents a higher
       * likelihood that the word was correctly recognized.
       * </pre>
       *
       * <code>double confidence = 2;</code>
       */
      public Builder clearConfidence() {
        
        confidence_ = 0D;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:cobaltspeech.cubic.ConfusionNetworkArc)
    }

    // @@protoc_insertion_point(class_scope:cobaltspeech.cubic.ConfusionNetworkArc)
    private static final com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkArc DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkArc();
    }

    public static com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkArc getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ConfusionNetworkArc>
        PARSER = new com.google.protobuf.AbstractParser<ConfusionNetworkArc>() {
      @java.lang.Override
      public ConfusionNetworkArc parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ConfusionNetworkArc(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ConfusionNetworkArc> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ConfusionNetworkArc> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.cobaltspeech.cubic.sdk.CubicOuterClass.ConfusionNetworkArc getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_cobaltspeech_cubic_ListModelsRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_cobaltspeech_cubic_ListModelsRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_cobaltspeech_cubic_RecognizeRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_cobaltspeech_cubic_RecognizeRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_cobaltspeech_cubic_StreamingRecognizeRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_cobaltspeech_cubic_StreamingRecognizeRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_cobaltspeech_cubic_CompileContextRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_cobaltspeech_cubic_CompileContextRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_cobaltspeech_cubic_VersionResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_cobaltspeech_cubic_VersionResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_cobaltspeech_cubic_ListModelsResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_cobaltspeech_cubic_ListModelsResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_cobaltspeech_cubic_RecognitionResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_cobaltspeech_cubic_RecognitionResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_cobaltspeech_cubic_CompileContextResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_cobaltspeech_cubic_CompileContextResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_cobaltspeech_cubic_RecognitionConfig_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_cobaltspeech_cubic_RecognitionConfig_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_cobaltspeech_cubic_RecognitionMetadata_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_cobaltspeech_cubic_RecognitionMetadata_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_cobaltspeech_cubic_RecognitionContext_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_cobaltspeech_cubic_RecognitionContext_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_cobaltspeech_cubic_CompiledContext_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_cobaltspeech_cubic_CompiledContext_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_cobaltspeech_cubic_ContextPhrase_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_cobaltspeech_cubic_ContextPhrase_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_cobaltspeech_cubic_RecognitionAudio_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_cobaltspeech_cubic_RecognitionAudio_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_cobaltspeech_cubic_Model_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_cobaltspeech_cubic_Model_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_cobaltspeech_cubic_ModelAttributes_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_cobaltspeech_cubic_ModelAttributes_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_cobaltspeech_cubic_ContextInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_cobaltspeech_cubic_ContextInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_cobaltspeech_cubic_RecognitionResult_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_cobaltspeech_cubic_RecognitionResult_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_cobaltspeech_cubic_RecognitionAlternative_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_cobaltspeech_cubic_RecognitionAlternative_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_cobaltspeech_cubic_WordInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_cobaltspeech_cubic_WordInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_cobaltspeech_cubic_RecognitionConfusionNetwork_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_cobaltspeech_cubic_RecognitionConfusionNetwork_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_cobaltspeech_cubic_ConfusionNetworkLink_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_cobaltspeech_cubic_ConfusionNetworkLink_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_cobaltspeech_cubic_ConfusionNetworkArc_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_cobaltspeech_cubic_ConfusionNetworkArc_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\013cubic.proto\022\022cobaltspeech.cubic\032\034googl" +
      "e/api/annotations.proto\032\036google/protobuf" +
      "/duration.proto\032\033google/protobuf/empty.p" +
      "roto\"\023\n\021ListModelsRequest\"~\n\020RecognizeRe" +
      "quest\0225\n\006config\030\001 \001(\0132%.cobaltspeech.cub" +
      "ic.RecognitionConfig\0223\n\005audio\030\002 \001(\0132$.co" +
      "baltspeech.cubic.RecognitionAudio\"\226\001\n\031St" +
      "reamingRecognizeRequest\0227\n\006config\030\001 \001(\0132" +
      "%.cobaltspeech.cubic.RecognitionConfigH\000" +
      "\0225\n\005audio\030\002 \001(\0132$.cobaltspeech.cubic.Rec" +
      "ognitionAudioH\000B\t\n\007request\"l\n\025CompileCon" +
      "textRequest\022\020\n\010model_id\030\001 \001(\t\022\r\n\005token\030\002" +
      " \001(\t\0222\n\007phrases\030\003 \003(\0132!.cobaltspeech.cub" +
      "ic.ContextPhrase\"0\n\017VersionResponse\022\r\n\005c" +
      "ubic\030\001 \001(\t\022\016\n\006server\030\002 \001(\t\"?\n\022ListModels" +
      "Response\022)\n\006models\030\001 \003(\0132\031.cobaltspeech." +
      "cubic.Model\"M\n\023RecognitionResponse\0226\n\007re" +
      "sults\030\001 \003(\0132%.cobaltspeech.cubic.Recogni" +
      "tionResult\"N\n\026CompileContextResponse\0224\n\007" +
      "context\030\001 \001(\0132#.cobaltspeech.cubic.Compi" +
      "ledContext\"\202\004\n\021RecognitionConfig\022\020\n\010mode" +
      "l_id\030\001 \001(\t\022F\n\016audio_encoding\030\002 \001(\0162..cob" +
      "altspeech.cubic.RecognitionConfig.Encodi" +
      "ng\022/\n\014idle_timeout\030\003 \001(\0132\031.google.protob" +
      "uf.Duration\022 \n\030enable_word_time_offsets\030" +
      "\004 \001(\010\022\036\n\026enable_word_confidence\030\005 \001(\010\022\035\n" +
      "\025enable_raw_transcript\030\006 \001(\010\022 \n\030enable_c" +
      "onfusion_network\030\007 \001(\010\022\026\n\016audio_channels" +
      "\030\010 \003(\r\0229\n\010metadata\030\t \001(\0132\'.cobaltspeech." +
      "cubic.RecognitionMetadata\0227\n\007context\030\n \001" +
      "(\0132&.cobaltspeech.cubic.RecognitionConte" +
      "xt\"S\n\010Encoding\022\020\n\014RAW_LINEAR16\020\000\022\007\n\003WAV\020" +
      "\001\022\007\n\003MP3\020\002\022\010\n\004FLAC\020\003\022\013\n\007VOX8000\020\004\022\014\n\010ULA" +
      "W8000\020\005\".\n\023RecognitionMetadata\022\027\n\017custom" +
      "_metadata\030\001 \001(\t\"K\n\022RecognitionContext\0225\n" +
      "\010compiled\030\001 \003(\0132#.cobaltspeech.cubic.Com" +
      "piledContext\"\037\n\017CompiledContext\022\014\n\004data\030" +
      "\001 \001(\014\",\n\rContextPhrase\022\014\n\004text\030\001 \001(\t\022\r\n\005" +
      "boost\030\002 \001(\002\" \n\020RecognitionAudio\022\014\n\004data\030" +
      "\001 \001(\014\"Z\n\005Model\022\n\n\002id\030\001 \001(\t\022\014\n\004name\030\002 \001(\t" +
      "\0227\n\nattributes\030\003 \001(\0132#.cobaltspeech.cubi" +
      "c.ModelAttributes\"]\n\017ModelAttributes\022\023\n\013" +
      "sample_rate\030\001 \001(\r\0225\n\014context_info\030\002 \001(\0132" +
      "\037.cobaltspeech.cubic.ContextInfo\"G\n\013Cont" +
      "extInfo\022\030\n\020supports_context\030\001 \001(\010\022\036\n\026all" +
      "owed_context_tokens\030\002 \003(\t\"\277\001\n\021Recognitio" +
      "nResult\022@\n\014alternatives\030\001 \003(\0132*.cobaltsp" +
      "eech.cubic.RecognitionAlternative\022\022\n\nis_" +
      "partial\030\002 \001(\010\022=\n\004cnet\030\003 \001(\0132/.cobaltspee" +
      "ch.cubic.RecognitionConfusionNetwork\022\025\n\r" +
      "audio_channel\030\004 \001(\r\"\222\002\n\026RecognitionAlter" +
      "native\022\022\n\ntranscript\030\001 \001(\t\022\026\n\016raw_transc" +
      "ript\030\006 \001(\t\022\022\n\nconfidence\030\002 \001(\001\022+\n\005words\030" +
      "\003 \003(\0132\034.cobaltspeech.cubic.WordInfo\022/\n\tr" +
      "aw_words\030\007 \003(\0132\034.cobaltspeech.cubic.Word" +
      "Info\022-\n\nstart_time\030\004 \001(\0132\031.google.protob" +
      "uf.Duration\022+\n\010duration\030\005 \001(\0132\031.google.p" +
      "rotobuf.Duration\"\210\001\n\010WordInfo\022\014\n\004word\030\001 " +
      "\001(\t\022\022\n\nconfidence\030\002 \001(\001\022-\n\nstart_time\030\003 " +
      "\001(\0132\031.google.protobuf.Duration\022+\n\010durati" +
      "on\030\004 \001(\0132\031.google.protobuf.Duration\"V\n\033R" +
      "ecognitionConfusionNetwork\0227\n\005links\030\001 \003(" +
      "\0132(.cobaltspeech.cubic.ConfusionNetworkL" +
      "ink\"\251\001\n\024ConfusionNetworkLink\022-\n\nstart_ti" +
      "me\030\001 \001(\0132\031.google.protobuf.Duration\022+\n\010d" +
      "uration\030\002 \001(\0132\031.google.protobuf.Duration" +
      "\0225\n\004arcs\030\003 \003(\0132\'.cobaltspeech.cubic.Conf" +
      "usionNetworkArc\"7\n\023ConfusionNetworkArc\022\014" +
      "\n\004word\030\001 \001(\t\022\022\n\nconfidence\030\002 \001(\0012\344\004\n\005Cub" +
      "ic\022\\\n\007Version\022\026.google.protobuf.Empty\032#." +
      "cobaltspeech.cubic.VersionResponse\"\024\202\323\344\223" +
      "\002\016\022\014/api/version\022t\n\nListModels\022%.cobalts" +
      "peech.cubic.ListModelsRequest\032&.cobaltsp" +
      "eech.cubic.ListModelsResponse\"\027\202\323\344\223\002\021\022\017/" +
      "api/listmodels\022u\n\tRecognize\022$.cobaltspee" +
      "ch.cubic.RecognizeRequest\032\'.cobaltspeech" +
      ".cubic.RecognitionResponse\"\031\202\323\344\223\002\023\"\016/api" +
      "/recognize:\001*\022\205\001\n\022StreamingRecognize\022-.c" +
      "obaltspeech.cubic.StreamingRecognizeRequ" +
      "est\032\'.cobaltspeech.cubic.RecognitionResp" +
      "onse\"\023\202\323\344\223\002\r\022\013/api/stream(\0010\001\022\207\001\n\016Compil" +
      "eContext\022).cobaltspeech.cubic.CompileCon" +
      "textRequest\032*.cobaltspeech.cubic.Compile" +
      "ContextResponse\"\036\202\323\344\223\002\030\"\023/api/compilecon" +
      "text:\001*B<\n\032com.cobaltspeech.cubic.sdkZ\t." +
      ";cubicpb\252\002\022CobaltSpeech.Cubicb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.google.api.AnnotationsProto.getDescriptor(),
          com.google.protobuf.DurationProto.getDescriptor(),
          com.google.protobuf.EmptyProto.getDescriptor(),
        }, assigner);
    internal_static_cobaltspeech_cubic_ListModelsRequest_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_cobaltspeech_cubic_ListModelsRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_cobaltspeech_cubic_ListModelsRequest_descriptor,
        new java.lang.String[] { });
    internal_static_cobaltspeech_cubic_RecognizeRequest_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_cobaltspeech_cubic_RecognizeRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_cobaltspeech_cubic_RecognizeRequest_descriptor,
        new java.lang.String[] { "Config", "Audio", });
    internal_static_cobaltspeech_cubic_StreamingRecognizeRequest_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_cobaltspeech_cubic_StreamingRecognizeRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_cobaltspeech_cubic_StreamingRecognizeRequest_descriptor,
        new java.lang.String[] { "Config", "Audio", "Request", });
    internal_static_cobaltspeech_cubic_CompileContextRequest_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_cobaltspeech_cubic_CompileContextRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_cobaltspeech_cubic_CompileContextRequest_descriptor,
        new java.lang.String[] { "ModelId", "Token", "Phrases", });
    internal_static_cobaltspeech_cubic_VersionResponse_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_cobaltspeech_cubic_VersionResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_cobaltspeech_cubic_VersionResponse_descriptor,
        new java.lang.String[] { "Cubic", "Server", });
    internal_static_cobaltspeech_cubic_ListModelsResponse_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_cobaltspeech_cubic_ListModelsResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_cobaltspeech_cubic_ListModelsResponse_descriptor,
        new java.lang.String[] { "Models", });
    internal_static_cobaltspeech_cubic_RecognitionResponse_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_cobaltspeech_cubic_RecognitionResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_cobaltspeech_cubic_RecognitionResponse_descriptor,
        new java.lang.String[] { "Results", });
    internal_static_cobaltspeech_cubic_CompileContextResponse_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_cobaltspeech_cubic_CompileContextResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_cobaltspeech_cubic_CompileContextResponse_descriptor,
        new java.lang.String[] { "Context", });
    internal_static_cobaltspeech_cubic_RecognitionConfig_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_cobaltspeech_cubic_RecognitionConfig_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_cobaltspeech_cubic_RecognitionConfig_descriptor,
        new java.lang.String[] { "ModelId", "AudioEncoding", "IdleTimeout", "EnableWordTimeOffsets", "EnableWordConfidence", "EnableRawTranscript", "EnableConfusionNetwork", "AudioChannels", "Metadata", "Context", });
    internal_static_cobaltspeech_cubic_RecognitionMetadata_descriptor =
      getDescriptor().getMessageTypes().get(9);
    internal_static_cobaltspeech_cubic_RecognitionMetadata_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_cobaltspeech_cubic_RecognitionMetadata_descriptor,
        new java.lang.String[] { "CustomMetadata", });
    internal_static_cobaltspeech_cubic_RecognitionContext_descriptor =
      getDescriptor().getMessageTypes().get(10);
    internal_static_cobaltspeech_cubic_RecognitionContext_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_cobaltspeech_cubic_RecognitionContext_descriptor,
        new java.lang.String[] { "Compiled", });
    internal_static_cobaltspeech_cubic_CompiledContext_descriptor =
      getDescriptor().getMessageTypes().get(11);
    internal_static_cobaltspeech_cubic_CompiledContext_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_cobaltspeech_cubic_CompiledContext_descriptor,
        new java.lang.String[] { "Data", });
    internal_static_cobaltspeech_cubic_ContextPhrase_descriptor =
      getDescriptor().getMessageTypes().get(12);
    internal_static_cobaltspeech_cubic_ContextPhrase_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_cobaltspeech_cubic_ContextPhrase_descriptor,
        new java.lang.String[] { "Text", "Boost", });
    internal_static_cobaltspeech_cubic_RecognitionAudio_descriptor =
      getDescriptor().getMessageTypes().get(13);
    internal_static_cobaltspeech_cubic_RecognitionAudio_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_cobaltspeech_cubic_RecognitionAudio_descriptor,
        new java.lang.String[] { "Data", });
    internal_static_cobaltspeech_cubic_Model_descriptor =
      getDescriptor().getMessageTypes().get(14);
    internal_static_cobaltspeech_cubic_Model_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_cobaltspeech_cubic_Model_descriptor,
        new java.lang.String[] { "Id", "Name", "Attributes", });
    internal_static_cobaltspeech_cubic_ModelAttributes_descriptor =
      getDescriptor().getMessageTypes().get(15);
    internal_static_cobaltspeech_cubic_ModelAttributes_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_cobaltspeech_cubic_ModelAttributes_descriptor,
        new java.lang.String[] { "SampleRate", "ContextInfo", });
    internal_static_cobaltspeech_cubic_ContextInfo_descriptor =
      getDescriptor().getMessageTypes().get(16);
    internal_static_cobaltspeech_cubic_ContextInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_cobaltspeech_cubic_ContextInfo_descriptor,
        new java.lang.String[] { "SupportsContext", "AllowedContextTokens", });
    internal_static_cobaltspeech_cubic_RecognitionResult_descriptor =
      getDescriptor().getMessageTypes().get(17);
    internal_static_cobaltspeech_cubic_RecognitionResult_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_cobaltspeech_cubic_RecognitionResult_descriptor,
        new java.lang.String[] { "Alternatives", "IsPartial", "Cnet", "AudioChannel", });
    internal_static_cobaltspeech_cubic_RecognitionAlternative_descriptor =
      getDescriptor().getMessageTypes().get(18);
    internal_static_cobaltspeech_cubic_RecognitionAlternative_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_cobaltspeech_cubic_RecognitionAlternative_descriptor,
        new java.lang.String[] { "Transcript", "RawTranscript", "Confidence", "Words", "RawWords", "StartTime", "Duration", });
    internal_static_cobaltspeech_cubic_WordInfo_descriptor =
      getDescriptor().getMessageTypes().get(19);
    internal_static_cobaltspeech_cubic_WordInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_cobaltspeech_cubic_WordInfo_descriptor,
        new java.lang.String[] { "Word", "Confidence", "StartTime", "Duration", });
    internal_static_cobaltspeech_cubic_RecognitionConfusionNetwork_descriptor =
      getDescriptor().getMessageTypes().get(20);
    internal_static_cobaltspeech_cubic_RecognitionConfusionNetwork_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_cobaltspeech_cubic_RecognitionConfusionNetwork_descriptor,
        new java.lang.String[] { "Links", });
    internal_static_cobaltspeech_cubic_ConfusionNetworkLink_descriptor =
      getDescriptor().getMessageTypes().get(21);
    internal_static_cobaltspeech_cubic_ConfusionNetworkLink_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_cobaltspeech_cubic_ConfusionNetworkLink_descriptor,
        new java.lang.String[] { "StartTime", "Duration", "Arcs", });
    internal_static_cobaltspeech_cubic_ConfusionNetworkArc_descriptor =
      getDescriptor().getMessageTypes().get(22);
    internal_static_cobaltspeech_cubic_ConfusionNetworkArc_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_cobaltspeech_cubic_ConfusionNetworkArc_descriptor,
        new java.lang.String[] { "Word", "Confidence", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(com.google.api.AnnotationsProto.http);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    com.google.api.AnnotationsProto.getDescriptor();
    com.google.protobuf.DurationProto.getDescriptor();
    com.google.protobuf.EmptyProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
